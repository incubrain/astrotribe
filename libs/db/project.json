{
  "name": "@astronera/db",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "root": "libs/db",
  "sourceRoot": "libs/db/src",
  "projectType": "library",
  "targets": {
    "generate": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["prisma generate --schema=./src/prisma/schema.prisma"],
        "cwd": "libs/db"
      }
    },
    "types": {
      "executor": "nx:run-commands",
      "options": {
        "command": "tsc --emitDeclarationOnly",
        "cwd": "libs/db"
      },
      "dependsOn": ["generate"]
    },
    "copy-prisma": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["mkdir -p dist/generated", "cp -r src/generated/client dist/generated/"],
        "cwd": "libs/db"
      },
      "dependsOn": ["generate", "types"]
    },

    "clean": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "echo 'ðŸ§¹ Starting cleanup of generated files...'",
          "mkdir -p .tmp_prisma",
          "cp src/generated/client/index.d.ts .tmp_prisma/ 2>/dev/null || true",
          "cp src/generated/client/schema.prisma .tmp_prisma/ 2>/dev/null || true",
          "cp src/generated/client/package.json .tmp_prisma/ 2>/dev/null || true",
          "rm -rf src/generated",
          "mkdir -p src/generated/client",
          "cp .tmp_prisma/* src/generated/client/ 2>/dev/null || true",
          "rm -rf .tmp_prisma",
          "echo 'âœ¨ Cleanup complete'"
        ],
        "dependsOn": ["generate", "types", "copy-prisma"],
        "parallel": false,
        "parallelism": false,
        "cwd": "libs/db"
      }
    },
    "build": {
      "executor": "@nx/vite:build",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "libs/db/dist"
      },
      "dependsOn": ["clean"]
    }
  }
}
