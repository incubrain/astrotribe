generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "views"]
  engineType      = "binary"
  mapperType      = "default"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_DIRECT_URL")
  schemas   = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                 String?            @db.Uuid
  id                          String             @id @db.Uuid
  aud                         String?            @db.VarChar(255)
  role                        String?            @db.VarChar(255)
  email                       String?            @db.VarChar(255)
  encrypted_password          String?            @db.VarChar(255)
  email_confirmed_at          DateTime?          @db.Timestamptz(6)
  invited_at                  DateTime?          @db.Timestamptz(6)
  confirmation_token          String?            @db.VarChar(255)
  confirmation_sent_at        DateTime?          @db.Timestamptz(6)
  recovery_token              String?            @db.VarChar(255)
  recovery_sent_at            DateTime?          @db.Timestamptz(6)
  email_change_token_new      String?            @db.VarChar(255)
  email_change                String?            @db.VarChar(255)
  email_change_sent_at        DateTime?          @db.Timestamptz(6)
  last_sign_in_at             DateTime?          @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?          @db.Timestamptz(6)
  updated_at                  DateTime?          @db.Timestamptz(6)
  phone                       String?            @unique
  phone_confirmed_at          DateTime?          @db.Timestamptz(6)
  phone_change                String?            @default("")
  phone_change_token          String?            @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?          @db.Timestamptz(6)
  confirmed_at                DateTime?          @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?            @default("") @db.VarChar(255)
  email_change_confirm_status Int?               @default(0) @db.SmallInt
  banned_until                DateTime?          @db.Timestamptz(6)
  reauthentication_token      String?            @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?          @db.Timestamptz(6)
  is_sso_user                 Boolean            @default(false)
  deleted_at                  DateTime?          @db.Timestamptz(6)
  is_anonymous                Boolean            @default(false)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  one_time_tokens             one_time_tokens[]
  sessions                    sessions[]
  bookmark_folders            bookmark_folders[]
  bookmarks                   bookmarks[]
  user_profiles               user_profiles?
  votes                       votes[]

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ad_daily_metrics {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  variant_id  String?      @db.Uuid
  date        DateTime     @db.Date
  views       Int?         @default(0)
  clicks      Int?         @default(0)
  created_at  DateTime?    @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?    @default(now()) @db.Timestamptz(6)
  ad_variants ad_variants? @relation(fields: [variant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([variant_id, date])
  @@index([variant_id, date], map: "idx_ad_metrics_date")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ad_packages {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String    @db.VarChar(255)
  position       String    @db.VarChar(50)
  active         Boolean?  @default(true)
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamptz(6)
  description    String
  price          Decimal   @db.Decimal(10, 2)
  features       String[]
  expected_ctr   Decimal?  @db.Decimal(5, 2)
  avg_roi        Decimal?  @db.Decimal(5, 2)
  view_frequency Decimal?  @default(1.0) @db.Decimal(4, 2)
  ads            ads[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ad_variants {
  id                  String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ad_id               String             @db.Uuid
  content             Json
  is_control          Boolean?           @default(false)
  active              Boolean?           @default(true)
  created_at          DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?          @default(now()) @db.Timestamptz(6)
  performance_metrics Json?              @default("{\"ctr\": null, \"bounceRate\": null, \"avgEngagementTime\": null}")
  ad_daily_metrics    ad_daily_metrics[]
  ads                 ads                @relation(fields: [ad_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model addresses {
  id            Int            @id
  street1       String         @db.VarChar(255)
  street2       String?        @db.VarChar(255)
  city_id       Int
  country_id    Int
  name          String?        @db.VarChar
  user_id       String?        @db.Uuid
  is_primary    Boolean?       @default(false)
  address_type  address_type?
  created_at    DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?      @default(now()) @db.Timestamptz(6)
  company_id    String?        @db.Uuid
  cities        cities         @relation(fields: [city_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_city")
  countries     countries      @relation(fields: [country_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_country")
  companies     companies?     @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_addresses_company_id_fkey")
  user_profiles user_profiles? @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "public_addresses_user_id_fkey")

  @@index([city_id], map: "idx_addresses_city_id")
  @@index([country_id], map: "idx_addresses_country_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ads {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company_id  String?       @db.Uuid
  package_id  String?       @db.Uuid
  start_date  DateTime      @db.Timestamptz(6)
  end_date    DateTime      @db.Timestamptz(6)
  active      Boolean?      @default(true)
  created_at  DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?     @default(now()) @db.Timestamptz(6)
  ad_variants ad_variants[]
  companies   companies?    @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ad_packages ad_packages?  @relation(fields: [package_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([start_date, end_date], map: "idx_ads_dates")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model blacklisted_domains {
  id         String   @id @default(dbgenerated("extensions.gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  url        String   @unique
  reason     String?

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model blacklisted_urls {
  id         Int        @id @default(autoincrement())
  url        String     @unique
  reason     String?
  created_at DateTime?  @default(now()) @db.Timestamp(6)
  company_id String?    @db.Uuid
  companies  companies? @relation(fields: [company_id], references: [id], onDelete: Cascade, map: "public_blacklisted_urls_company_id_fkey")

  @@index([url], map: "idx_blacklisted_urls_url")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bookmark_folders {
  id                     String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                String                @db.Uuid
  name                   String                @db.VarChar(255)
  color                  String?               @default("#94A3B8") @db.VarChar(7)
  parent_id              String?               @db.Uuid
  is_default             Boolean?              @default(false)
  is_favorite            Boolean?              @default(false)
  position               Int?                  @default(0)
  path                   Unsupported("ltree")?
  created_at             DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?             @default(now()) @db.Timestamptz(6)
  bookmark_folders       bookmark_folders?     @relation("bookmark_foldersTobookmark_folders", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_bookmark_folders bookmark_folders[]    @relation("bookmark_foldersTobookmark_folders")
  users                  users                 @relation(fields: [user_id], references: [id], onDelete: Cascade)
  bookmarks              bookmarks[]

  @@index([path], type: Gist)
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bookmarks {
  id               String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String            @db.Uuid
  content_id       String            @db.Uuid
  content_type     String            @db.VarChar(50)
  created_at       DateTime?         @default(now()) @db.Timestamptz(6)
  folder_id        String?           @db.Uuid
  metadata         Json?
  updated_at       DateTime?         @default(now()) @db.Timestamptz(6)
  contents         contents          @relation(fields: [content_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bookmarks_content_fk")
  bookmark_folders bookmark_folders? @relation(fields: [folder_id], references: [id], onUpdate: NoAction)
  users            users             @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, content_type, content_id])
  @@index([folder_id], map: "idx_bookmarks_folder")
  @@index([user_id, content_type], map: "idx_bookmarks_user_content")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model categories {
  id                 BigInt               @id @default(autoincrement())
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?            @default(now()) @db.Timestamptz(6)
  body               String?              @db.VarChar(255)
  name               String               @unique(map: "categories_title_key") @db.VarChar(255)
  document_id        String?              @db.VarChar(255)
  locale             String?              @db.VarChar(255)
  published_at       String?              @db.VarChar(255)
  companies          companies[]
  content_categories content_categories[]
  feed_categories    feed_categories[]
  news               news[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model cities {
  id         Int         @id
  name       String      @unique @db.VarChar(100)
  country_id Int
  state      String?     @db.VarChar
  addresses  addresses[]
  countries  countries   @relation(fields: [country_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_country")

  @@index([country_id], map: "idx_cities_country_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model classified_urls {
  id                 Int           @id @default(autoincrement())
  url                String        @unique
  predicted_category content_type?
  actual_category    content_type?
  is_reviewed        Boolean?      @default(false)
  added_to_training  Boolean?      @default(false)
  created_at         DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?     @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model comments {
  id                String        @id @default(dbgenerated("extensions.gen_random_uuid()")) @db.Uuid
  content           String
  user_id           String        @db.Uuid
  content_id        String        @db.Uuid
  content_type      content_type
  parent_comment_id String?       @db.Uuid
  created_at        DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?     @default(now()) @db.Timestamptz(6)
  comments          comments?     @relation("commentsTocomments", fields: [parent_comment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_comments    comments[]    @relation("commentsTocomments")
  user_profiles     user_profiles @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([content_id, content_type], map: "idx_comments_content")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model companies {
  name             String?            @db.VarChar(255)
  description      String?
  logo_url         String?
  url              String             @unique(map: "companies_website_url_key")
  social_media_id  Int?
  scrape_frequency scrape_frequency?  @default(monthly)
  category_id      BigInt?
  created_at       DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?          @default(now()) @db.Timestamptz(6)
  founding_year    Int?               @db.SmallInt
  is_government    Boolean?           @default(false)
  category         String?
  failed_count     Int?               @default(0) @db.SmallInt
  is_english       Boolean?
  scrape_rating    Int?               @db.SmallInt
  id               String             @id @unique(map: "companies_id_key1") @db.Uuid
  scraped_at       DateTime?          @db.Timestamptz(6)
  content_status   content_status     @default(draft)
  keywords         Json?
  addresses        addresses[]
  ads              ads[]
  blacklisted_urls blacklisted_urls[]
  social_media     social_media?      @relation(fields: [social_media_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_social_media")
  categories       categories?        @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_companies_category_id_fkey")
  company_contacts company_contacts[]
  company_extras   company_extras[]
  company_urls     company_urls[]
  contacts         contacts[]
  content_sources  content_sources[]
  news             news[]

  @@index([category_id], map: "idx_companies_category")
  @@index([name], map: "idx_companies_name")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model company_contacts {
  id         Int        @id @default(autoincrement())
  contact_id Int
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  updated_at DateTime   @default(now()) @db.Timestamptz(6)
  company_id String?    @db.Uuid
  companies  companies? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_company")
  contacts   contacts   @relation(fields: [contact_id], references: [id], onDelete: Cascade, map: "fk_contact")

  @@index([contact_id], map: "idx_cc_contact_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model company_employees {
  role            String
  job_description String?
  start_date      DateTime?     @default(now()) @db.Timestamptz(6)
  end_date        DateTime?     @db.Timestamptz(6)
  status          Boolean?
  access_level    access_level  @default(viewer)
  created_at      DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?     @default(now()) @db.Timestamptz(6)
  company_id      String?       @db.Uuid
  user_id         String        @db.Uuid
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_profiles   user_profiles @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model company_extras {
  id          Int        @id @default(autoincrement())
  updated_at  DateTime   @default(now()) @db.Timestamptz(6)
  created_at  DateTime   @default(now()) @db.Timestamptz(6)
  url         String     @unique(map: "idx_ce_unique_url")
  success     Boolean?
  category    String
  level       Int        @db.SmallInt
  company_id  String?    @db.Uuid
  body        String?
  found_count Int?       @default(1)
  review      Json?
  companies   companies? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_company")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model company_metrics {
  id                 BigInt              @id @default(autoincrement())
  crawl_id           String              @db.Uuid
  company_id         String              @db.Uuid
  metric_id          Int?
  timestamp          DateTime            @db.Timestamptz(6)
  value              Json
  metric_definitions metric_definitions? @relation(fields: [metric_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([company_id, crawl_id, metric_id, timestamp], map: "idx_company_metrics_company")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model company_urls {
  id         Int        @id @default(autoincrement())
  updated_at DateTime   @default(now()) @db.Timestamptz(6)
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  url        String     @unique
  success    Boolean?
  category   String
  company_id String?    @db.Uuid
  content    String?
  distance   Int?       @db.SmallInt
  companies  companies? @relation(fields: [company_id], references: [id], onDelete: Cascade, map: "public_company_urls_company_id_fkey")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model contacts {
  id               Int                @id
  title            String?            @db.VarChar(100)
  is_primary       Boolean?           @default(false)
  email            String?            @db.VarChar(255)
  contact_type     contact_type?
  privacy_level    privacy_level?
  user_id          String?            @db.Uuid
  created_at       DateTime?          @default(now()) @db.Timestamp(6)
  updated_at       DateTime?          @default(now()) @db.Timestamp(6)
  phone            String?            @db.VarChar(50)
  company_id       String?            @db.Uuid
  company_contacts company_contacts[]
  companies        companies?         @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_company")
  user_profiles    user_profiles?     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model content_categories {
  content_id  String     @db.Uuid
  category_id BigInt
  is_primary  Boolean
  categories  categories @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  contents    contents   @relation(fields: [content_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([content_id, category_id])
  @@index([category_id, is_primary], map: "idx_content_categories")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model content_source_visits {
  id            String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content_id    String         @db.Uuid
  user_id       String?        @db.Uuid
  created_at    DateTime?      @default(now()) @db.Timestamptz(6)
  contents      contents       @relation(fields: [content_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_profiles user_profiles? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([content_id], map: "idx_content_source_visits_content_id")
  @@index([created_at], map: "idx_content_source_visits_created_at")
  @@index([user_id], map: "idx_content_source_visits_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model content_sources {
  id               BigInt           @id(map: "content_sources_pkey1") @default(autoincrement())
  url              String           @unique(map: "content_sources_url_key1")
  content_type     content_type
  scrape_frequency scrape_frequency
  created_at       DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?        @default(now()) @db.Timestamptz(6)
  refreshed_at     DateTime?        @db.Timestamptz(6)
  has_failed       Boolean?         @default(false)
  failed_count     Int?             @default(0) @db.SmallInt
  priority         priority
  hash             BigInt?
  scraped_at       DateTime?        @db.Timestamptz(6)
  expected_count   Int?             @default(10) @db.SmallInt
  company_id       String?          @db.Uuid
  rss_urls         String[]
  companies        companies?       @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  feed_sources     feed_sources[]
  news             news[]

  @@index([url], map: "idx_content_sources_url")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model content_statuses {
  id             String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  content_id     String         @db.Uuid
  notes          String?
  created_at     DateTime?      @default(now()) @db.Timestamptz(6)
  content_status content_status
  contents       contents       @relation(fields: [content_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([content_id], map: "idx_content_statuses_content_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model content_tags {
  content_id String   @db.Uuid
  tag_id     Int
  contents   contents @relation(fields: [content_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tags       tags     @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([content_id, tag_id])
  @@index([tag_id], map: "idx_content_tags")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model contents {
  id                    String                  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  content_type          content_type            @default(companies)
  title                 String?
  created_at            DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?               @default(now()) @db.Timestamptz(6)
  url                   String                  @unique
  rss_url               String?
  hot_score             Float?                  @default(0)
  bookmarks             bookmarks[]
  content_categories    content_categories[]
  content_source_visits content_source_visits[]
  content_statuses      content_statuses[]
  content_tags          content_tags[]
  news                  news?
  newsletters           newsletters?
  research              research?

  @@index([content_type], map: "idx_content_type")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model countries {
  id        Int         @id
  name      String      @unique @db.VarChar(100)
  code      String      @db.VarChar(2)
  code_3    String?     @db.VarChar
  addresses addresses[]
  cities    cities[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_payments {
  id                     Int                     @id @default(autoincrement())
  user_id                String                  @db.Uuid
  subscription_id        Int?
  payment_provider_id    Int
  external_payment_id    String                  @db.VarChar(255)
  external_order_id      String?                 @db.VarChar(255)
  amount                 Decimal                 @db.Decimal(10, 2)
  currency               String                  @db.VarChar(3)
  status                 String                  @db.VarChar(50)
  method                 String?                 @db.VarChar(50)
  description            String?
  fee                    Decimal?                @db.Decimal(10, 2)
  tax                    Decimal?                @db.Decimal(10, 2)
  error_code             String?                 @db.VarChar(50)
  error_description      String?
  acquirer_data          Json?
  notes                  Json?
  created_at             DateTime?               @default(now()) @db.Timestamptz(6)
  order_id               String?
  invoice_id             String?
  international          Boolean?
  amount_refunded        Decimal?                @db.Decimal(10, 2)
  amount_transferred     Decimal?                @db.Decimal(10, 2)
  refund_status          String?
  captured               Boolean?
  bank                   String?
  wallet                 String?
  vpa                    String?
  error_source           String?
  error_step             String?
  error_reason           String?
  payment_providers      payment_providers       @relation(fields: [payment_provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customer_subscriptions customer_subscriptions? @relation(fields: [subscription_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_profiles          user_profiles           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customer_refunds       customer_refunds[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_processed_webhooks {
  id           Int      @id(map: "customers_processed_webhooks_pkey") @default(autoincrement())
  event_id     String   @unique(map: "customers_processed_webhooks_event_id_key")
  event_type   String
  processed_at DateTime @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_refunds {
  id                 Int               @id @default(autoincrement())
  payment_id         Int
  external_refund_id String            @db.VarChar(255)
  amount             Decimal           @db.Decimal(10, 2)
  status             String            @db.VarChar(50)
  speed_processed    String?           @db.VarChar(20)
  speed_requested    String?           @db.VarChar(20)
  notes              Json?
  created_at         DateTime?         @default(now()) @db.Timestamptz(6)
  currency           String?
  receipt            String?
  acquirer_data      Json?
  batch_id           String?
  customer_payments  customer_payments @relation(fields: [payment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_subscription_plans {
  id                     Int                      @id @default(autoincrement())
  external_plan_id       String?                  @unique @db.VarChar(255)
  name                   String                   @db.VarChar(100)
  description            String?
  interval               Int
  interval_type          String                   @db.VarChar(20)
  monthly_amount         Decimal                  @db.Decimal(10, 2)
  annual_amount          Decimal                  @db.Decimal(10, 2)
  currency               String                   @db.VarChar(3)
  is_active              Boolean?                 @default(true)
  created_at             DateTime?                @db.Timestamptz(6)
  updated_at             DateTime?                @db.Timestamptz(6)
  features               Json?
  customer_subscriptions customer_subscriptions[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_subscriptions {
  id                          Int                         @id @default(autoincrement())
  user_id                     String                      @db.Uuid
  plan_id                     Int
  payment_provider_id         Int
  external_subscription_id    String                      @db.VarChar(255)
  status                      String                      @db.VarChar(50)
  quantity                    Int?                        @default(1)
  current_start               DateTime                    @db.Timestamptz(6)
  current_end                 DateTime                    @db.Timestamptz(6)
  ended_at                    DateTime?                   @db.Timestamptz(6)
  cancel_at_period_end        Boolean?                    @default(false)
  total_count                 Int?
  paid_count                  Int?
  remaining_count             Int?
  auth_attempts               Int?                        @default(0)
  created_at                  DateTime?                   @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?                   @default(now()) @db.Timestamptz(6)
  type                        Int?
  charge_at                   DateTime?                   @db.Timestamptz(6)
  start_at                    DateTime?                   @db.Timestamptz(6)
  end_at                      DateTime?                   @db.Timestamptz(6)
  customer_notify             Boolean?
  expire_by                   DateTime?                   @db.Timestamptz(6)
  short_url                   String?
  has_scheduled_changes       Boolean?
  change_scheduled_at         DateTime?                   @db.Timestamptz(6)
  source                      String?
  offer_id                    String?
  pause_initiated_by          String?
  cancel_initiated_by         String?
  notes                       Json?
  customer_payments           customer_payments[]
  payment_providers           payment_providers           @relation(fields: [payment_provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customer_subscription_plans customer_subscription_plans @relation(fields: [plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_profiles               user_profiles               @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model embedding_reviews {
  id                  BigInt                @id(map: "embedding_review_pkey") @default(autoincrement())
  created_at          DateTime              @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?             @default(now()) @db.Timestamptz(6)
  agent_review        Boolean?              @default(false)
  human_review        Boolean?              @default(false)
  notes               String?
  research_embeddings research_embeddings[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model error_logs {
  id             String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  service_name   String         @db.VarChar(100)
  error_type     error_type
  severity       error_severity
  message        String
  stack_trace    String?
  metadata       Json?          @default("{}")
  context        Json?          @default("{}")
  user_id        String?        @db.Uuid
  request_id     String?        @db.Uuid
  correlation_id String?        @db.Uuid
  environment    String         @db.VarChar(50)
  created_at     DateTime?      @default(now()) @db.Timestamptz(6)
  error_hash     String?
  error_pattern  String?
  is_new_pattern Boolean?       @default(true)
  github_repo    String?
  related_errors Json?
  frequency_data Json?
  domain         String?        @db.VarChar

  @@index([created_at(sort: Desc)])
  @@index([error_type])
  @@index([service_name])
  @@index([severity])
  @@index([error_hash], map: "idx_error_hash")
  @@index([error_pattern], map: "idx_error_pattern")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model feature_requests {
  id               String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title            String
  description      String?
  status           String          @default("planned")
  created_at       DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?       @default(now()) @db.Timestamptz(6)
  downvotes        Int?            @default(0)
  engagement_score Int?            @default(0)
  priority_score   Int?            @default(0)
  upvotes          Int?            @default(0)
  feature_votes    feature_votes[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model feature_votes {
  id               String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  feature_id       String           @db.Uuid
  user_id          String           @db.Uuid
  vote_type        Int              @db.SmallInt
  feedback         String?
  created_at       DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?        @default(now()) @db.Timestamptz(6)
  feature_requests feature_requests @relation(fields: [feature_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, feature_id], map: "feature_votes_user_feature_unique")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model feed_categories {
  id          BigInt      @id @default(autoincrement())
  created_at  DateTime    @default(now()) @db.Timestamptz(6)
  feed_id     String?     @db.Uuid
  category_id BigInt?
  categories  categories? @relation(fields: [category_id], references: [id], onDelete: Cascade)
  feeds       feeds?      @relation(fields: [feed_id], references: [id], onDelete: Cascade)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model feed_sources {
  id                BigInt           @id @default(autoincrement())
  feed_id           String?          @db.Uuid
  created_at        DateTime         @default(now()) @db.Timestamptz(6)
  content_source_id BigInt?
  feeds             feeds?           @relation(fields: [feed_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  content_sources   content_sources? @relation(fields: [content_source_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_feed_sources_content_sources")

  @@index([feed_id])
  @@index([content_source_id], map: "idx_feed_sources_source_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model feedbacks {
  id                 Int              @id(map: "feedback_pkey") @default(autoincrement())
  user_id            String?          @db.Uuid
  page_identifier    String           @db.VarChar(255)
  rating             Int?             @default(0)
  feedback_type      feedback_type?
  message            String
  created_at         DateTime         @default(now()) @db.Timestamptz(6)
  updated_at         DateTime         @default(now()) @db.Timestamptz(6)
  device_info        String?
  resolution_comment String?
  feedback_status    feedback_status? @default(new)
  user_profiles      user_profiles?   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model feeds {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  name            String?
  user_id         String?           @db.Uuid
  feed_categories feed_categories[]
  feed_sources    feed_sources[]
  user_profiles   user_profiles?    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model follows {
  id              String          @id @default(dbgenerated("extensions.gen_random_uuid()")) @db.Uuid
  followed_id     String          @db.Uuid
  followed_entity followed_entity
  created_at      DateTime?       @default(now()) @db.Timestamptz(6)
  user_id         String          @db.Uuid
  user_profiles   user_profiles   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, followed_id, followed_entity], map: "follows_unique_follower_following_idx")
  @@index([followed_id, followed_entity], map: "idx_follows_followed")
  @@index([user_id], map: "idx_follows_follower")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model metric_definitions {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  description     String?
  category        String?           @db.VarChar(50)
  type            String            @db.VarChar(50)
  unit            String?           @db.VarChar(50)
  is_dimensional  Boolean?          @default(false)
  company_metrics company_metrics[]
  spider_metrics  spider_metrics[]

  @@unique([name, category])
  @@index([name, category], map: "idx_metric_definitions_name_category")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model news {
  created_at        DateTime         @default(now()) @db.Timestamptz(6)
  updated_at        DateTime         @default(now()) @db.Timestamptz(6)
  title             String?
  body              String?
  category_id       BigInt?          @default(16)
  author            String?
  description       String?
  featured_image    String?
  has_summary       Boolean          @default(false)
  published_at      DateTime?        @db.Timestamptz(6)
  url               String           @unique
  hash              BigInt?
  id                String           @id @unique @db.Uuid
  company_id        String?          @db.Uuid
  failed_count      Int?             @default(0) @db.SmallInt
  scrape_frequency  scrape_frequency @default(daily)
  scraped_at        DateTime?        @default(now()) @db.Timestamptz(6)
  content_status    content_status   @default(draft)
  keywords          Json?
  content_source_id BigInt?
  content_sources   content_sources? @relation(fields: [content_source_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  categories        categories?      @relation(fields: [category_id], references: [id], map: "public_news_category_id_fkey")
  companies         companies?       @relation(fields: [company_id], references: [id], onDelete: Cascade, map: "public_news_company_id_fkey")
  contents          contents         @relation(fields: [id], references: [id], onDelete: Cascade, map: "public_news_id_fkey")
  news_summaries    news_summaries[]

  @@index([content_source_id], map: "idx_news_content_source_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model news_summaries {
  id               String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  news_id          String                 @db.Uuid
  summary          String?
  embedding        Unsupported("vector")?
  version          Int                    @default(1)
  is_current       Boolean?               @default(true)
  created_at       DateTime?              @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?              @default(now()) @db.Timestamptz(6)
  complexity_level complexity_level?      @default(undefined)
  news             news                   @relation(fields: [news_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "news_summaries_news_fk")

  @@index([is_current])
  @@index([news_id])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model news_tags {
  id      Int     @id
  tag_id  Int
  news_id String? @db.Uuid
  tags    tags    @relation(fields: [tag_id], references: [id])

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model newsletters {
  id                String         @id @db.Uuid
  title             String         @db.VarChar(255)
  frequency         String         @db.VarChar(50)
  start_date        DateTime       @db.Timestamptz(6)
  end_date          DateTime       @db.Timestamptz(6)
  generated_content String?
  created_at        DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?      @default(now()) @db.Timestamptz(6)
  content_status    content_status @default(draft)
  contents          contents       @relation(fields: [id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([id], map: "idx_newsletters_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model payment_providers {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique @db.VarChar(50)
  is_active              Boolean?                 @default(true)
  created_at             DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?                @default(now()) @db.Timestamptz(6)
  customer_payments      customer_payments[]
  customer_subscriptions customer_subscriptions[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model plan_permissions {
  id      Int           @id @default(autoincrement())
  plan    app_plan_enum
  feature String        @db.VarChar

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model research {
  created_at          DateTime             @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?            @db.Timestamptz(6)
  published_at        DateTime?            @db.Timestamptz(6)
  title               String?
  version             Int?                 @db.SmallInt
  id                  String               @id @default(dbgenerated("extensions.gen_random_uuid()")) @db.Uuid
  abstract            String?
  keywords            String?
  month               String?              @db.VarChar
  year                String?              @db.VarChar
  abstract_url        String               @unique(map: "research_url_key")
  category            String?
  doi_url             String?
  figure_count        Int?                 @db.SmallInt
  has_embedding       Boolean?
  page_count          Int?                 @db.SmallInt
  pdf_url             String?              @unique
  published_in        String?
  table_count         Int?                 @db.SmallInt
  comments            String?
  is_flagged          Boolean              @default(false)
  authors             Json?
  summary             String?
  content_status      content_status       @default(draft)
  affiliations        Json?
  contents            contents             @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "research_content_fk")
  research_embeddings research_embeddings?

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model research_embeddings {
  id                  Int                    @id @unique @default(autoincrement())
  research_id         String                 @unique @db.Uuid
  chunk               String
  url                 String?                @db.VarChar
  embedding           Unsupported("vector")?
  created_at          DateTime?              @default(now()) @db.Timestamp(6)
  is_flagged          Boolean?               @default(false)
  updated_at          DateTime               @default(now()) @db.Timestamptz(6)
  embedding_review_id BigInt?
  embedding_reviews   embedding_reviews?     @relation(fields: [embedding_review_id], references: [id], onDelete: Cascade, map: "public_research_embeddings_embedding_review_id_fkey")
  research            research               @relation(fields: [research_id], references: [id], onDelete: Cascade)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model responses {
  id         BigInt    @id @unique @default(autoincrement())
  search_id  BigInt
  output     String
  upvotes    Int?      @default(0)
  downvotes  Int?      @default(0)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  searches   searches  @relation(fields: [search_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model role_hierarchy {
  parent_role app_role_enum
  child_role  app_role_enum

  @@id([parent_role, child_role])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model role_permissions {
  id                 Int             @id @default(autoincrement())
  role               app_role_enum
  table_name         String
  conditions         Json?           @default("{}")
  permissions        Json?
  cached_permissions Json?
  inherit_from       app_role_enum[]
  last_updated       DateTime?       @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model role_permissions_materialized {
  role         app_role_enum @id
  permissions  Json
  last_updated DateTime?     @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model searches {
  id          BigInt                 @id @default(autoincrement())
  input       String                 @unique
  created_at  DateTime?              @default(now()) @db.Timestamptz(6)
  embedding   Unsupported("vector")?
  tokens_used Int?                   @db.SmallInt
  user_ids    String[]               @db.Uuid
  responses   responses[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model social_media {
  id            Int         @id @default(autoincrement())
  facebook_url  String?     @db.VarChar(255)
  twitter_url   String?     @db.VarChar(255)
  linkedin_url  String?     @db.VarChar(255)
  instagram_url String?     @db.VarChar(255)
  youtube_url   String?     @db.VarChar
  created_at    DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?   @default(now()) @db.Timestamptz(6)
  companies     companies[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model spider_metrics {
  id                 BigInt              @id @default(autoincrement())
  crawl_id           String              @db.Uuid
  metric_id          Int?
  timestamp          DateTime            @db.Timestamptz(6)
  value              Json
  metric_definitions metric_definitions? @relation(fields: [metric_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([crawl_id, metric_id, timestamp], map: "idx_spider_metrics_crawl")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model strapi_migrations {
  id   Int       @id @default(autoincrement())
  name String?   @db.VarChar(255)
  time DateTime? @db.Timestamp(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model strapi_migrations_internal {
  id   Int       @id @default(autoincrement())
  name String?   @db.VarChar(255)
  time DateTime? @db.Timestamp(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model table_maintenance_log {
  id        Int       @id @default(autoincrement())
  operation String?
  detail    String?
  logged_at DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model table_query_performance {
  query           String?
  avg_duration    Unsupported("interval")?
  execution_count BigInt?
  capture_time    DateTime?                @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model table_sequence_usage {
  sequence_name String?
  current_value BigInt?
  max_value     BigInt?
  capture_time  DateTime? @default(now()) @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model table_statistics {
  table_name             String
  row_count              BigInt?
  table_size             BigInt?
  index_size             BigInt?
  live_tuples            BigInt?
  dead_tuples            BigInt?
  last_vacuum            DateTime? @db.Timestamptz(6)
  last_analyze           DateTime? @db.Timestamptz(6)
  estimated_bloat_ratio  Float?
  buffer_cache_hit_ratio Float?
  index_usage            Json?
  seq_scan_count         BigInt?
  index_scan_count       BigInt?
  capture_time           DateTime  @db.Timestamptz(6)

  @@id([table_name, capture_time])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tags {
  id           Int            @id
  body         String?
  name         String         @unique
  document_id  String?        @db.VarChar(255)
  locale       String?        @db.VarChar(255)
  published_at String?        @db.VarChar(255)
  created_at   DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?      @default(now()) @db.Timestamptz(6)
  content_tags content_tags[]
  news_tags    news_tags[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_metrics {
  id                 String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id            String        @unique @db.Uuid
  total_votes        Int?          @default(0)
  upvote_count       Int?          @default(0)
  downvote_count     Int?          @default(0)
  vote_accuracy      Decimal?      @default(0) @db.Decimal(5, 2)
  current_streak     Int?          @default(0)
  best_streak        Int?          @default(0)
  today_vote_count   Int?          @default(0)
  total_reading_time Int?          @default(0)
  last_vote_date     DateTime?     @db.Timestamptz(6)
  points             Int?          @default(0)
  points_breakdown   Json?         @default("{\"votes\": 0, \"streaks\": 0, \"bookmarks\": 0, \"achievements\": 0, \"perfect_days\": 0, \"source_visits\": 0}")
  interaction_stats  Json?         @default("{\"articles_read\": 0, \"source_visits\": 0, \"total_comments\": 0, \"articles_shared\": 0, \"comment_upvotes\": 0, \"total_bookmarks\": 0, \"favorite_sources\": [], \"categories_engaged\": [], \"peak_activity_hours\": []}")
  achievements       Json?         @default("{\"time\": {\"night_owl\": false, \"full_cycle\": false, \"dawn_patrol\": false, \"lunch_break\": false, \"weekend_warrior\": false}, \"voting\": {\"vote_sage\": false, \"vote_expert\": false, \"vote_legend\": false, \"vote_master\": false, \"vote_initiate\": false, \"vote_enthusiast\": false}, \"sharing\": {\"sharer_i\": false, \"sharer_ii\": false, \"sharer_iii\": false, \"influence_i\": false, \"influence_ii\": false, \"viral_spreader\": false}, \"special\": {\"beta_tester\": false, \"trend_setter\": false, \"early_adopter\": false, \"daily_complete\": false, \"weekly_complete\": false, \"prediction_master\": false}, \"streaks\": {\"streak_legend\": false, \"streak_runner\": false, \"streak_starter\": false, \"streak_champion\": false, \"streak_sprinter\": false, \"streak_marathoner\": false}, \"accuracy\": {\"perfect_day\": false, \"perfect_week\": false, \"accurate_voter_i\": false, \"accurate_voter_ii\": false, \"accurate_voter_iii\": false}, \"beginner\": {\"first_vote\": false, \"first_share\": false, \"first_comment\": false, \"first_bookmark\": false, \"first_source_visit\": false}, \"explorer\": {\"global_viewer\": false, \"source_seeker_i\": false, \"source_seeker_ii\": false, \"source_seeker_iii\": false, \"category_explorer_i\": false, \"category_explorer_ii\": false}, \"bookmarks\": {\"curator\": false, \"collector_i\": false, \"organizer_i\": false, \"collector_ii\": false, \"organizer_ii\": false, \"collector_iii\": false}, \"engagement\": {\"viral_voice\": false, \"commentator_i\": false, \"commentator_ii\": false, \"commentator_iii\": false, \"discussion_starter\": false, \"conversation_master\": false}}")
  titles             Json?         @default("{\"current_title\": \"Stargazer\", \"title_progress\": {}, \"unlocked_titles\": [\"Stargazer\"]}")
  multipliers        Json?         @default("{\"streak_bonus\": 0, \"accuracy_bonus\": 0, \"time_of_day_bonus\": 0, \"current_multiplier\": 1}")
  current_level      Int?          @default(1)
  current_xp         Int?          @default(0)
  xp_to_next_level   Int?          @default(100)
  created_at         DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?     @default(now()) @db.Timestamptz(6)
  user_profiles      user_profiles @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([current_streak], map: "idx_user_metrics_current_streak")
  @@index([points], map: "idx_user_metrics_points")
  @@index([total_votes], map: "idx_user_metrics_total_votes")
  @@index([user_id], map: "idx_user_metrics_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_profiles {
  id                     String                   @id @unique(map: "users_auth_id_key") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email                  String                   @unique(map: "users_email_key")
  given_name             String?
  surname                String?
  username               String?                  @db.VarChar
  dob                    DateTime?                @db.Date
  gender_id              Int?                     @db.SmallInt
  created_at             DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?                @default(now()) @db.Timestamptz(6)
  last_seen              DateTime?                @default(now()) @db.Timestamptz(6)
  avatar                 String?
  introduction           String?
  followed_count         Int?                     @default(0)
  followers_count        Int?                     @default(0)
  plan                   app_plan_enum?           @default(free)
  role                   app_role_enum            @default(user)
  is_active              Boolean?                 @default(false)
  addresses              addresses[]
  comments               comments[]
  company_employees      company_employees[]
  contacts               contacts[]
  content_source_visits  content_source_visits[]
  customer_payments      customer_payments[]
  customer_subscriptions customer_subscriptions[]
  feedbacks              feedbacks[]
  feeds                  feeds[]
  follows                follows[]
  user_metrics           user_metrics?
  users                  users                    @relation(fields: [id], references: [id], onDelete: Cascade, map: "public_user_profiles_id_fkey")

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model votes {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content_type String
  content_id   String    @db.Uuid
  user_id      String    @db.Uuid
  vote_type    Int       @db.SmallInt
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  users        users     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([content_type, content_id, user_id], map: "votes_unique_user_content_vote_idx")
  @@index([content_type, content_id], map: "idx_votes_content")
  @@index([user_id], map: "idx_votes_user")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model blocked_ips {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ip_address      String    @db.Inet
  blocked_at      DateTime? @default(now()) @db.Timestamptz(6)
  blocked_until   DateTime  @db.Timestamptz(6)
  failed_attempts Int?      @default(1)
  reason          String?
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@index([ip_address], map: "idx_blocked_ips_ip")
  @@index([blocked_until], map: "idx_blocked_until")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model referrals {
  id                  String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  referrer_code       String           @db.VarChar(50)
  visitor_id          String           @db.Uuid
  created_at          DateTime?        @default(now()) @db.Timestamptz(6)
  converted_at        DateTime?        @db.Timestamptz(6)
  referral_status     referral_status? @default(pending)
  conversion_value    Decimal?         @db.Decimal(10, 2)
  user_agent          String?
  ip_address          String?          @db.Inet
  landing_page        String?
  utm_source          String?          @db.VarChar(100)
  utm_medium          String?          @db.VarChar(100)
  utm_campaign        String?          @db.VarChar(100)
  device_type         String?          @db.VarChar(50)
  browser             String?          @db.VarChar(50)
  country_code        String?          @db.VarChar(2)
  region              String?          @db.VarChar(100)
  is_suspicious       Boolean?         @default(false)
  security_flags      Json?            @default("[]")
  validation_attempts Int?             @default(0)
  last_failed_attempt DateTime?        @db.Timestamptz(6)
  client_fingerprint  String?

  @@index([created_at], map: "idx_created_at")
  @@index([referrer_code], map: "idx_referrer_code")
  @@index([referral_status], map: "idx_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model referrer_blocks {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  referrer_code String    @unique(map: "idx_referrer_blocks_code") @db.VarChar(50)
  blocked_at    DateTime? @default(now()) @db.Timestamptz(6)
  blocked_by    String    @db.VarChar(100)
  reason        String?
  is_permanent  Boolean?  @default(true)
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

model circuit_breaker_states {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  job_name      String    @unique
  state         String    @default("closed")
  failure_count Int?      @default(0)
  last_failure  DateTime? @db.Timestamptz(6)
  last_success  DateTime? @db.Timestamptz(6)
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)

  @@index([job_name], map: "idx_circuit_breaker_job_name")
  @@schema("public")
}

model job_configs {
  id                         String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                       String        @unique
  schedule                   String?
  priority                   job_priority? @default(normal)
  timeout_ms                 Int?          @default(30000)
  retry_limit                Int?          @default(3)
  circuit_breaker_enabled    Boolean?      @default(true)
  circuit_breaker_threshold  Int?          @default(5)
  circuit_breaker_timeout_ms Int?          @default(300000)
  enabled                    Boolean?      @default(true)
  metadata                   Json?
  created_at                 DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?     @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

model job_locks {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  job_name    String
  lock_key    String
  lock_value  String
  acquired_at DateTime  @default(now()) @db.Timestamptz(6)
  expires_at  DateTime  @db.Timestamptz(6)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([job_name, lock_key])
  @@index([expires_at], map: "idx_job_locks_expires_at")
  @@schema("public")
}

model job_metrics {
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  job_name        String
  job_id          String     @db.Uuid
  status          job_status
  started_at      DateTime   @db.Timestamptz(6)
  completed_at    DateTime?  @db.Timestamptz(6)
  failed_at       DateTime?  @db.Timestamptz(6)
  duration_ms     Int?
  items_processed Int?
  error_message   String?
  error_stack     String?
  metadata        Json?
  created_at      DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?  @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_job_metrics_created_at")
  @@index([job_name], map: "idx_job_metrics_job_name")
  @@index([status], map: "idx_job_metrics_status")
  @@schema("public")
}

model job_queue_stats {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  queue_name      String    @unique
  created_count   Int?      @default(0)
  retry_count     Int?      @default(0)
  active_count    Int?      @default(0)
  completed_count Int?      @default(0)
  cancelled_count Int?      @default(0)
  failed_count    Int?      @default(0)
  total_count     Int?      @default(0)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)
  created_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@index([queue_name], map: "idx_job_queue_stats_queue_name")
  @@schema("public")
}

model job_versions {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  job_name   String
  version    String
  changes    String[]
  config     Json
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  @@unique([job_name, version])
  @@index([created_at], map: "idx_job_versions_created_at")
  @@index([job_name], map: "idx_job_versions_job_name")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model scoring_weights {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @unique
  weight      Float
  description String?
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

model workflow_jobs {
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workflow_id     String     @db.Uuid
  job_id          String     @db.Uuid
  job_name        String
  status          job_status @default(created)
  sequence_number Int
  depends_on      String[]   @default([]) @db.Uuid
  started_at      DateTime?  @db.Timestamptz(6)
  completed_at    DateTime?  @db.Timestamptz(6)
  created_at      DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?  @default(now()) @db.Timestamptz(6)
  workflows       workflows  @relation(fields: [workflow_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([workflow_id, job_name])
  @@index([status], map: "idx_workflow_jobs_status")
  @@index([workflow_id], map: "idx_workflow_jobs_workflow_id")
  @@schema("public")
}

model workflows {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String
  status        job_status      @default(created)
  metadata      Json?
  started_at    DateTime?       @db.Timestamptz(6)
  completed_at  DateTime?       @db.Timestamptz(6)
  created_at    DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?       @default(now()) @db.Timestamptz(6)
  workflow_jobs workflow_jobs[]

  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view security_metrics {
  time_bucket         DateTime? @db.Timestamptz(6)
  total_attempts      BigInt?
  suspicious_attempts BigInt?
  unique_ips          BigInt?
  unique_referrers    BigInt?
  high_attempt_count  BigInt?
  max_attempts        Int?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view error_frequency {
  service_name String?         @db.VarChar(100)
  error_type   error_type?
  severity     error_severity?
  time_bucket  DateTime?       @db.Timestamptz(6)
  error_count  BigInt?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view error_stats {
  calls          BigInt?
  mean_exec_time Float?
  max_exec_time  Float?
  rows           BigInt?
  query          String?
  queryid        BigInt?
  toplevel       Boolean?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view recent_errors {
  created_at   DateTime?       @db.Timestamptz(6)
  service_name String?         @db.VarChar(100)
  error_type   error_type?
  severity     error_severity?
  message      String?
  metadata     Json?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view slow_query_patterns {
  query_id         String?
  occurrence_count BigInt?
  avg_exec_time    Float?
  max_exec_time    Float?
  first_seen       DateTime? @db.Timestamptz(6)
  last_seen        DateTime? @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view error_metrics {
  time_bucket  DateTime?       @db.Timestamptz(6)
  service_name String?         @db.VarChar(100)
  error_type   error_type?
  severity     error_severity?
  error_count  BigInt?

  @@ignore
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum access_level {
  viewer
  editor
  admin
  super_admin

  @@schema("public")
}

enum address_type {
  residential
  headquarters
  office
  factory
  lab
  warehouse
  research
  retail
  showroom
  branch

  @@schema("public")
}

enum app_plan_enum {
  free
  basic
  intermediate
  premium
  enterprise
  custom

  @@schema("public")
}

enum app_role_enum {
  guest
  user
  astroguide
  mentor
  moderator
  tenant_member
  tenant_admin
  tenant_super_admin
  admin
  super_admin
  service_role

  @@schema("public")
}

enum contact_type {
  personal
  company
  professional
  recruitment
  founder

  @@schema("public")
}

enum content_status {
  draft
  pending_agent_action
  pending_agent_review
  pending_human_review
  pending_relevance_check
  irrelevant
  scheduled
  unpublished
  archived
  published
  failed
  pending_crawl
  scraped
  outdated
  updated
  new

  @@schema("public")
}

enum content_type {
  news
  events
  jobs
  research
  companies
  contact
  people
  newsletters
  unknown

  @@schema("public")
}

enum error_severity {
  low
  medium
  high
  critical

  @@schema("public")
}

enum error_type {
  UPLOAD_ERROR
  CONNECTION_ERROR
  AUTHENTICATION_ERROR
  VALIDATION_ERROR
  NOT_FOUND_ERROR
  SERVER_ERROR
  NETWORK_ERROR
  DATABASE_ERROR
  UNKNOWN_ERROR
  SLOW_QUERY
  ERROR_SPIKE
  AUTH_ERROR
  TABLE_ERROR
  TABLE_OPERATION

  @@schema("public")
}

enum feedback_status {
  new
  under_review
  backlog
  working_on
  resolved
  rejected
  deferred

  @@schema("public")
}

enum feedback_type {
  bug_report
  feature_request
  user_interface_issue
  performance_issue
  documentation

  @@schema("public")
}

enum followed_entity {
  company
  user

  @@schema("public")
}

enum news_importance_level {
  high
  medium
  low

  @@schema("public")
}

enum news_relation_type {
  source
  topic
  mention

  @@schema("public")
}

enum priority {
  very_low
  low
  medium
  high
  critical

  @@schema("public")
}

enum privacy_level {
  private
  connected
  public

  @@schema("public")
}

enum scrape_frequency {
  four_times_daily
  twice_daily
  daily
  twice_weekly
  weekly
  bi_weekly
  monthly
  quarterly
  biannual
  annually
  never

  @@schema("public")
}

enum user_status {
  online
  offline

  @@schema("public")
}

enum referral_status {
  pending
  converted
  abandoned

  @@schema("public")
}

enum complexity_level {
  beginner
  intermediate
  expert
  undefined

  @@schema("public")
}

enum job_priority {
  critical
  high
  normal
  low

  @@schema("public")
}

enum job_status {
  created
  active
  completed
  failed
  cancelled
  expired

  @@schema("public")
}
