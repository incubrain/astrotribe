This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2024-11-14T04:19:06.778Z

# File Summary

## Purpose
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

## File Format
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A header with the file path (## File: path/to/file)
  b. The full contents of the file in a code block

## Usage Guidelines
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
- Pay special attention to the Repository Description. These contain important context and guidelines specific to this project.

## Notes
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

- Line numbers have been added to the beginning of each line.

## Additional Info
### User Provided Header
Website application context including shared libraries and layers

For more information about Repomix, visit: https://github.com/yamadashy/repomix

# Repository Structure
```
apps/
  website/
    components/
      about/
        AboutTimeline.vue
      blog/
        article/
          BlogArticle.vue
          BlogArticleAuthor.vue
          BlogArticleAuthorCard.vue
          BlogArticleHero.vue
          BlogArticleInfinateScroll.client.vue
          BlogArticleShare.vue
          BlogArticleToc.vue
        card/
          BlogCard.vue
          BlogCardSkeleton.vue
        BlogAdFloat.client.vue
        BlogCatTag.vue
        BlogFilter.vue
        BlogNavigation.vue
        BlogNews.vue
        BlogPostCaption.vue
        BlogShowcase.vue
      common/
        CommonHero.vue
        CommonTitle.vue
      conference/
        ConferenceAbout.vue
        ConferenceChairperson.vue
        ConferenceScheduleTabs.vue
        ConferenceSpeakerCard.vue
        ConferenceSpeakers.vue
        ConferenceVenue.vue
      footer/
        FooterBottomBar.vue
        FooterCategories.vue
        FooterWebsite.vue
      home/
        FeatureGroup.vue
        HomeButton.vue
        HomeCtaMain.vue
        HomeFeatures.vue
        HomeFeatureTabs.vue
        HomeHeading.vue
        HomeHero.vue
        HomeProductStep.vue
        HomeTestimonial.vue
        HomeTrusted.vue
      landing/
        LandingCTA.vue
        LandingCTASocial.vue
        LandingFeatures.vue
        LandingFuture.vue
        LandingGlass.vue
        LandingHero.vue
        LandingImageCycle.vue
        LandingPricing.vue
        LandingProductSteps.vue
        LandingTestimonials.vue
        LandingTitle.vue
        LandingTrusted.vue
        LandingWebSeries.vue
      OgImage/
        OgImageDefault.vue
      svg/
        SvgStars.vue
      team/
        TeamCard.vue
      AppBackButton.vue
      AppDetectBottom.vue
      AppFeatures.vue
      AppSocialBlock.vue
      AppStars.vue
      AppSwiper.vue
      AppThemeToggle.client.vue
      AppTipTap.vue
      AppVideoModal.vue
      LoginButton.vue
      NavTop.vue
      Pagination.vue
    composables/
      useAnimation.ts
      useMarkdownParser.ts
      useStrapi.ts
    content/
      blog/
        dark-sky-conservation/
          1.why-dark-skies-matter.md
        people-of-space/
          1.evolving-realities-for-people-of-space.md
        space-exploration/
          1.journey-through-space-exploration.md
        sustainable-development/
          1.astronomy-for-social-development.md
      policies/
        1.privacy-policy.md
        2.cookies-policy.md
        3.terms-of-use.md
        4.refund-policy.md
        5.service-delivery.md
    layouts/
      default.vue
    pages/
      blog/
        category/
          [category]/
            page/
              [page].vue
        [title].vue
        index.vue
      policies/
        [name].vue
      projects/
        dark-sky-conference-2023.vue
      team/
        [name].vue
        index.vue
      [...404].vue
      403.vue
      about.vue
      contact.vue
      index.vue
      landing.vue
      too-deep.vue
    server/
      middleware/
        anomaly-detection.ts
        crawler-guard.ts
    types/
      articles.ts
      authors.ts
      categories.ts
      conference.ts
      pages.ts
      roles.ts
      tags.ts
      team.ts
      types.d.ts
    app.vue
    error.vue
    generate-routes.ts
    nuxt.config.ts
    robots.config.ts
    tailwind.config.ts
layers/
  advert/
    .playground/
      app.config.ts
      nuxt.config.ts
    components/
      Advertisement.vue
    plugins/
      error-handler.ts
      sentry.server.ts
    server/
      api/
        advertisement/
          metrics.get.ts
          metrics.post.ts
    nuxt.config.ts
  auth/
    .playground/
      app.config.ts
      nuxt.config.ts
    composables/
      user.current.store.ts
    server/
      middleware/
        cors.ts
    nuxt.config.ts
  base/
    .playground/
      app.config.ts
      nuxt.config.ts
    components/
      image/
        ImageHero.vue
        ImageWithFallback.vue
      Background.vue
      Breadcrumbs.vue
      Glass.vue
      GlobalTimer.vue
      Grid.vue
      HelloWorld.vue
      HoverCard.vue
      Image.vue
      InfiniteScroll.vue
      Loader.vue
      Modal.vue
      NavHamburger.vue
      NewLabel.vue
      Pagination.vue
      Popover.vue
      Resizable.vue
      Sidebar.vue
      SideNav.vue
      SocialBlock.vue
      TabView.vue
      YT.client.vue
    composables/
      utils/
        arrays.ts
        hasValueChanged.ts
        objects.ts
        strings.ts
        time.ts
      ab-test.ts
      analytics.ts
      glass-card.ts
      metrics.ts
      modal.ts
      notification.ts
      settings.store.ts
      social.store.ts
      useMediaQuery.ts
      useNavigation.ts
      utils.ts
    plugins/
      error-handler.ts
      posthog.client.ts
      sentry.client.ts
    types/
      content.ts
      database.ts
      index.ts
      users.ts
    nuxt.config.ts
    supabase-provider.ts
  crud/
    .playground/
      app.config.ts
      nuxt.config.ts
    components/
      Feedback.vue
      Upload.vue
    composables/
      audit.ts
      delete.ts
      fetch.ts
      http-handler.ts
      insert.ts
      loading.store.ts
      local-storage.ts
      main.store.ts
      notification.ts
      pagination.store.ts
      rate-limit.ts
      select.ts
      settings.store.ts
      update.ts
      upload.ts
      useApiDataStore.ts
      useBaseError.ts
      user.current.store.ts
    server/
      utils/
        base.interface.ts
    nuxt.config.ts
libs/
  logger/
    src/
      environment.d.ts
      environment.ts
      error-interface.ts
      handler.ts
      logger.ts
    index.d.ts
    index.ts
shared-runtime.config.ts
```

# Repository Files

## File: apps/website/components/about/AboutTimeline.vue
```vue
 1: <template>
 2:   <div class="relative grid h-full w-full grid-cols-1 gap-4 md:grid-cols-2 xl:gap-8">
 3:     <LandingGlass
 4:       v-for="item in timeline"
 5:       :key="item.title"
 6:       color="emerald"
 7:       :padded="false"
 8:     >
 9:       <div class="flex w-full flex-col justify-center p-6">
10:         <h2 class="text-lg font-semibold leading-7 xl:leading-9">
11:           {{ item.title }}
12:         </h2>
13:         <h4 class="text-sm">
14:           {{ item.date }}
15:         </h4>
16:         <p class="mt-4 text-sm font-normal leading-6">
17:           {{ item.body }}
18:         </p>
19:       </div>
20:     </LandingGlass>
21:   </div>
22: </template>
23: 
24: <script setup lang="ts">
25: type TimelineObject = {
26:   date: string
27:   title: string
28:   body: string
29:   icon: string
30: }
31: 
32: defineProps({
33:   timeline: {
34:     type: Array as PropType<TimelineObject[]>,
35:     required: true,
36:   },
37: })
38: </script>
```

## File: apps/website/components/blog/article/BlogArticle.vue
```vue
  1: <script setup lang="ts">
  2: const { width } = useWindowSize()
  3: 
  4: const expandToc = computed(() => width.value < 1280)
  5: 
  6: const articleContent = ref<HTMLElement | null>(null)
  7: const articleHtml = ref<string>('')
  8: 
  9: const p = defineProps({
 10:   article: {
 11:     type: Object as PropType<ArticleFullT>,
 12:     required: true,
 13:   },
 14: })
 15: 
 16: console.log('Props Article:', p.article)
 17: 
 18: const ast = ref<MDCParserResult | null>(null)
 19: const parse = useMarkdownParser()
 20: 
 21: // Function to render blocks as markdown
 22: const renderBlocksAsMarkdown = (blocks) => {
 23:   return blocks
 24:     .map((block) => {
 25:       if (block.__component === 'shared.rich-text') {
 26:         return block.body
 27:       }
 28:       // Add more conditions for other block types if needed
 29:       return ''
 30:     })
 31:     .join('\n\n')
 32: }
 33: 
 34: onBeforeMount(async () => {
 35:   if (p.article.blocks) {
 36:     const markdown = renderBlocksAsMarkdown(p.article.blocks)
 37:     ast.value = await parse(markdown)
 38:   }
 39: })
 40: 
 41: interface TocLink {
 42:   id: string
 43:   text: string
 44:   depth: number
 45:   children: TocLink[]
 46: }
 47: 
 48: const extractToc = (markdown: any): TocLink[] => {
 49:   const tocLinks: TocLink[] = []
 50:   let currentH2: TocLink | null = null
 51: 
 52:   console.log('Markdown:', markdown)
 53: 
 54:   markdown.forEach((block) => {
 55:     const lines = block.body.split('\n')
 56: 
 57:     lines.forEach((line) => {
 58:       const match = line.match(/^(##|###)\s+(.+)$/)
 59:       if (match) {
 60:         const depth = match[1].length // 2 for h2, 3 for h3
 61:         const text = match[2].trim()
 62: 
 63:         // Generate an id from the text
 64:         const id = text
 65:           .toLowerCase()
 66:           .replace(/\s+/g, '-')
 67:           .replace(/[^\w-]+/g, '')
 68: 
 69:         const tocLink: TocLink = { id, text, depth, children: [] }
 70: 
 71:         if (depth === 2) {
 72:           currentH2 = tocLink
 73:           tocLinks.push(tocLink)
 74:         } else if (depth === 3) {
 75:           if (currentH2) {
 76:             currentH2.children.push(tocLink)
 77:           } else {
 78:             // If there's no current H2, treat H3 as top-level
 79:             tocLinks.push(tocLink)
 80:           }
 81:         }
 82:       }
 83:     })
 84:   })
 85: 
 86:   return tocLinks
 87: }
 88: 
 89: watch(
 90:   () => articleContent.value,
 91:   async (newVal) => {
 92:     if (newVal && ast.value) {
 93:       await new Promise((resolve) => setTimeout(resolve, 1000))
 94:       articleHtml.value = newVal.innerHTML
 95:     }
 96:   },
 97: )
 98: 
 99: console.log('Article:', p.article)
100: </script>
101: 
102: <template>
103:   <div class="max-w-full pb-10">
104:     <main>
105:       <BlogArticleHero :article="article" />
106:       <div
107:         class="padded-x grid grid-cols-[minmax(300px,700px)] justify-center pt-8 xl:grid-cols-[minmax(240px,1fr)_minmax(660px,740px)_minmax(240px,1fr)] xl:gap-8"
108:       >
109:         <div class="w-full xl:col-start-1">
110:           <BlogArticleToc
111:             v-if="article.blocks"
112:             class="background border-color rounded-md border p-4 xl:sticky xl:left-0 xl:top-24 xl:border-none xl:p-0"
113:             :toc="extractToc(article.blocks)"
114:             :updated-at="article.updatedAt"
115:             :expanded="expandToc"
116:           />
117:         </div>
118:         <div class="xl:padded-x xl:col-start-2">
119:           <div class="pb-12">
120:             <div
121:               ref="articleContent"
122:               class="mx-auto space-y-8"
123:             >
124:               <Suspense>
125:                 <MDCRenderer
126:                   v-if="ast?.body"
127:                   class="nuxt-content"
128:                   :body="ast.body"
129:                   :data="ast.data"
130:                 />
131:               </Suspense>
132:             </div>
133:             <BlogArticleShare
134:               :link="article.slug"
135:               :summary="article.description"
136:             />
137:             <BlogArticleAuthorCard :authors="[article.author]" />
138:           </div>
139:         </div>
140:       </div>
141:     </main>
142:   </div>
143: </template>
144: 
145: <style>
146: .nuxt-content p {
147:   font-size: 18px;
148:   margin-bottom: 22px;
149:   line-height: 1.65;
150:   font-family: 'Open Sans', sans-serif;
151: }
152: 
153: .nuxt-content h2,
154: .nuxt-content h3,
155: .nuxt-content h4,
156: .nuxt-content h5,
157: .nuxt-content h6 {
158:   text-decoration: none;
159:   margin-bottom: 18px;
160:   font-family: 'Oswald', 'sans-serif';
161:   font-weight: 700;
162: }
163: 
164: /* Golden Ratio for heading sizes */
165: .nuxt-content h2 {
166:   margin-top: 24px;
167:   font-size: 36px;
168:   line-height: 1.6;
169: }
170: 
171: .nuxt-content h3 {
172:   margin-top: 2.8rem;
173:   font-size: 28px;
174:   line-height: 1.6;
175: }
176: 
177: .nuxt-content h4 {
178:   font-size: 22px;
179:   line-height: 1.3;
180: }
181: 
182: .nuxt-content ul,
183: ol {
184:   margin-bottom: 28px;
185:   font-family: 'Open Sans', sans-serif;
186: }
187: 
188: .nuxt-content ul {
189:   list-style: disc;
190: }
191: 
192: .nuxt-content ol {
193:   list-style: decimal;
194: }
195: 
196: .nuxt-content li {
197:   margin-left: 1.6rem;
198:   font-size: 18px;
199:   margin-bottom: 22px;
200:   line-height: 1.55;
201: }
202: 
203: .nuxt-content p a {
204:   color: #10b981;
205:   text-decoration: none;
206:   font-weight: 500;
207: }
208: 
209: @media (max-width: 768px) {
210:   .nuxt-content p {
211:     font-size: 16px;
212:     line-height: 1.6;
213:     margin-bottom: 16px;
214:     font-family: 'Open Sans', sans-serif;
215:   }
216: 
217:   .nuxt-content li {
218:     font-size: 16px;
219:   }
220: 
221:   .nuxt-content h2 {
222:     margin-top: 10px;
223:     font-size: 30px;
224:     line-height: 1.6;
225:   }
226: 
227:   .nuxt-content h3 {
228:     margin-top: 2.8rem;
229:     font-size: 26px;
230:     line-height: 1.6;
231:   }
232: 
233:   .nuxt-content h4 {
234:     font-size: 22px;
235:     line-height: 1.3;
236:   }
237: 
238:   .nuxt-content li {
239:     margin-left: 1.6rem;
240:     font-size: 16px;
241:     margin-bottom: 22px;
242:     line-height: 1.55;
243:   }
244: }
245: </style>
```

## File: apps/website/components/blog/article/BlogArticleAuthor.vue
```vue
 1: <script setup lang="ts">
 2: import { useDateFormat } from '@vueuse/core'
 3: 
 4: defineProps<{
 5:   authors: any[]
 6:   publishedAt: string
 7: }>()
 8: </script>
 9: 
10: <template>
11:   <div
12:     v-if="authors && authors.length > 0"
13:     class="flex flex-col items-center"
14:   >
15:     <div class="flex items-center">
16:       <template
17:         v-for="(author, index) in authors"
18:         :key="author?.id"
19:       >
20:         <div
21:           v-if="index > 0"
22:           class="text-lg mx-2 font-bold"
23:         >
24:           &
25:         </div>
26:         <div class="flex flex-col items-center">
27:           <IBImage
28:             v-if="author"
29:             :img="{
30:               src: `${author.avatar.url}`,
31:               alt: `${author.name} is an author on the AstronEra Blog`,
32:               width: '44px',
33:               height: '44px',
34:             }"
35:             class="border-color rounded-full border"
36:           />
37:           <p
38:             v-if="author"
39:             class="mt-2 text-center text-sm font-semibold"
40:           >
41:             {{ author.name }}<br />
42:           </p>
43:         </div>
44:       </template>
45:     </div>
46:     <p class="mt-4 text-sm"> Published: {{ useDateFormat(publishedAt, 'DD MMM YYYY').value }} </p>
47:   </div>
48: </template>
49: 
50: <style scoped></style>
```

## File: apps/website/components/blog/article/BlogArticleAuthorCard.vue
```vue
 1: <script setup lang="ts">
 2: defineProps<{
 3:   authors: any[]
 4: }>()
 5: </script>
 6: 
 7: <template>
 8:   <div
 9:     v-if="authors"
10:     class="grid grid-cols-1 gap-4 md:grid-cols-2 xl:gap-8"
11:   >
12:     <div
13:       v-for="(author, i) in authors"
14:       :key="`author-${i}`"
15:       class="border-color foreground flex h-full flex-col items-center gap-4 rounded-xl border p-4 xl:p-8"
16:     >
17:       <div>
18:         <IBImage
19:           v-if="author"
20:           :img="{
21:             src: `${author.avatar.url}`,
22:             alt: `${author.name} is an author on the AstronEra Blog`,
23:             width: 100,
24:             height: 100,
25:           }"
26:           class="h-full rounded-full sm:max-w-[100px]"
27:         />
28:       </div>
29:       <div
30:         v-if="author"
31:         class="w-full space-y-1 text-left"
32:       >
33:         <h4 class="text-xl font-semibold"> About {{ author.name }} </h4>
34:         <div class="flex items-center gap-2">
35:           <!-- <IBSocialBlock
36:             v-if="author.socials"
37:             size="24px"
38:             :socials="author.socials"
39:           /> -->
40:           <PrimeTag class="text-sm uppercase text-primary-600"> follow me </PrimeTag>
41:         </div>
42:         <p class="text-sm">
43:           {{ author.bio }}
44:         </p>
45:       </div>
46:     </div>
47:   </div>
48: </template>
49: 
50: <style scoped></style>
```

## File: apps/website/components/blog/article/BlogArticleHero.vue
```vue
 1: <template>
 2:   <div class="foreground relative flex w-full items-center justify-center pb-12 pt-16">
 3:     <div class="flex w-full max-w-[1140px] flex-col">
 4:       <IBBreadcrumbs class="px-4 py-10" />
 5:       <NuxtImg
 6:         v-if="article.cover"
 7:         provider="strapi"
 8:         :src="article.cover.url.replace('/uploads/', '')"
 9:         :width="article.cover.width"
10:         :height="article.cover.height"
11:         :alt="article.cover.alternativeText || article.title"
12:         class="relative md:rounded-md"
13:       />
14:       <div
15:         class="flex w-full flex-col items-start justify-between gap-12 rounded-md p-3 md:flex-row-reverse"
16:       >
17:         <div class="flex flex-wrap gap-4">
18:           <PrimeTag
19:             v-if="article.category"
20:             :value="article.category.name"
21:             class="text-nowrap text-sm"
22:           />
23:           <PrimeTag
24:             v-for="tag in article.tags"
25:             :key="tag.name"
26:             :value="tag.name"
27:             class="text-nowrap text-sm"
28:           />
29:           <!-- Add tags here if you have them in your data structure -->
30:         </div>
31:         <BlogArticleAuthor
32:           :authors="[article.author]"
33:           :published-at="article.publishedAt"
34:         />
35:       </div>
36:       <div
37:         class="padded-x relative z-10 mx-auto flex w-full max-w-[740px] flex-col items-start gap-8 rounded-md pt-8"
38:       >
39:         <h1 class="font-[Oswald] text-4xl font-semibold lg:text-center xl:text-5xl">
40:           {{ article.title }}
41:         </h1>
42:         <div class="border-color w-full rounded-md border p-4 xl:p-8 bg-primary-950">
43:           <p class="text-xl">
44:             {{ article.description }}
45:           </p>
46:         </div>
47:       </div>
48:     </div>
49:   </div>
50: </template>
51: 
52: <script setup lang="ts">
53: import type { ArticleFullT } from '~/types/articles'
54: 
55: defineProps({
56:   article: {
57:     type: Object as PropType<ArticleFullT>,
58:     required: true,
59:   },
60: })
61: </script>
62: 
63: <style scoped></style>
```

## File: apps/website/components/blog/article/BlogArticleInfinateScroll.client.vue
```vue
 1: <template>
 2:   <div ref="sentinel" />
 3: </template>
 4: 
 5: <script setup lang="ts">
 6: // Infinate Post Scroll
 7: const sentinel = ref<HTMLElement | null>(null)
 8: 
 9: // Trigger emit when sentinel is in view
10: const emit = defineEmits(['infinate-trigger'])
11: 
12: watchEffect((onCleanup) => {
13:   if (!sentinel.value) {
14:     // The sentinel element is not yet in the DOM.
15:     return
16:   }
17: 
18:   const options = {
19:     root: null,
20:     rootMargin: '0px',
21:     threshold: 1.0,
22:   }
23: 
24:   const observer = new IntersectionObserver((entries) => {
25:     entries.forEach((entry) => {
26:       if (entry.isIntersecting) {
27:         emit('infinate-trigger')
28:       }
29:     })
30:   }, options)
31: 
32:   observer.observe(sentinel.value)
33: 
34:   // Remove Sentinel On UnMounted
35:   onCleanup(() => {
36:     if (observer && sentinel.value) {
37:       observer.unobserve(sentinel.value)
38:     }
39:   })
40: })
41: </script>
42: 
43: <style scoped></style>
```

## File: apps/website/components/blog/article/BlogArticleShare.vue
```vue
 1: <template>
 2:   <div class="flex w-full items-center justify-start gap-2 py-12">
 3:     <p>Share</p>
 4:     <PrimeButton
 5:       v-for="platform in socialPlatforms"
 6:       :key="platform.name"
 7:       as="a"
 8:       :href="platform.url"
 9:       :aria-label="`Share article on ${platform.name}`"
10:       target="_blank"
11:       class="p-2"
12:     >
13:       <Icon
14:         :name="platform.icon"
15:         class="inline-block"
16:         size="24px"
17:       />
18:     </PrimeButton>
19:   </div>
20: </template>
21: 
22: <script setup lang="ts">
23: const p = defineProps({
24:   shareText: {
25:     type: String,
26:     default: 'Check out this article!',
27:   },
28:   summary: {
29:     type: String,
30:     default: '',
31:   },
32:   link: {
33:     type: String,
34:     required: true,
35:   },
36: })
37: 
38: const currentUrl = ref()
39: const socialPlatforms = ref([] as any[])
40: onMounted(() => {
41:   if (window) {
42:     currentUrl.value = encodeURIComponent(window.location.href)
43:     socialPlatforms.value = [
44:       {
45:         name: 'Twitter',
46:         icon: 'mdi:twitter',
47:         url: `https://twitter.com/intent/tweet?url=${currentUrl.value}&text=${shareTextEncoded.value}`,
48:       },
49:       {
50:         name: 'Email',
51:         icon: 'mdi:email',
52:         url: `mailto:?subject=${shareTextEncoded.value}&body=${currentUrl.value}`,
53:       },
54:     ]
55:   }
56: })
57: const shareTextEncoded = computed(() => encodeURIComponent(p.shareText))
58: </script>
59: 
60: <style scoped></style>
```

## File: apps/website/components/blog/article/BlogArticleToc.vue
```vue
  1: <script setup lang="ts">
  2: import { useDateFormat } from '@vueuse/core'
  3: 
  4: type TOCItem = {
  5:   id: string
  6:   depth: number
  7:   text: string
  8:   children?: TOCItem[]
  9: }
 10: 
 11: const p = defineProps({
 12:   toc: {
 13:     type: Array as PropType<TOCItem[]>,
 14:     required: true,
 15:   },
 16:   updatedAt: {
 17:     type: String,
 18:     required: true,
 19:   },
 20:   expanded: {
 21:     type: Boolean,
 22:     default: false,
 23:   },
 24: })
 25: 
 26: const activeSection = ref('')
 27: 
 28: const onScroll = () => {
 29:   let currentSection = ''
 30:   p.toc.forEach((section) => {
 31:     const element = document.getElementById(section.id)
 32:     if (element && window.scrollY >= element.offsetTop - 200) {
 33:       currentSection = section.id
 34:     }
 35:     section.children?.forEach((child) => {
 36:       const childElement = document.getElementById(child.id)
 37:       if (childElement && window.scrollY >= childElement.offsetTop - 200) {
 38:         currentSection = child.id
 39:       }
 40:     })
 41:   })
 42:   activeSection.value = currentSection
 43: }
 44: 
 45: const isActiveSection = (sectionId: string) => {
 46:   return activeSection.value === sectionId
 47: }
 48: 
 49: const isSectionOrChildActive = (section: TOCItem) => {
 50:   if (isActiveSection(section.id)) {
 51:     return true
 52:   }
 53:   return section.children?.some((child) => isActiveSection(child.id)) ?? false
 54: }
 55: 
 56: onMounted(() => {
 57:   window.addEventListener('scroll', onScroll)
 58: })
 59: 
 60: onUnmounted(() => {
 61:   window.removeEventListener('scroll', onScroll)
 62: })
 63: </script>
 64: 
 65: <template>
 66:   <div class="relative text-base">
 67:     <div class="flex gap-2 pb-2">
 68:       <PrimeTag :value="`Updated ${useDateFormat(updatedAt, 'DD MMM YYYY').value}`" />
 69:     </div>
 70:     <PrimeAccordion value="0">
 71:       <PrimeAccordionPanel value="0">
 72:         <PrimeAccordionHeader class="flex gap-4 bg-primary-800 py-2 px-4 rounded-md items-center">
 73:           <h3 class="text-lg font-semibold"> Table of Contents </h3>
 74:         </PrimeAccordionHeader>
 75:         <PrimeAccordionContent>
 76:           <ul>
 77:             <li
 78:               v-for="item in toc"
 79:               :key="item.id"
 80:               class="py-1"
 81:             >
 82:               <NuxtLink
 83:                 class="text-lg font-[Oswald]"
 84:                 :class="{ 'text-primary-600': isActiveSection(item.id) }"
 85:                 :to="`#${item.id}`"
 86:               >
 87:                 <h4>
 88:                   {{ item.text }}
 89:                 </h4>
 90:               </NuxtLink>
 91:               <ul
 92:                 v-if="item.children"
 93:                 :class="[
 94:                   'space-y-2 overflow-hidden text-sm transition-all duration-700 ease-out',
 95:                   isSectionOrChildActive(item) || expanded
 96:                     ? `max-h-[${Math.floor((item.children.length + 1) * 31)}px] pt-2`
 97:                     : 'max-h-[0px] py-0',
 98:                 ]"
 99:               >
100:                 <li
101:                   v-for="child in item.children"
102:                   :key="`toc-child${child.id}`"
103:                   :class="{
104:                     'ml-4 max-w-[80%]': child.depth === 3,
105:                     'text-primary-600': isActiveSection(child.id),
106:                   }"
107:                   class="leading-tight"
108:                 >
109:                   <NuxtLink :to="`#${child.id}`">
110:                     <h5>
111:                       {{ child.text }}
112:                     </h5>
113:                   </NuxtLink>
114:                 </li>
115:               </ul>
116:             </li>
117:           </ul>
118:         </PrimeAccordionContent>
119:       </PrimeAccordionPanel>
120:     </PrimeAccordion>
121:   </div>
122: </template>
123: 
124: <style scoped></style>
```

## File: apps/website/components/blog/card/BlogCard.vue
```vue
 1: <script setup lang="ts">
 2: import { useDateFormat } from '@vueuse/core'
 3: 
 4: const p = defineProps({
 5:   article: {
 6:     type: Object,
 7:     required: true,
 8:   },
 9: })
10: 
11: // "/uploads/Screenshot_2024_10_09_at_11_34_50_AM_3839858f26.png"
12: 
13: console.log('Article:', p.article)
14: </script>
15: 
16: <template>
17:   <PrimeCard v-if="article">
18:     <template #header>
19:       <BlogCatTag
20:         v-if="article.tags"
21:         :tags="article.tags"
22:         :category="article.category"
23:         class="p-4"
24:       />
25:       <NuxtImg
26:         provider="strapi"
27:         :src="article.cover.url.replace('/uploads/', '')"
28:         width="400"
29:         height="300"
30:         quality="80"
31:         class="aspect-video w-full object-cover"
32:       />
33:     </template>
34:     <template #title>
35:       <NuxtLink :to="`/blog/${article.slug}`">
36:         <h3 class="text-xl font-bold lg:text-xl">
37:           {{ article.title }}
38:         </h3>
39:       </NuxtLink>
40:     </template>
41:     <template #subtitle>
42:       <div class="flex flex-row gap-2 text-sm">
43:         <p class="text-primary">
44:           {{ useDateFormat(article.publishedAt, 'DD MMM YYYY').value }}
45:         </p>
46:         <!-- <span
47:           v-if="article.author"
48:           class="flex gap-2"
49:         >
50:           by
51:           <span
52:             v-for="author in article.author"
53:             :key="author.id"
54:           >
55:             {{ author.name }}
56:           </span>
57:         </span> -->
58:       </div>
59:     </template>
60:     <template #content>
61:       <div class="flex w-full flex-col items-start justify-center gap-2">
62:         <p class="text-sm">
63:           {{ article.description }}
64:         </p>
65:       </div>
66:     </template>
67:     <template #footer>
68:       <div class="flex w-full justify-end">
69:         <NuxtLink :to="`/blog/${article.slug}`">
70:           <PrimeButton outlined> Read More </PrimeButton>
71:         </NuxtLink>
72:       </div>
73:     </template>
74:   </PrimeCard>
75: </template>
```

## File: apps/website/components/blog/card/BlogCardSkeleton.vue
```vue
 1: <template>
 2:   <div
 3:     class="relative w-full h-full md:rounded-md border border-color cursor-pointer p-4 gap-4 flex flex-col overflow-hidden background"
 4:   >
 5:     <!-- BlogCatTag Skeleton -->
 6:     <div class="flex gap-2 w-full mb-4 flex-wrap">
 7:       <div class="w-24 h-5 foreground rounded mb-2" />
 8:       <!-- Category Badge -->
 9:       <div class="w-16 h-5 foreground rounded mb-2" />
10:       <!-- Tag Badge 1 -->
11:       <div class="w-20 h-5 foreground rounded mb-2" />
12:       <!-- Tag Badge 2 -->
13:     </div>
14: 
15:     <!-- NuxtImg Skeleton -->
16:     <div class="rounded-md w-full h-48 foreground mb-4" />
17: 
18:     <div class="flex flex-col gap-2 items-start w-full p-2 xl:p-4 justify-center">
19:       <!-- article.title Skeleton -->
20:       <div class="h-6 w-3/4 foreground mb-2 rounded" />
21: 
22:       <!-- BlogAuthor Skeleton -->
23:       <div class="flex flex-row gap-2 lg:gap-3 justify-center items-center">
24:         <div class="w-32 h-5 foreground rounded" />
25:         <!-- Author Name 1 -->
26:         <div class="w-16 h-5 foreground rounded ml-2" />
27:         <!-- Date -->
28:       </div>
29: 
30:       <!-- article.description Skeleton -->
31:       <div class="h-5 w-full foreground rounded mt-2" />
32:     </div>
33:   </div>
34: </template>
35: 
36: <script lang="ts" setup></script>
```

## File: apps/website/components/blog/BlogAdFloat.client.vue
```vue
 1: <template>
 2:   <div class="sticky top-24">
 3:     <LandingGlass
 4:       v-if="adVisible"
 5:       hover-effect="glow"
 6:       glow-color="purple"
 7:       gradient="mixed"
 8:       intensity="low"
 9:       interactive
10:       isolate-content
11:     >
12:       <div class="flex flex-shrink-0 items-center justify-start gap-2 p-2 pb-0">
13:         <div class="background rounded-full p-1">
14:           <IBImage
15:             :img="{
16:               src: 'images/team/shweta-kulkarni.jpg',
17:               alt: 'Shweta Kulkarni is the CEO / Founder of AstronEra',
18:               width: '60',
19:               height: '60',
20:             }"
21:             class="rounded-full"
22:           />
23:         </div>
24:         <h3 class="text-2xl font-semibold"> Hi 👋, I'm Shweta </h3>
25:       </div>
26:       <div
27:         class="background absolute -top-3 right-2 flex cursor-pointer items-center justify-center rounded-full p-3 lg:hidden"
28:       >
29:         <Icon
30:           name="mdi:close"
31:           class="absolute"
32:           @click="toggleAd"
33:         />
34:       </div>
35:       <div class="pt-8 space-y-8">
36:         <div class="flex w-full flex-col items-start justify-start gap-4">
37:           <span class="text-base">
38:             We're showcasing the amazing people and companies pushing astronomy and space
39:             exploration forward.
40:             <strong> If this sounds like you or someone you know, let's connect! </strong>
41:           </span>
42:         </div>
43:         <div>
44:           <NuxtLink
45:             to="mailto:connectus@astronera.org"
46:             aria-label="Reach out to Shweta via email"
47:             target="_blank"
48:           >
49:             <PrimeButton severity="secondary"> Reach Out </PrimeButton>
50:           </NuxtLink>
51:         </div>
52:       </div>
53:     </LandingGlass>
54:   </div>
55: </template>
56: 
57: <script setup lang="ts">
58: const { width } = useWindowSize()
59: const hideAd = ref(false)
60: const adVisible = computed(() => !hideAd.value || width.value > 1024)
61: 
62: const toggleAd = () => {
63:   hideAd.value = !hideAd.value
64:   console.log('hideAd', hideAd.value)
65: }
66: </script>
67: 
68: <style scoped></style>
```

## File: apps/website/components/blog/BlogCatTag.vue
```vue
 1: <template>
 2:   <div>
 3:     <div class="flex flex-wrap gap-4">
 4:       <!-- <PrimeTag
 5:         :id="`${category.slug}`"
 6:         :value="useChangeCase(category.name, 'capitalCase').value"
 7:         :class="`${badgeColor(category.name)}`"
 8:       />
 9:       <PrimeTag
10:         v-for="tag in tags"
11:         :key="`${tag}`"
12:         :value="tag"
13:         severity="contrast"
14:       /> -->
15:     </div>
16:   </div>
17: </template>
18: 
19: <script setup lang="ts">
20: import { useChangeCase } from '@vueuse/integrations/useChangeCase'
21: import type { ArticleTagsT, ArticleCategoriesT } from '~/types/articles'
22: 
23: // TODO: Add full article as prop and types for article
24: defineProps({
25:   tags: {
26:     type: Array as PropType<ArticleTagsT[]>,
27:     required: false,
28:     default: () => [],
29:   },
30:   category: {
31:     type: String as PropType<ArticleCategoriesT>,
32:     required: false,
33:     default: 'category missing',
34:   },
35: })
36: 
37: const badgeColor = (badge: ArticleCategoriesT | ArticleTagsT): string => {
38:   switch (badge) {
39:     case 'people-of-space':
40:       return 'primary'
41:     case 'sustainable-development':
42:       return 'amber'
43:     case 'space-exploration':
44:       return 'purple'
45:     case 'dark-sky-conservation':
46:       return 'blue'
47:     default:
48:       return 'secondary'
49:   }
50: }
51: </script>
52: 
53: <style scoped></style>
```

## File: apps/website/components/blog/BlogFilter.vue
```vue
 1: <script setup lang="ts">
 2: import { useChangeCase } from '@vueuse/integrations/useChangeCase'
 3: import { CATEGORIES } from '~/types/articles'
 4: import type { ArticleCategoriesT } from '~/types/articles'
 5: 
 6: const selectedCategory = ref<ArticleCategoriesT>(
 7:   String(useRoute().params.category) as ArticleCategoriesT,
 8: )
 9: const formatCategory = (cat: string) => useChangeCase(cat, 'capitalCase').value
10: 
11: // !todo: low priority - add a search bar to filter articles
12: // !todo: low priority - color code the categories
13: // !todo: important - finalize the categories
14: // !todo: medium priority - refine the floating ad copy & add join hub CTA
15: // consider having categories types in this file and exporting to where needed
16: </script>
17: 
18: <template>
19:   <div class="h-auto space-y-4 md:rounded-md">
20:     <div class="flex flex-wrap items-center gap-4">
21:       <h3 class="flex h-full items-center text-xl font-semibold leading-none"> Categories: </h3>
22:       <NuxtLink
23:         v-for="cat in CATEGORIES"
24:         :key="`astronera-blog-${cat}`"
25:         :to="`/blog/category/${cat}/page/1`"
26:       >
27:         <PrimeButton
28:           color="primary"
29:           :aria-label="`${formatCategory(cat)} articles`"
30:           :outlined="selectedCategory === cat ? false : true"
31:           :label="formatCategory(cat)"
32:           size="small"
33:           class="cursor-pointer"
34:         />
35:       </NuxtLink>
36:     </div>
37:   </div>
38: </template>
```

## File: apps/website/components/blog/BlogNavigation.vue
```vue
 1: <template>
 2:   <div
 3:     v-if="navigation"
 4:     class="my-4 grid grid-cols-2 gap-4"
 5:   >
 6:     <NuxtLink
 7:       v-if="navigation[0]"
 8:       :to="navigation[0]._path"
 9:       class="border-color flex cursor-pointer items-center justify-start gap-2 border p-4 lg:rounded-md"
10:     >
11:       <h3 class="flex items-center justify-center gap-4 text-sm font-semibold lg:text-xl">
12:         <div class="foreground relative flex items-center justify-center rounded-full p-5">
13:           <Icon
14:             name="mdi:chevron-left"
15:             class="absolute inline-block shrink-0"
16:             size="32px"
17:           />
18:         </div>
19:         {{ navigation[0].title }}
20:       </h3>
21:     </NuxtLink>
22:     <NuxtLink
23:       v-if="navigation[1]"
24:       :to="navigation[1]._path"
25:       class="border-color flex cursor-pointer items-center justify-end gap-2 border p-4 lg:rounded-md"
26:     >
27:       <h3 class="flex items-center justify-between gap-4 text-sm font-semibold lg:text-xl">
28:         {{ navigation[1].title }}
29:         <div class="foreground relative flex items-center justify-center rounded-full p-5">
30:           <Icon
31:             name="mdi:chevron-right"
32:             class="absolute inline-block shrink-0"
33:             size="32px"
34:           />
35:         </div>
36:       </h3>
37:     </NuxtLink>
38:   </div>
39: </template>
40: 
41: <script setup lang="ts">
42: const route = useRoute()
43: 
44: const { data: navigation } = await useAsyncData('navigation', () =>
45:   queryContent()
46:     .where({ _partial: { $ne: true }, status: 'published' })
47:     .only(['_path', 'title', 'publishedAt'])
48:     .sort({ publishedAt: 1 })
49:     .findSurround(route.path),
50: )
51: </script>
52: 
53: <style scoped></style>
```

## File: apps/website/components/blog/BlogNews.vue
```vue
 1: <script setup lang="ts">
 2: import type { NewsListGovernmentT } from '@/types/news'
 3: 
 4: const p = defineProps({
 5:   newsCategory: {
 6:     type: String as PropType<NewsListGovernmentT | 'all'>,
 7:     required: true,
 8:   },
 9: })
10: 
11: const filterBy = computed(() =>
12:   p.newsCategory === 'all'
13:     ? null
14:     : {
15:         columnName: 'source',
16:         operator: 'eq',
17:         value: p.newsCategory,
18:       },
19: )
20: 
21: const { data: spaceNews, error } = await useAsyncData(
22:   'blog-news-cards',
23:   async () =>
24:     await $fetch('/api/news/select/cards', {
25:       method: 'GET',
26:       params: {
27:         filterBy: filterBy.value,
28:         dto: 'select:news:card',
29:         limit: 6,
30:       },
31:     }),
32: )
33: 
34: console.log('dataReturned', spaceNews, error)
35: 
36: if (error.value) {
37:   console.error(error.value)
38: }
39: </script>
40: 
41: <template>
42:   <div>
43:     <h2 class="decoration-primary-500 pb-20 text-3xl font-bold underline underline-offset-8">
44:       LATEST NEWS
45:     </h2>
46:     <div
47:       v-if="spaceNews?.data"
48:       class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3 lg:gap-8"
49:     >
50:       <NewsCard
51:         v-for="(news, i) in spaceNews.data"
52:         :key="`news-${news.source}-${i}`"
53:         :news="news"
54:       />
55:     </div>
56:     <NuxtLink
57:       class="hover:text-primary-500 flex w-full items-center justify-end gap-2 pt-20"
58:       to="/register"
59:     >
60:       <h2 class="decoration-primary-500 text-end text-3xl font-bold underline underline-offset-8">
61:         JOIN FREE FOR MORE
62:       </h2>
63:       <Icon
64:         name="mdi:chevron-right"
65:         size="32px"
66:       />
67:     </NuxtLink>
68:   </div>
69: </template>
70: 
71: <style scoped></style>
```

## File: apps/website/components/blog/BlogPostCaption.vue
```vue
 1: <template>
 2:   <div class="pt-2">
 3:     <p class="p-2 text-sm italic text-gray-400 text-center">
 4:       <slot />
 5:     </p>
 6:   </div>
 7: </template>
 8: 
 9: <script setup lang="ts"></script>
10: 
11: <style scoped></style>
```

## File: apps/website/components/blog/BlogShowcase.vue
```vue
  1: <script setup lang="ts">
  2: import { ref, computed, watchEffect } from 'vue'
  3: import type { PropType } from 'vue'
  4: import type { ArticleCategoriesT, ArticleCardT } from '~/types/articles'
  5: 
  6: const message = ref('')
  7: 
  8: const props = defineProps({
  9:   articleCategory: {
 10:     type: String as PropType<ArticleCategoriesT>,
 11:     required: true,
 12:   },
 13: })
 14: 
 15: const articlesShowcase = ref<ArticleCardT[]>([])
 16: const category = computed(() => props.articleCategory)
 17: const haveArticles = computed(() => articlesShowcase.value.length > 0)
 18: 
 19: const strapi = useStrapi()
 20: 
 21: // Fetch articles on server and client
 22: const { data, error, status } = await useAsyncData(`blog-showcase-${category.value}`, async () => {
 23:   const params: any = {
 24:     pagination: {
 25:       pageSize: 3,
 26:       page: 1,
 27:     },
 28:     sort: ['publishedAt:desc'],
 29:     filters: {},
 30:     populate: {
 31:       cover: {
 32:         populate: '*',
 33:       },
 34:       category: {
 35:         fields: ['name', 'slug'],
 36:       },
 37:       author: {
 38:         fields: ['name', 'bio'],
 39:       },
 40:     },
 41:   }
 42: 
 43:   // If you have a 'status' field and want to filter by 'published'
 44:   params.filters['status'] = {
 45:     $eq: 'published',
 46:   }
 47: 
 48:   if (category.value !== 'all') {
 49:     params.filters['category'] = {
 50:       slug: {
 51:         $eq: category.value,
 52:       },
 53:     }
 54:   }
 55: 
 56:   const response = await strapi.fetchFromStrapi<any>('articles', params)
 57: 
 58:   if (response && response.data && response.data.length > 0) {
 59:     return response.data
 60:   } else {
 61:     message.value = 'No articles loaded...'
 62:     return []
 63:   }
 64: })
 65: 
 66: if (error.value) {
 67:   console.error('Fetch Articles Error:', error.value)
 68: }
 69: 
 70: watchEffect(() => {
 71:   if (data.value) {
 72:     articlesShowcase.value = data.value
 73:   }
 74: })
 75: </script>
 76: 
 77: <template>
 78:   <div>
 79:     <div class="space-y-6 lg:space-y-12">
 80:       <slot name="title" />
 81:       <p
 82:         v-if="message.length"
 83:         class="rounded-md bg-red-950/70 p-4 text-sm lg:text-base"
 84:       >
 85:         {{ message }}
 86:       </p>
 87:       <div
 88:         v-if="haveArticles"
 89:         class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3 lg:gap-8"
 90:       >
 91:         <BlogCard
 92:           v-for="article in articlesShowcase"
 93:           :key="`blog-showcase-${article.id}`"
 94:           :article="article"
 95:         />
 96:         <ClientOnly>
 97:           <BlogCardSkeleton v-show="status === 'pending'" />
 98:           <BlogCardSkeleton v-show="status === 'pending'" />
 99:           <BlogCardSkeleton v-show="status === 'pending'" />
100:         </ClientOnly>
101:       </div>
102:       <div class="flex justify-end">
103:         <slot />
104:       </div>
105:     </div>
106:   </div>
107: </template>
108: 
109: <style scoped></style>
```

## File: apps/website/components/common/CommonHero.vue
```vue
 1: <script setup lang="ts">
 2: import type { TitleType, ImageType } from '../../../base/types/content'
 3: 
 4: defineProps<{
 5:   title: TitleType
 6:   img: ImageType
 7:   position: string
 8: }>()
 9: </script>
10: 
11: <template>
12:   <div>
13:     <IBImageHero
14:       :img="img"
15:       :title="title"
16:       :object-position="`object-${position}`"
17:       fit="cover"
18:     >
19:       <div class="flex flex-col gap-4 bg-white rounded-md pb-6">
20:         <slot />
21:       </div>
22:     </IBImageHero>
23:   </div>
24: </template>
```

## File: apps/website/components/common/CommonTitle.vue
```vue
 1: <template>
 2:   <div :class="`flex flex-col gap-4 lg:gap-6 text-${alignment} lg:max-w-lg`">
 3:     <p
 4:       v-if="title.label"
 5:       class="text-sm font-bold uppercase"
 6:       :class="labelWhite ? 'text-white' : 'text-primary-700'"
 7:     >
 8:       {{ title.label }}
 9:     </p>
10:     <h3
11:       class="text-2xl lg:text-4xl font-bold"
12:       :class="isCta ? 'underline decoration-primary-900' : ''"
13:     >
14:       {{ title.main }}
15:     </h3>
16:     <h5
17:       v-if="title.subtitle"
18:       class="text-base"
19:     >
20:       {{ title.subtitle }}
21:     </h5>
22:     <div class="space-y-6">
23:       <slot />
24:     </div>
25:   </div>
26: </template>
27: 
28: <script setup lang="ts">
29: import type { TitleType } from '../../../base/types/content'
30: 
31: defineProps({
32:   title: {
33:     type: Object as PropType<TitleType>,
34:     required: true,
35:   },
36:   alignment: {
37:     type: String,
38:     default: 'left',
39:   },
40:   isCta: {
41:     type: Boolean,
42:     default: false,
43:   },
44:   labelWhite: {
45:     type: Boolean,
46:     default: false,
47:   },
48: })
49: </script>
50: 
51: <style scoped></style>
```

## File: apps/website/components/conference/ConferenceAbout.vue
```vue
 1: <template>
 2:   <div>
 3:     <div class="grid grid-cols-1 items-start gap-6 lg:grid-cols-2 xl:gap-12">
 4:       <CommonTitle
 5:         class="col-start-1"
 6:         :title="about.title"
 7:       >
 8:         <p>
 9:           The International Dark Sky Preservation and Astro-Tourism Conference represented a
10:           groundbreaking event in India, shedding light on the critical importance of preserving
11:           Dark Skies and harnessing the immense potential of Astro-Tourism.
12:         </p>
13:         <p>
14:           The conference was held from 24th to 27th November 2023, encompassing a diverse range of
15:           plenary and independent talks delivered by students, young researchers, professionals, and
16:           entrepreneurs. Additionally, the conference facilitated interactive round table
17:           discussions, workshops, and working groups to encourage meaningful engagement and
18:           collaboration.
19:         </p>
20:       </CommonTitle>
21:       <div class="col-start-1 flex flex-col gap-2 lg:col-start-2">
22:         <p>
23:           The inception of this conference can be traced back to the transformative experience of
24:           Ms. Shweta Kulkarni, the esteemed founder and Director of AstronEra, during her visit to
25:           the Exmoor National Park in the United Kingdom in 2016. Subsequently, her visionary ideas
26:           and insights were meticulously distilled into a comprehensive proposal which in 2023 was
27:           accepted and funded by the Department of Science and Technology, Government of India and
28:           supported by the International Astronomical Union and its Office of Astronomy Development.
29:         </p>
30:         <p>
31:           The International Dark Sky Preservation and Astro-Tourism Conference served as a
32:           significant milestone in the ongoing efforts to raise awareness, foster scientific
33:           research, and promote sustainable practices in preserving the pristine darkness of our
34:           skies. By bringing together a diverse array of stakeholders, the conference provided a
35:           platform for exchanging knowledge, sharing best practices, and cultivating innovative
36:           solutions.
37:         </p>
38:         <p>
39:           It is hoped that the outcomes of this conference will serve as a catalyst for future
40:           endeavours in safeguarding our dark skies and harnessing the potential of Astro-Tourism
41:           for the benefit of present and future generations.
42:         </p>
43:       </div>
44:       <div
45:         class="row-start-3 grid grid-cols-1 gap-6 lg:col-span-2 lg:row-start-2 lg:grid-cols-2 xl:gap-12"
46:       >
47:         <IBImage
48:           :img="{
49:             src: themes.img.src,
50:             alt: themes.img.alt,
51:           }"
52:           class="w-full rounded-md"
53:         />
54:         <div class="flex w-full flex-col justify-center rounded-md pb-3">
55:           <p class="pb-4 text-sm font-bold uppercase text-primary-700">
56:             {{ themes.title }}
57:           </p>
58:           <ul>
59:             <li
60:               v-for="(point, i2) in themes.points"
61:               :key="`about-conference-point-${i2}`"
62:               class="ml-4 list-disc pb-2"
63:             >
64:               {{ point }}
65:             </li>
66:           </ul>
67:         </div>
68:       </div>
69:     </div>
70:   </div>
71: </template>
72: 
73: <script setup lang="ts">
74: const about = {
75:   title: {
76:     main: 'Uniting Stakeholders for the Preservation of Dark Skies and Astro-Tourism',
77:   },
78: }
79: const themes = {
80:   title: 'Key Themes',
81:   img: {
82:     src: 'conference/photos/IDSPAC23-shweta-and-participants.jpg',
83:     alt: 'Shweta Kulkarni talking to an audience about astronomy',
84:   },
85:   points: [
86:     'Satellite constellations and space debris impact on observations',
87:     'Astronomy in everyday life: bridging science and culture',
88:     'Controlling light pollution for enhanced astronomical visibility',
89:     'Advancing astronomy research and outreach initiatives',
90:     'Art and astronomy: unveiling creative cosmos connections',
91:   ],
92: }
93: </script>
```

## File: apps/website/components/conference/ConferenceChairperson.vue
```vue
 1: <template>
 2:   <div class="grid gap-8 lg:grid-cols-2">
 3:     <PrimeCard
 4:       v-for="(host, i) in hosts"
 5:       :key="`conference-host-${i}`"
 6:       :pt="{
 7:         root: 'flex flex-col md:flex-row w-full h-full overflow-hidden relative',
 8:         body: ' background',
 9:       }"
10:       :pt-options="{ mergeProps: true, mergeSections: true }"
11:     >
12:       <template #header>
13:         <div class="absolute left-0 top-0 z-10 hidden h-full w-full bg-black/10 visible" />
14:         <IBImage
15:           :img="{
16:             src: `conference/speakers/${host.avatar}.jpg`,
17:             alt: `${host.given_name} is the chairperson at the Dark Sky Conservation India Conference`,
18:             width: '350',
19:             height: '350',
20:             loading: 'lazy',
21:             quality: '80',
22:             format: 'webp',
23:           }"
24:           class="aspect-square h-full w-full min-w-[180px] object-cover grayscale-[20%]"
25:         />
26:       </template>
27:       <template #content>
28:         <div class="flex flex-col justify-between gap-4">
29:           <div class="flex flex-col gap-4 text-sm">
30:             <h3 class="text-2xl font-semibold"> {{ host.given_name }} {{ host.surname }} </h3>
31:             <p class="flex items-center gap-2 font-semibold text-primary-600">
32:               <Icon
33:                 name="mdi:account"
34:                 class="flex-shrink-0"
35:                 size="24px"
36:               />
37:               {{ host.professional_title }}
38:             </p>
39:             <p class="h-auto text-sm">
40:               {{ host.bio }}
41:             </p>
42:           </div>
43:         </div>
44:       </template>
45:     </PrimeCard>
46:   </div>
47: </template>
48: 
49: <script setup lang="ts">
50: import type { SpeakerType } from '@/types/conference'
51: 
52: defineProps({
53:   hosts: {
54:     type: Object as PropType<SpeakerType[]>,
55:     required: true,
56:   },
57: })
58: </script>
59: 
60: <style scoped></style>
```

## File: apps/website/components/conference/ConferenceScheduleTabs.vue
```vue
  1: <template>
  2:   <div class="py-12">
  3:     <CommonTitle
  4:       :title="{
  5:         main: 'Conference Schedule',
  6:       }"
  7:     />
  8:     <PrimeTabs
  9:       value="0"
 10:       select-on-focus
 11:     >
 12:       <PrimeTabList pt:tablist:class="flex gap-4 pl-4 pb-4 text-lg">
 13:         <PrimeTab
 14:           v-for="(day, i) in schedule"
 15:           :key="`tab-${i}`"
 16:           :value="`${day.value}`"
 17:         >
 18:           <span>
 19:             {{ `${day.label} ${day.day}th Nov` }}
 20:           </span>
 21:         </PrimeTab>
 22:       </PrimeTabList>
 23:       <PrimeTabPanels>
 24:         <PrimeTabPanel
 25:           v-for="(day, i) in schedule"
 26:           :key="`tab-${i}`"
 27:           :value="`${i}`"
 28:         >
 29:           <div class="border-color rounded-md border">
 30:             <PrimeDataTable
 31:               :value="day.items"
 32:               :pt="{
 33:                 header: ({ props }) => ({
 34:                   cell: 'bg-red-500',
 35:                 }),
 36:                 thead: ({ context }) => ({
 37:                   class: 'bg-primary-800',
 38:                 }),
 39:                 bodyrow: ({ props }) => ({
 40:                   class: 'odd:bg-gray-950 even:bg-gray-900',
 41:                 }),
 42:               }"
 43:               :pt-options="{ mergeSections: true, mergeProps: true }"
 44:             >
 45:               <PrimeColumn
 46:                 style="width: 20%"
 47:                 field="time"
 48:                 :header="`Time ${timezone}`"
 49:               >
 50:                 <template #body="{ data }">
 51:                   <span class="flex items-center gap-2 text-sm">
 52:                     <Icon
 53:                       :name="data.icon"
 54:                       size="24px"
 55:                     />
 56: 
 57:                     {{ convertISTtoLocal(day.day, data.time) }}
 58:                   </span>
 59:                 </template>
 60:               </PrimeColumn>
 61:               <PrimeColumn
 62:                 style="width: 35%"
 63:                 field="speaker"
 64:                 header="Speaker"
 65:               >
 66:                 <template #body="slotProps">
 67:                   <span class="flex items-center text-sm leading-none">
 68:                     <div
 69:                       v-if="slotProps.data.online"
 70:                       class="mr-1 h-3 w-3 rounded-full bg-emerald-500"
 71:                     />
 72:                     {{ slotProps.data.speaker }}
 73:                   </span>
 74:                 </template>
 75:               </PrimeColumn>
 76:               <PrimeColumn
 77:                 style="width: 40%"
 78:                 field="topic"
 79:                 header="Topic"
 80:               >
 81:                 <template #body="slotProps">
 82:                   <div class="text-sm">
 83:                     {{ slotProps.data.topic }}
 84:                   </div>
 85:                 </template>
 86:               </PrimeColumn>
 87:             </PrimeDataTable>
 88:           </div>
 89:         </PrimeTabPanel>
 90:       </PrimeTabPanels>
 91:     </PrimeTabs>
 92:   </div>
 93: </template>
 94: 
 95: <script setup lang="ts">
 96: function convertISTtoLocal(day: number, time: { start: string, end: string }) {
 97:   const start = `2023-11-${day}T${time.start}:00+05:30` // '+05:30' is the offset for IST
 98:   const end = `2023-11-${day}T${time.end}:00+05:30` // '+05:30' is the offset for IST
 99: 
100:   // Creating a Date object
101:   const startIST = new Date(start)
102:   const endIST = new Date(end)
103: 
104:   // Converting to local time string
105:   const startLocal = startIST.toLocaleTimeString([], {
106:     hour: '2-digit',
107:     minute: '2-digit',
108:     hour12: false,
109:   })
110: 
111:   const endLocal = endIST.toLocaleTimeString([], {
112:     hour: '2-digit',
113:     minute: '2-digit',
114:     hour12: false,
115:   })
116: 
117:   return `${startLocal} - ${endLocal}`
118: }
119: 
120: const timezone = computed(() => Intl.DateTimeFormat().resolvedOptions().timeZone)
121: 
122: const schedule = [
123:   {
124:     slot: 'friday',
125:     value: '0',
126:     label: 'Friday',
127:     day: 24,
128:     items: [
129:       {
130:         icon: 'mdi:calendar-clock',
131:         topic: 'Registration at Manu Allaya',
132:         speaker: '',
133:         time: { start: '09:00', end: '11:00' },
134:         class: 'bg-primary-950',
135:       },
136:       {
137:         icon: 'material-symbols:breakfast-dining',
138:         topic: 'Complimentary Breakfast',
139:         speaker: '',
140:         time: { start: '09:00', end: '10:00' },
141:         class: 'bg-primary-950',
142:       },
143:       {
144:         icon: 'material-symbols:line-end-arrow-rounded',
145:         topic: 'Opening Ceremony / Inauguration',
146:         speaker: 'Ruchira Huchgol',
147:         time: { start: '11:00', end: '11:20' },
148:       },
149:       {
150:         online: true,
151:         icon: 'mdi:microphone',
152:         topic:
153:           'Climate Change & Clean Energy (C3E) Division, Department of Science and Technolohgy, Government of India',
154:         speaker: 'Dr. Anita Gupta',
155:         time: { start: '11:30', end: '12:00' },
156:       },
157:       {
158:         online: true,
159:         icon: 'mdi:microphone',
160:         topic:
161:           'Astronomy and Satellite Constellations: Pathways Forward for Light Pollution from Space',
162:         speaker: 'Dr. Constance (Connie) Walker',
163:         time: { start: '12:00', end: '12:30' },
164:       },
165:       {
166:         icon: 'mdi:silverware-fork-knife',
167:         topic: 'Complimentary Lunch + Check In',
168:         speaker: '',
169:         time: { start: '12:30', end: '13:30' },
170:         class: 'bg-primary-950',
171:       },
172:       {
173:         icon: 'mdi:microphone',
174:         online: true,
175:         topic: 'Harnessing Dark Skies for Socioeconomic Development in Rural Areas',
176:         speaker: 'Samyukta Manikumar',
177:         time: { start: '13:30', end: '14:00' },
178:       },
179:       {
180:         icon: 'material-symbols:group-work',
181:         topic: 'Round Table Activity',
182:         speaker: 'Ruchira Huchgol',
183:         time: { start: '14:00', end: '14:30' },
184:       },
185:       {
186:         online: false,
187:         icon: 'mdi:microphone',
188:         topic: 'Intruders in the Dark Sky: The Megaconstellation Crisiss',
189:         speaker: 'Upasana Dasgupta',
190:         time: { start: '14:30', end: '15:00' },
191:       },
192:       {
193:         icon: 'material-symbols:group-work',
194:         topic: 'Round Table Activity',
195:         speaker: 'Ruchira Huchgol',
196:         time: { start: '15:00', end: '15:30' },
197:       },
198:       {
199:         online: true,
200:         icon: 'mdi:microphone',
201:         topic: 'Astronomy\'s Impact on Sustainability',
202:         speaker: 'María Alejandra Díaz Teodori',
203:         time: { start: '15:30', end: '16:00' },
204:       },
205:       {
206:         icon: 'mdi:coffee',
207:         topic: 'Complimentary Tea',
208:         speaker: '',
209:         time: { start: '16:00', end: '16:30' },
210:         class: 'bg-primary-950',
211:       },
212:       {
213:         icon: 'mdi:microphone',
214:         online: false,
215:         topic: 'Mental Health, Arts and Astronomy',
216:         speaker: 'Aishwarya Khade',
217:         time: { start: '16:30', end: '17:00' },
218:       },
219:       {
220:         online: false,
221:         icon: 'material-symbols:group-work',
222:         topic: 'Workshop',
223:         speaker: 'Aishwarya Khade',
224:         time: { start: '17:00', end: '18:00' },
225:       },
226:       {
227:         online: false,
228:         icon: 'material-symbols:line-end-circle',
229:         topic: 'Closing remarks',
230:         speaker: 'Ruchira Huchgol',
231:         time: { start: '18:00', end: '18:10' },
232:       },
233:       {
234:         icon: 'material-symbols:alarm-add',
235:         topic: 'Free Time',
236:         speaker: '',
237:         time: { start: '18:10', end: '19:00' },
238:         class: 'bg-primary-950',
239:       },
240:       {
241:         icon: 'material-symbols:dark-mode',
242:         topic: 'Stargazing (Optional)',
243:         speaker: '',
244:         time: { start: '19:00', end: '21:30' },
245:         class: 'bg-primary-950',
246:       },
247:       {
248:         icon: 'material-symbols:celebration',
249:         topic: 'AstronEra 5 Year Celebration',
250:         speaker: '',
251:         time: { start: '19:00', end: '21:30' },
252:         class: 'bg-primary-950',
253:       },
254:       {
255:         icon: 'mdi:silverware-fork-knife',
256:         topic: 'Complimentary Dinner',
257:         speaker: '',
258:         time: { start: '20:30', end: '22:00' },
259:         class: 'bg-primary-950',
260:       },
261:     ],
262:   },
263:   {
264:     slot: 'saturday',
265:     label: 'Saturday',
266:     value: '1',
267:     day: 25,
268:     items: [
269:       {
270:         icon: 'material-symbols:breakfast-dining',
271:         topic: 'Complimentary Breakfast',
272:         speaker: '',
273:         time: { start: '09:00', end: '10:00' },
274:         class: 'bg-primary-950',
275:       },
276:       {
277:         icon: 'material-symbols:line-end-arrow-rounded',
278:         topic: 'Opening Remarks',
279:         speaker: 'Ruchira Huchgol',
280:         online: false,
281:         time: { start: '10:00', end: '10:20' },
282:       },
283:       {
284:         online: false,
285:         icon: 'mdi:microphone',
286:         topic: 'Sustainable Development through Astronomy: A Tribal Perspective',
287:         speaker: 'Dr. Kiran Kulkarni',
288:         time: { start: '10:20', end: '11:00' },
289:       },
290:       {
291:         online: false,
292:         icon: 'mdi:microphone',
293:         topic: 'The planetarium as a creative space',
294:         speaker: 'David Ault',
295:         time: { start: '11:00', end: '11:30' },
296:       },
297:       {
298:         online: false,
299:         icon: 'mdi:microphone',
300:         topic: 'Indian successors to the Indian Gamma-Ray Observatory(IGRO) Mission',
301:         speaker: 'Bhakti Shashikant Mithagri',
302:         time: { start: '11:30', end: '12:00' },
303:       },
304:       {
305:         online: false,
306:         icon: 'mdi:microphone',
307:         topic: 'The ancient science of space and agriculture for sustainability and harmony',
308:         speaker: 'Amshu CR',
309:         time: { start: '12:00', end: '12:30' },
310:       },
311:       {
312:         online: true,
313:         icon: 'mdi:microphone',
314:         topic: 'ASTROx Dark Sky: How to Integrate Astronomy Education into Interactive Classroom',
315:         speaker: 'Exodus Chun-Long Sit',
316:         time: { start: '12:30', end: '13:00' },
317:       },
318:       {
319:         icon: 'mdi:silverware-fork-knife',
320:         topic: 'Complimentary Lunch',
321:         speaker: '',
322:         time: { start: '13:00', end: '14:00' },
323:         class: 'bg-primary-950',
324:       },
325:       {
326:         online: false,
327:         icon: 'mdi:microphone',
328:         topic: 'Working group discussion',
329:         speaker: 'Ruchira, Shweta, Aishwarya',
330:         time: { start: '14:00', end: '15:00' },
331:       },
332:       {
333:         online: false,
334:         icon: 'mdi:microphone',
335:         topic: 'Stellar Education: Unveiling ISAAC',
336:         speaker: 'Dinesh Nisang',
337:         time: { start: '15:00', end: '15:30' },
338:       },
339:       {
340:         online: false,
341:         icon: 'mdi:microphone',
342:         topic: 'Round Table Activity',
343:         speaker: 'Ruchira Huchgol',
344:         time: { start: '15:30', end: '16:00' },
345:       },
346:       {
347:         icon: 'mdi:coffee',
348:         topic: 'Complimentary Tea',
349:         speaker: '',
350:         time: { start: '16:00', end: '16:30' },
351:         class: 'bg-primary-950',
352:       },
353:       {
354:         online: false,
355:         icon: 'material-symbols:line-end-circle',
356:         topic: 'Closing remarks',
357:         speaker: 'Ruchira Huchgol',
358:         time: { start: '16:30', end: '17:00' },
359:       },
360:       {
361:         icon: 'material-symbols:alarm-add',
362:         topic: 'Free Time',
363:         speaker: '',
364:         time: { start: '17:00', end: '19:00' },
365:         class: 'bg-primary-950',
366:       },
367:       {
368:         icon: 'material-symbols:dark-mode',
369:         topic: 'Stargazing (Optional)',
370:         speaker: '',
371:         time: { start: '19:00', end: '20:30' },
372:         class: 'bg-primary-950',
373:       },
374:       {
375:         icon: 'mdi:silverware-fork-knife',
376:         topic: 'Complimentary Dinner',
377:         speaker: '',
378:         time: { start: '20:30', end: '22:00' },
379:         class: 'bg-primary-950',
380:       },
381:     ],
382:   },
383:   {
384:     slot: 'sunday',
385:     label: 'Sunday',
386:     value: '2',
387:     day: 26,
388:     items: [
389:       {
390:         icon: 'material-symbols:breakfast-dining',
391:         topic: 'Complimentary Breakfast',
392:         speaker: '',
393:         time: { start: '08:30', end: '09:30' },
394:         class: 'bg-primary-950',
395:       },
396:       {
397:         online: false,
398:         icon: 'material-symbols:line-end-arrow-rounded',
399:         topic: 'Opening Remarks',
400:         speaker: 'Ruchira Huchgol',
401:         time: { start: '09:30', end: '09:40' },
402:       },
403:       {
404:         online: false,
405:         icon: 'mdi:microphone',
406:         topic: 'Skill Training in Astronomy for Income Generation',
407:         speaker: 'Shweta Kulkarni',
408:         time: { start: '09:40', end: '10:00' },
409:       },
410:       {
411:         online: false,
412:         icon: 'mdi:microphone',
413:         topic: 'Sustainable Development for Tribal Ladakhies through Astronomy',
414:         speaker: 'Sonam Wangchuk',
415:         time: { start: '10:00', end: '10:30' },
416:       },
417:       {
418:         online: true,
419:         icon: 'mdi:microphone',
420:         topic: 'Dark Skies and Bright Satellites',
421:         speaker: 'Dr. Priya Hasan',
422:         time: { start: '10:30', end: '11:00' },
423:       },
424:       {
425:         online: true,
426:         icon: 'mdi:microphone',
427:         topic:
428:           'Empowering Ghana\'s STEM Education: Bridging the Gap through Capacity Building in Astronomy Instrumentation',
429:         speaker: 'Albert Kuntu Forson ',
430:         time: { start: '11:00', end: '11:30' },
431:       },
432:       {
433:         online: true,
434:         icon: 'mdi:microphone',
435:         topic: 'Road to Sky',
436:         speaker: 'Hosien Khezri',
437:         time: { start: '11:30', end: '12:00' },
438:       },
439:       {
440:         online: false,
441:         icon: 'material-symbols:trophy-rounded',
442:         topic: 'Poster Winners Announcement',
443:         speaker: 'Ruchira Huchgol',
444:         time: { start: '12:00', end: '12:15' },
445:       },
446:       {
447:         online: false,
448:         icon: 'mdi:microphone',
449:         topic: 'Working group presentation',
450:         speaker: 'Ruchira, Shweta, Aishwarya',
451:         time: { start: '12:15', end: '13:00' },
452:       },
453:       {
454:         icon: 'mdi:silverware-fork-knife',
455:         topic: 'Complimentary Lunch',
456:         speaker: '',
457:         time: { start: '13:00', end: '14:00' },
458:         class: 'bg-primary-950',
459:       },
460:       {
461:         icon: 'material-symbols:group-work',
462:         speaker: 'Ruchira Huchgol',
463:         topic: 'Round Table Activity',
464:         time: { start: '14:00', end: '14:30' },
465:       },
466:       {
467:         online: false,
468:         icon: 'mdi:microphone',
469:         topic: 'Affordable Radio Astronomy Lab',
470:         speaker: 'Nadia Makhijani and Udhish Sharma',
471:         time: { start: '14:30', end: '15:00' },
472:       },
473:       {
474:         online: false,
475:         icon: 'mdi:microphone',
476:         topic: 'Light pollution: A Camouflaging pollution',
477:         speaker: 'Vedavrat Bedekar',
478:         time: { start: '15:00', end: '15:30' },
479:       },
480:       {
481:         online: false,
482:         icon: 'mdi:microphone',
483:         topic: 'Lighting for Dark Skies',
484:         speaker: 'Neethu Susan George',
485:         time: { start: '15:30', end: '16:00' },
486:       },
487:       {
488:         icon: 'mdi:coffee',
489:         topic: 'Complimentary Tea',
490:         speaker: '',
491:         time: { start: '16:00', end: '16:15' },
492:         class: 'bg-primary-950',
493:       },
494:       {
495:         online: false,
496:         icon: 'material-symbols:group-work',
497:         topic: 'Panel Discussion',
498:         speaker: 'Shweta Kulkarni',
499:         time: { start: '16:15', end: '16:45' },
500:       },
501:       {
502:         online: false,
503:         icon: 'material-symbols:line-end-circle',
504:         topic: 'Closing Remarks',
505:         speaker: 'Ruchira Huchgol',
506:         time: { start: '16:45', end: '17:00' },
507:       },
508:       {
509:         icon: 'material-symbols:alarm-add',
510:         topic: 'Free Time',
511:         speaker: '',
512:         time: { start: '17:00', end: '18:00' },
513:         class: 'bg-primary-950',
514:       },
515:       {
516:         icon: 'material-symbols:local-fire-department-rounded',
517:         topic: 'Fireside Networking / Cultural Performance',
518:         speaker: '',
519:         time: { start: '18:00', end: '19:00' },
520:         class: 'bg-primary-950',
521:       },
522:       {
523:         icon: 'material-symbols:dark-mode',
524:         topic: 'Stargazing (Optional)',
525:         speaker: '',
526:         time: { start: '19:00', end: '20:00' },
527:         class: 'bg-primary-950',
528:       },
529:       {
530:         icon: 'mdi:silverware-fork-knife',
531:         topic: 'Complimentary Dinner',
532:         speaker: '',
533:         time: { start: '20:00', end: '22:00' },
534:         class: 'bg-primary-950',
535:       },
536:     ],
537:   },
538: ]
539: </script>
```

## File: apps/website/components/conference/ConferenceSpeakerCard.vue
```vue
 1: <template>
 2:   <LandingGlass
 3:     hover-effect="glow"
 4:     glow-color="purple"
 5:     gradient="mixed"
 6:     intensity="low"
 7:     interactive
 8:     isolate-content
 9:     :padded="false"
10:     class="flex flex-col gap-2 relative h-full"
11:   >
12:     <template #header>
13:       <div class="p-2">
14: 
15:         <div class="absolute left-0 top-0 z-10 hidden h-full w-full bg-black/10 visible" />
16:         <IBImage
17:           :img="{
18:             src: `conference/speakers/${speaker.avatar}.jpg`,
19:             alt: `${speaker.given_name} will be presenting at the Dark Sky Conservation India Conference`,
20:             width: '350',
21:             height: '350',
22:             loading: 'lazy',
23:             quality: '80',
24:             format: 'webp',
25:           }"
26:           class="w-full object-cover grayscale-[20%] rounded-t-xl overflow-hidden"
27:         />
28:       </div>
29:     </template>
30:     <div class="p-6 flex flex-col justify-between flex-grow min-h-full">
31:       <div class="flex flex-col flex-grow gap-4 text-sm pb-4">
32:         <h3 class="text-2xl font-semibold">
33:           {{ speaker.title }} {{ speaker.given_name }} {{ speaker.surname }}
34:         </h3>
35:         <p class="flex items-center gap-2 font-semibold text-primary-600">
36:           <Icon
37:             name="mdi:account"
38:             class="flex-shrink-0"
39:             size="24px"
40:           />
41:           {{ speaker.professional_title }}
42:         </p>
43:         <p class="h-auto text-sm"> {{ speaker.bio.slice(0, 240) }}... </p>
44:       </div>
45: 
46:       <div
47:         v-if="speaker.abstract"
48:         class="border-color text-white flex w-full flex-col justify-end gap-2 rounded-md border p-4"
49:         :class="featured ? 'bg-black' : 'bg-primary-950'"
50:         @click="isOpen = true"
51:       >
52:         <h5 class="font-semibold text-white"> Abstract </h5>
53:         <p class="text-sm">
54:           {{ speaker.abstract.title }}
55:         </p>
56:         <PrimeDialog
57:           v-model:visible="isOpen"
58:           modal
59:           :header="speaker.abstract.title"
60:           :style="{ width: '60rem' }"
61:           :breakpoints="{ '1199px': '75vw', '575px': '90vw' }"
62:         >
63:           <p>
64:             {{ speaker.abstract.description }}
65:           </p>
66:         </PrimeDialog>
67:       </div>
68:     </div>
69:   </LandingGlass>
70: </template>
71: 
72: <script setup lang="ts">
73: import type { SpeakerType } from '@/types/conference'
74: 
75: const isOpen = ref(false)
76: 
77: defineProps({
78:   speaker: {
79:     type: Object as PropType<SpeakerType>,
80:     required: true,
81:   },
82:   featured: {
83:     type: Boolean,
84:     required: false,
85:     default: false,
86:   },
87: })
88: </script>
89: 
90: <style scoped></style>
```

## File: apps/website/components/conference/ConferenceSpeakers.vue
```vue
  1: <template>
  2:   <div class="w-full">
  3:     <CommonTitle
  4:       :title="{
  5:         main: 'Meet The IDSPC2023 Group',
  6:       }"
  7:     />
  8:     <p class="text-primary-700 text-sm font-bold uppercase">
  9:       offline / online Chairperson
 10:     </p>
 11:     <ConferenceChairperson
 12:       class="pt-6"
 13:       :hosts="hosts"
 14:     />
 15:     <p class="text-primary-700 text-sm font-bold uppercase pt-4 lg:pt-8">
 16:       Conference Speakers
 17:     </p>
 18:     <div class="pt-4 lg:pt-8 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 lg:gap-8">
 19:       <ConferenceSpeakerCard
 20:         v-for="speaker in filterSpeakers(true)"
 21:         :key="speaker.given_name"
 22:         :speaker="speaker"
 23:         featured
 24:       />
 25:       <ConferenceSpeakerCard
 26:         v-for="speaker in filterSpeakers(false, true)"
 27:         :key="speaker.given_name"
 28:         :speaker="speaker"
 29:       />
 30:     </div>
 31:   </div>
 32: </template>
 33: 
 34: <script setup lang="ts">
 35: import type { SpeakerType } from '@/types/conference'
 36: 
 37: const hosts = [
 38:   {
 39:     given_name: 'Ruchira',
 40:     surname: 'Huchgol',
 41:     professional_title: 'Organising Committee, Chairman, IDSPAC23 & Operations Manager, AstronEra.',
 42:     bio: `Ruchira Huchgol an analog astronaut with background of
 43:     aerospace engineering has a keen intersted in human space exploration and also works to bring in new opportunities in space sector for the Indian student community
 44:     `,
 45:     avatar: 'ruchira-huchgol',
 46:   },
 47:   {
 48:     given_name: 'Atharva',
 49:     surname: 'Joshi (Jhey)',
 50:     professional_title:
 51:       'Organising Committee, Online Chairman, IDSPAC23 & Project Co-ordinator, AstronEra.',
 52:     bio: `Atharva Joshi is a dedicated architect with extensive experience ranging from the Southern coast to the Himalayas.
 53:     His profound interest in astronomy brings a unique perspective to the innovative projects at AstronEra.`,
 54:     avatar: 'atharva-joshi',
 55:   },
 56: ]
 57: 
 58: const speakers = [
 59:   {
 60:     given_name: 'Sonam',
 61:     surname: 'Wangchuk',
 62:     professional_title: 'Engineer, Innovator and Education Reformist',
 63:     bio: 'Recipient of the Ramon Magsaysay Award, Sonam Wangchuk, an engineer and educator, is lauded for his sustainable development efforts via SECMOL ALTERNATIVE SCHOOL. His innovative approach to environmental and educational challenges showcases a profound commitment to fostering sustainable communities.',
 64:     abstract: {
 65:       title: 'Sustainable Development for Tribal Ladakhies',
 66:       description: `Mr. Sonam Wangchuk, a prominent figure in
 67:         education reform, delivered a keynote speech at the conference, commending the
 68:         AstronEra team's efforts and announcing a collaborative effort between SECMOL,
 69:         HIAL, and AstronEra to safeguard Ladakh's starry skies. He drew parallels between
 70:         Ladakh's rugged terrain and Mars, highlighting its rich cultural diversity.
 71:         Wangchuk stressed the impact of climate change on Ladakh and emphasized the need for
 72:         sustainable living practices to preserve the environment. Introducing SECMOL, an
 73:         innovative school focusing on practical learning and sustainable living, Wangchuk
 74:         emphasized Ladakh's natural sky as a gateway to understanding the universe. He advocated
 75:         for promoting eco-friendly tourism in Ladakh, envisioning it as a pilgrimage site for
 76:         experiencing its majestic landscapes and pristine night skies. Proposing an astrotourism
 77:         campaign to ignite youth interest in astronomy, Wangchuk emphasized the importance of
 78:         conserving Ladakh's dark skies while providing livelihood opportunities. Expressing concern
 79:         over light pollution's effects on wildlife, he highlighted the "I Live Simply" movement,
 80:         urging simplicity to combat climate change's impact.`,
 81:     },
 82:     avatar: 'sonam-wangchuk',
 83:     featured: true,
 84:     inPerson: true,
 85:   },
 86:   {
 87:     title: 'Dr.',
 88:     given_name: 'Constance (Connie)',
 89:     surname: 'Walker',
 90:     professional_title:
 91:       'Head of Office of Site Protection, NSF\'s NOIRLab, USA and Co-Director, IAU CPS',
 92:     bio: 'Astronomer Dr. Connie E. Walker is celebrated for her dark skies education advocacy. With a journey sparked by celestial fascinations, she\'s devoted two decades at NSF\'s National Optical-Infrared Astronomy Research Lab, crafting global innovative programs. Her academic trail from Physics to a Ph.D. in Astronomy underscores a lifelong dedication to astronomical education.',
 93:     abstract: {
 94:       title:
 95:         'Astronomy and Satellite Constellations: Pathways Forward for Light Pollution from Space',
 96:       description: `Dr. Constance (Connie) Walker, the Head of
 97:         the Office of Site Protection at NSF's NOIRLab, USA, and
 98:         Co-Director of the IAU CPS. Her talk, titled "Astronomy and
 99:         Satellite Constellations: Pathways Forward for Light
100:         Pollution from Space," highlighted the initiatives and
101:         programs supported by the International Astronomical
102:         Union (IAU) to promote and preserve Dark and Quiet Skies.
103:         Dr. Walker emphasised the challenge posed by satellite constellations to observational
104:         astronomy and discussed the collaboration of working groups from various fields such as
105:         engineering, law and policy, pure sciences, astrophysics, and art. She emphasised that the
106:         field of space and astronomy requires contributions from individuals in every discipline and
107:         is a common heritage for all.`,
108:     },
109:     avatar: 'connie-walker',
110:     featured: true,
111:     inPerson: false,
112:   },
113:   {
114:     given_name: 'Neethu',
115:     surname: 'Susan George',
116:     professional_title: 'MSLL ( Member Society of Light & Lighting ) as well as Dark Sky Advocate',
117:     bio: `Neethu Susan George, MSLL, WELL AP™, LEED® Green Associate™.
118:     Designation - Specification Manager Middle East North Africa and India - Lamp Worktitude for Light (Spain) and Griven (Italy)
119:     MSLL (Member Society of Light and Lighting), DarkSky Advocate, WELL AP™, LEED® Green Associate™.
120:     Graduate in Electrical and Electronics Engineering from Mahatma Gandhi University, and MSc. Energy with dissertation on Light Pollution and Circularity in Lighting from Heriot-Watt University
121: 
122:     `,
123:     abstract: {
124:       title: 'Lighting for Dark Skies',
125:       description: `Mrs. Neethu Susan George, a member of
126:         the Society of Light & Lighting (MSLL) and a Dark Sky Advocate, presented
127:         "Lighting for Dark Skies," focusing on fundamental strategies to combat light
128:         pollution. She advocated for installing motion sensors or timers to regulate light
129:         usage efficiently and advocated for the adoption of lower-intensity lighting to
130:         minimize unnecessary illumination. Mrs. George emphasized the importance of
131:         properly aiming and shielding outdoor lights to prevent glare, light spill, and
132:         skyglow. Additionally, she recommended the implementation of louvers, baffles, or shields to
133:         direct light where needed and prevent it from dispersing into the sky or neighboring areas. To
134:         further mitigate light pollution, she suggested the use of curtains or blinds indoors to contain
135:         light within the premises, thus safeguarding the night environment from artificial light intrusion.
136:         
137:         Ms. George emphasized the importance of educating oneself and the community about the
138:         impacts of light pollution on the environment, human health, and astronomical observations.
139:         She encouraged support for organizations like the International Dark-sky Association (IDA),
140:         which actively promotes responsible outdoor lighting and the preservation of dark skies.
141:         Additionally, Ms. George advocated for increased involvement from stakeholders,
142:         companies, and government bodies to engage in discussions and collaborate on
143:         implementable solutions to address the issue of light pollution.`,
144:     },
145:     avatar: 'neethu-george',
146:     featured: false,
147:     inPerson: true,
148:   },
149:   {
150:     given_name: 'Bhakti',
151:     surname: 'Mithagri',
152:     professional_title: 'MSc Astrophysics',
153:     bio: 'Curious learner and astronomy enthusiast. Graduated with a Master\'s degree in Astrophysics from St. Xavier\'s College in Mumbai and currently preparing for Ph.D.',
154:     abstract: {
155:       title: 'Indian successors to the Indian Gamma-Ray Observatory(IGRO) Mission',
156:       description: `Ms. Bhakti Mithagri, an MSc Astrophysics graduate and avid astronomy
157:         enthusiast, delivered a presentation titled "Indian Successors to the Indian Gamma-Ray
158:         Observatory (IGRO) Mission." Alongside her colleague Mr. Kshititj Pawar, they elucidated
159:         an indigenous alternative mission concept in its initial stages. The presentation also addressed
160:         the issue of insufficient data democratisation within the research domain, particularly for
161:         students and young researchers.`,
162:     },
163:     avatar: 'bhakti-mithagri',
164:     featured: false,
165:     inPerson: true,
166:   },
167:   {
168:     title: 'Dr.',
169:     given_name: 'Anita',
170:     surname: 'Gupta',
171:     professional_title: 'Adviser/Scientist G at DST, Govt. of India',
172:     bio: 'Dr. Anita Gupta, an Adviser/Scientist G at India\'s DST, has over 25 years of experience in innovation, entrepreneurship, and start-ups. As Associate Head of Innovation and Entrepreneurship, she leads initiatives like Startup India, fostering over 150 technology business incubators across premier institutes and engaging in Public-Private Partnerships with major MNCs to enhance India\'s innovation landscape.',
173:     abstract: {
174:       title: 'Harnessing India\'s  potential to fight Climate Change',
175:       description: `Dr. Anita Gupta. Representing the Climate Change & Clean Energy (C3E) Division within
176:         the Department of Science and Technology, Government of India, Dr.
177:         Gupta underscored the government's cognizance of pressing concerns such
178:         as light pollution and its adverse effects on astronomy. She emphasized
179:         the readiness of governmental entities to engage in collaborative endeavors with
180:         organizations, corporations, and non-governmental organizations (NGOs) to explore
181:         alternative strategies and foster the adoption of clean energy practices and sustainable
182:         initiatives.`,
183:     },
184:     avatar: 'anita-gupta',
185:     featured: true,
186:     inPerson: false,
187:   },
188:   {
189:     given_name: 'Maria',
190:     surname: 'Alejandra Díaz',
191:     professional_title: 'Astronomer',
192:     bio: `Alejandra, with a Physics degree from UAM, Spain, has worked at the European Space Agency and is pursuing a PhD in Turku.
193:     Passionate about astronomy's societal impact, she's contributed to IAU's OAD projects and operates a telescope in La Palma alongside her thesis.`,
194:     abstract: {
195:       title: 'Astronomy\'s Impact on Sustainability',
196:       description: `Maria Alejandra Díaz is an astronomer with a Physics degree from UAM, Spain, and is
197:         pursuing a PhD in Turku. Passionate about astronomy's societal impact, she's contributed to
198:         IAU's OAD projects and operates a telescope in La Palma alongside her thesis. Her talk was
199:         titled Astronomy's Impact on Sustainability. In her talk, she gave a very brief overview of the
200:         various 200 projects funded by the IAU OAD and how these projects highlighted exactly the
201:         definition of sustainability and the harmony that it helps to maintain between economy,
202:         society and environment. She highlighted how these projects evolved in following Goal 4:
203:         quality education, Goal 8: Decent work and economic growth, Goal 5: gender equality, Goal
204:         10: Reduced Inequality, and Goal 11: affordable clean energy. She also mentioned case
205:         studies that highlighted astronomy and its impact and relation with mental health,
206:         socio-economic development and preserving indigenous roots and knowledge of the night sky.`,
207:     },
208:     avatar: 'maria-alejandra-diaz',
209:     featured: false,
210:     inPerson: false,
211:   },
212:   {
213:     title: 'Dr.',
214:     given_name: 'Priya',
215:     surname: 'Hasan',
216:     professional_title: 'Dr. of Astrophysics and Physics',
217:     bio: `Dr. Priya Hasan, from Moscow State and Osmania University, is an acclaimed astrophysicist. Awarded as Women Scientist by the Department of Science & Technology,
218:     she's lectured at CalTech and Harvard. Currently at Maulana Azad University, she co-chairs the IAU's Women in Astronomy and champions science outreac`,
219:     abstract: {
220:       title: 'Dark Skies and Bright Satellites',
221:       description: `Dr. Priya Hasan, a distinguished astrophysicist
222:         and co-chair of the International Astronomical
223:         Union's Women in Astronomy, delivered a presentation titled "Dark Skies and Bright
224:         Satellites." Dr. Hasan highlighted the disruptive impact of the launch of numerous satellites on
225:         astronomical observations, particularly during twilight after dawn and dusk. She elucidated
226:         that the brightness of satellites depends on various factors, including inclination, altitude,
227:         attitude, orbital position, wavelength, and time of the year. Focusing on the Vera Rubin Observatory (LSST), which scans the skies for
228:         transients and near-Earth objects, Dr. Hasan discussed the adverse effects of satellite trails in
229:         science images. These effects encompass the loss of information on pixels, cross-talk in
230:         electronics, ghost images, and residual images, varying depending on the telescope and
231:         detector used. Furthermore, Dr. Hasan addressed potential solutions and mitigation strategies, referencing
232:         the SATCON1 report. These strategies include reducing reflectivity through the application of
233:         dark paint, redirecting light away, deploying fewer satellites to minimize the issue, designing
234:         smaller satellites to mitigate their impact, and ensuring predictability to facilitate scheduled observations
235:         `,
236:     },
237:     avatar: 'priya-hasan',
238:     inPerson: false,
239:     featured: true,
240:   },
241:   {
242:     given_name: 'Vedvrat',
243:     surname: 'Vinayak Bedekar',
244:     professional_title: 'BE IT Student',
245:     bio: 'An amateur astronomer running an astronomy club in college. Frequent stargazer and host of stargazing events. ',
246:     abstract: {
247:       title: 'Light pollution: A Camouflaging pollution',
248:       description: `Mr. Vedvrat Vinayak Bedekar, a BE IT student and amateur astronomer overseeing an
249:         astronomy club in college, presented insights as one of the youngest speakers. His talk
250:         centred around the proposal to include a new category, 'Average Light Pollution,' in the daily
251:         regional weather report to raise awareness about the severity of light pollution. He further
252:         suggested the observance of a designated day, 'Dark Sky Preservation Day,' during which
253:         residents of villages and cities would turn off their lights temporarily to observe, enjoy, study,
254:         and appreciate the beauty of the universe. Additionally, he advocated for the initiation of a
255:         nationwide movement called 'Dark Sky Preservation Mission,' similar to the 'Swachh Bharat
256:         Mission.' This initiative would recognize and award villages and cities making exemplary
257:         efforts to raise awareness and reduce light pollution with a unique 'Dark Sky Preservation
258:         Award' at both state and national levels.
259:         `,
260:     },
261:     avatar: 'vedvrat-bedekar',
262:     featured: false,
263:     inPerson: false,
264:   },
265:   {
266:     given_name: 'David',
267:     surname: 'Ault',
268:     professional_title: 'Director of Education For Immersive Experiences',
269:     bio: `David is the Director of Education for Immersive Experiences, a UK planetarium and interactives company with a global footprint.
270:     With an astrophysics degree from Cambridge University, he entered the planetarium space in 2006, organising science festivals and starting a number of astronomy podcasts.`,
271:     abstract: {
272:       title: 'The planetarium as a creative space',
273:       description: `David Ault, the Director of Education for Immersive
274:         Experiences, a UK-based planetarium and interactives
275:         company, adeptly showcased the use of domes as an
276:         interactive tool for educating intricate concepts in
277:         astronomy. Through collaborative discussions,
278:         plans were formulated to deploy these inflatable
279:         portable domes in schools and remote areas, creating a mobile planetarium.
280:         This initiative aims to reinstate and enhance
281:         outreach efforts in the field of astronomy.
282:         `,
283:     },
284:     avatar: 'david-ault',
285:     featured: false,
286:     inPerson: false,
287:   },
288:   {
289:     given_name: 'Samyukta',
290:     surname: 'Manikumar',
291:     professional_title: 'Astrotourism Consultant',
292:     bio: `Samyukta, director of Noctia Institute, champions dark sky conservation through astrotourism. Blending science with cultural preservation,
293:     she's a fellow at the International Astronomical Union, focusing on rural astrotourism resources via the 'Socio-economic development through Astronomy Flagship'.`,
294:     abstract: {
295:       title: 'Harnessing Dark Skies for Socioeconomic Development in Rural Areas',
296:       description: `Ms. Samyukta Manikumar,
297:         an Astro Tourism consultant and fellow at the
298:         International Astronomical Union, presented on the
299:         topic "Harnessing Dark Skies for Socioeconomic
300:         Development in Rural Areas." She highlighted the
301:         immense potential of astro tourism in involving,
302:         educating, and uplifting rural populations. Ms Manikumar emphasized that rural areas still
303:         have the privilege of having dark skies, which can be leveraged by tourism companies
304:         through collaborations with the rural population. This, in turn, can help improve the social
305:         and economic conditions of these areas.
306:         `,
307:     },
308:     avatar: 'samyukta-manikumar',
309:     inPerson: false,
310:     featured: true,
311:   },
312:   {
313:     given_name: 'Upasana',
314:     surname: 'Dasgupta',
315:     professional_title:
316:       'Postdoctoral Researcher at Canada Research Chair in International Political Economy of Université Laval ',
317:     bio: `Upasana Dasgupta researches space policies at Université Laval and is on ACES Worldwide's board. With a Doctorate from McGill,
318:     she's an expert in space law, associated with global space entities, and emphasizes on space collision prevention and dark sky conservation.`,
319:     avatar: 'upasana-dasgupta',
320:     abstract: {
321:       title: 'Intruders in the Dark Sky: The Megaconstellation Crisiss',
322:       description: ` Ms. Upasana Dasgupta, a Postdoctoral Researcher at the Canada Research Chair in
323:         International Political Economy of Université Laval, presented "Intruders in the Dark Sky:
324:         The Mega Constellation Crisis." She outlined the current space policy framework, including
325:         the Outer Space Treaty, liability convention, and Moon agreement. Ms. Dasgupta highlighted
326:         the absence of dedicated regulations for satellite constellations and debris, underscoring their
327:         disruptive impact on observational astronomy by introducing additional noise into datasets,
328:         hindering scientific research.
329:         `,
330:     },
331:     featured: false,
332:     inPerson: true,
333:   },
334:   {
335:     given_name: 'Dinesh',
336:     surname: 'Nisang',
337:     professional_title: 'Science Communicator',
338:     bio: `Dinesh founded Sunday Science School and is passionate about science communication. An astronomer, he views astronomy as a unifier for humanity.
339:     He enjoys astrophotography, exploring nature, and is an aspiring writer with articles and a book on scientific innovation. Focus: ISAAC.`,
340:     abstract: {
341:       title: 'Stellar Education: Unveiling ISAAC',
342:       description: `Mr. Dinesh Nisang, Science Communicator and founder of Sunday Science School shared
343:         his talk “Stellar Education: Unveiling Interactive Space and Astronomy Activity Centre”
344:         (ISAAC). His entire conversation was focused on how astronomy deserves and hands on
345:         approach to improve and enhance better understanding the concepts. He demonstrated very
346:         well by showing the kits of innovative models, one of them was a GMRT telescope which
347:         helped understand the engineering aspect as well as the working of the observatory. His talk
348:         very well complemented the tone of the day's inclusion of astronomy and space science in the
349:         educational curriculum.
350:         `,
351:     },
352:     avatar: 'dinesh-nisang',
353:     featured: false,
354:     inPerson: true,
355:   },
356:   {
357:     given_name: 'Exodus',
358:     surname: 'Chun-Long Sit',
359:     professional_title: 'Transmedia Astronomy Educator',
360:     bio: `Exodus CL Sit from Hong Kong is a transmedia astronomy educator and science author.
361:     He holds roles in IAU as the National Astronomy Education Coordinator for Hong Kong and Co-Outreach Coordinator.
362:     A member of the Dark Sky International Committee, he champions dark-sky protection, STEAM education, and interdisciplinary science approaches.`,
363:     abstract: {
364:       title: 'ASTROx Dark Sky: How to Integrate Astronomy Education into Interactive Classroom',
365:       description: `Exodus Chun-Long Sit addressed
366:         the integration of astronomy education in an interactive
367:         classroom and the escalating issue of light pollution, proposing a DIY
368:         light shielding solution. He also explored the interconnectedness of
369:         entrepreneurship and space arts with astronomy. Additionally, he
370:         advocated for biodiversity conservation, suggesting the
371:         establishment of Dark Sky Parks. Mr. Sit emphasized the IDEAS
372:         framework, encompassing Immersivity, Diversity, Equity, Access, and Spreading awareness, as a strategy for advancing
373:         astronomy education and outreach efforts.
374:         `,
375:     },
376:     avatar: 'exodus-chun-long-sit',
377:     featured: false,
378:     inPerson: false,
379:   },
380:   {
381:     given_name: 'Nadia Makhijani',
382:     surname: '& Udish Sharma',
383:     professional_title: 'BSc. Physics Students',
384:     bio: `We are pursuing BSc Physics hons from St. Stephen's College, University of Delhi and have mainly worked in radio astronomy,
385:     its applications and Cosmology. Nadia Makhijani and Udish Sharma are students in their final year at St. Stephen's College pursuing a course in physics.
386:     They work in the fields of Astronomy and Cosmology and are currently involved in setting up a Radio Astronomy Laboratory in their institution.
387:     They are also currently in the student led physics and astronomy society.`,
388:     avatar: 'nadia-makhijani',
389:     abstract: {
390:       title: 'Affordable Radio Astronomy Lab',
391:       description: `Ms. Nadia Makhijani and Mr. Udish Sharma, both BSc Physics students with a primary focus
392:         on radio astronomy, its applications, and cosmology, presented a talk titled "Affordable Radio
393:         Astronomy Lab." During their presentation, they introduced an economically viable radio
394:         telescope – a pyramidal horn – that was constructed in-house using low-cost equipment. This
395:         telescope is designed for use in college laboratories and outreach programs, providing an
396:         accessible platform for students. The duo utilized the horn antenna for a Radio Frequency
397:         Interference (RFI) survey of their campus, observed the H-21 emission from our galaxy, and
398:         plotted the rotation curve. They also highlighted the versatility of this affordable setup for
399:         various experiments in college laboratories, such as satellite and meteor tracking, receiving
400:         weather images, and collecting GPS data. The objective of their presentation was to
401:         emphasize how cost-effective experiments can be implemented in undergraduate labs.
402:         `,
403:     },
404:     featured: false,
405:     inPerson: false,
406:   },
407:   {
408:     title: 'Dr.',
409:     given_name: 'Kiran',
410:     surname: 'Kulkarni',
411:     professional_title: 'Indian Administrative Service Officer',
412:     bio: 'Dr. Kulkarni has significantly contributed to tribal development, notably as Tribal Development Commissioner. While his work doesn\'t directly involve astronomy, his extensive outreach in education and governance innovations hints at a potential for fostering astronomy-related initiatives within tribal communities. His campaigns like Dream Melghat showcase his commitment to community upliftment, possibly providing a platform for intertwining traditional tribal knowledge with astronomical insights.',
413:     abstract: {
414:       title: 'Sustainable Development through Astronomy: A Tribal Perspective',
415:       description: `Dr. Kiran Kulkarni (IAS), former Commissioner of the
416:         Tribal Development Department, Gov. of Maharashtra. While Dr. Kulkarni's primary
417:         professional focus may not directly involve astronomy, his extensive involvement in
418:         education and governance innovations suggests potential avenues for fostering
419:         astronomy-related initiatives within tribal communities. His talk was titled
420:         "Sustainable Development through Astronomy: A Tribal Perspective."
421:         During his presentation, Dr. Kulkarni drew attention to the critical distinctions
422:         between tribal and rural communities. He prompted contemplation on the unique
423:         characteristics of the locations inhabited by tribal populations, characterized by their remoteness, isolation, and freedom from the
424:         impact of pollution, including light pollution. Dr. Kulkarni suggested that these remote and
425:         quiet locations might be ideal for establishing dark skies, encouraging further assessment and
426:         consideration for similar initiatives.
427:         `,
428:     },
429:     avatar: 'kiran-kulkarni',
430:     featured: true,
431:     inPerson: true,
432:   },
433:   {
434:     given_name: 'Amshu',
435:     surname: 'CR',
436:     professional_title: 'Entrepreneur, Thapasu foods LLP',
437:     bio: 'Forest value chains, Land degradation, Biodynamic Agriculture, Tribal produce supply chains, Food security, knowledge preservation, Sustainablity ',
438:     abstract: {
439:       title: 'The ancient science of space and agriculture for sustainability and harmony',
440:       description: `Amshu CR, an entrepreneur from Thapasu Foods LLP, presented on "The
441:         Ancient Science of Space and Agriculture for Sustainability and Harmony." She effectively
442:         explained the significance of Vedic knowledge in assessing the night skies based on seasons
443:         and how this knowledge can be applied to enhance agricultural conditions. Emphasizing the
444:         revision and implementation of this ancient approach in the form of Biodynamic farming,
445:         Amshu CR left the audience with thought-provoking insights. The presentation highlighted
446:         how actual sky observations, in addition to satellite imagery and mapping, can assist farmers
447:         in optimizing their agricultural practices.
448:         `,
449:     },
450:     avatar: 'amshu-cr',
451:     featured: false,
452:     inPerson: false,
453:   },
454:   {
455:     given_name: 'Albert',
456:     surname: 'Kuntu Forson',
457:     professional_title: 'PhD Research Student',
458:     bio: 'Albert, an engineer specializing in Radio Astronomy Instrumentation and radio interferometer designs at the University of Mauritius, holds the esteemed role of IAU-OAD National Astronomy Education Coordinator for Ghana. Additionally, he serves as the President for PRAGSAC and is highly enthusiastic about science communication.',
459:     abstract: {
460:       title:
461:         'Empowering Ghana\'s STEM Education: Bridging the Gap through Capacity Building in Astronomy Instrumentation',
462:       description: `Mr. Albert Kuntu Forson, a Ph.D. Research Student and
463:         the IAU-OAD National Astronomy Education Coordinator for Ghana,
464:         presented on "Empowering Ghana's STEM Education: Bridging the Gap
465:         through Capacity Building in Astronomy Instrumentation." Mr.
466:         Forson emphasized Africa's growing presence in the field of space sciences
467:         and discussed initiatives such as the AtroPhy project. This project serves
468:         as a catalyst for graduate and undergraduate students, offering hands-on experience in radio telescope engineering and
469:         operational techniques. Utilizing the Table Top Radio Telescope (TTRT) for Galactic
470:         Hydrogen Emission (HI) studies and developing small parabolic dish antennas, AtroPhy
471:         contributes significantly to addressing socio-economic challenges, including poverty, hunger,
472:         and illegal mining in Ghana. By nurturing practical skills, fostering scientific curiosity, and
473:         promoting collaboration, AtroPhy plays a pivotal role in advancing STEM education and
474:         capacity building in the region.
475:         `,
476:     },
477:     avatar: 'albert-forson',
478:     featured: false,
479:     inPerson: false,
480:   },
481:   {
482:     given_name: 'Aishwarya',
483:     surname: 'Khade',
484:     professional_title: 'Mental Health Practitioner / Expressive Arts ',
485:     bio: 'A seasoned Psychologist and Mental Health Professional, Aishwarya Khade employs art and movement-based facilitation in educational and corporate settings. Specialized in corporate wellness, her drive is to enhance mental health and well-being through innovative methodologies.',
486:     abstract: {
487:       title: 'Mental Health Arts and Astronomy',
488:       description: `The final presentation of the day addressed the intersection of Mental Health, Arts, and
489:         Astronomy, delivered by Ms. Aishwarya Khade, a seasoned Psychologist and Mental Health
490:         Professional. Ms. Khade employs art and movement-based facilitation techniques in both
491:         educational and corporate settings. She provided a detailed account of her experiences while
492:         collaborating with the AstoTribe project in Nashik in 2022 and Ladakh in 2023. Ms Khade
493:         emphasized her work with tribal children who were undergoing training to become Astro
494:         guides. The incorporation of artistic elements proved instrumental in creating a comfortable
495:         environment, allowing the children to share their indigenous tribal stories related to
496:         constellations. This approach also facilitated discussions about the beliefs and superstitions
497:         prevalent in their respective tribal communities.
498:         `,
499:     },
500:     avatar: 'aishwarya-khade',
501:     featured: false,
502:     inPerson: true,
503:   },
504:   {
505:     given_name: 'Hosein',
506:     surname: 'Khezri',
507:     professional_title: 'Associate of Commission C1 WG Astronomy Education Research & Methods',
508:     bio: 'Affiliated with multiple astronomical unions including the IAU, Hosein Khezri is dedicated to elevating astronomy education and its cultural integration. His association with the Iranian Teachers Astronomy Union and various International Astronomical Union commissions reflects a broad engagement in promoting astronomy in diverse cultural landscapes.',
509:     abstract: {
510:       title: 'Road to Sky',
511:       description: 'Cancelled due to technical issues',
512:     },
513:     avatar: 'hossein-khezri',
514:     featured: false,
515:     inPerson: false,
516:   },
517:   {
518:     given_name: 'Shweta',
519:     surname: 'Kulkarni',
520:     professional_title: 'Founder/Director of AstronEra',
521:     bio: 'Astropreneur Shweta Kulkarni, listed among top 100 women entrepreneurs, spearheads Astronera, marrying business acumen with astronomy for innovative solutions. As a Fellow of the Royal Astronomical Society of England, her venture reflects a novel approach to integrating astronomy with enterprise.',
522:     abstract: {
523:       title: 'Skill Training in Astronomy for Income Generation',
524:       description: `Shweta, the director of AstronEra and CEO of Astron
525:         SHK Trust, initiated the conference to bridge the link between conserving dark skies and
526:         sustainable socio-economic development. She introduced herself as an "AstroPreneur,"
527:         emphasizing her dual roles as a part-time astronomer and full-time entrepreneur. Shweta
528:         identified key problems including the lack of authentic astronomy knowledge, scientific
529:         temperament in society, and diminishing dark skies due to light pollution.
530:         She introduced the "AstroTribe" Project, funded by IAU and OAD, aimed at training tribal
531:         children in astronomy to empower them economically. This initiative incentivizes students by
532:         enabling them to generate income through bridging technical astronomy with entertainment
533:         through astrotourism, thereby promoting awareness about dark skies and addressing SDGs of
534:         quality education and sustainable economic growth.
535:         Shweta outlined action points post-conference, focusing on understanding the problem of
536:         light pollution, identifying target areas and audiences, determining mediums and expected
537:         outcomes, and establishing frameworks aligned with the human right to dark skies. She
538:         emphasized leveraging resources available on darksky.org to find solutions and highlighted
539:         the historical contributions to astronomy, underscoring the responsibility to conserve night
540:         skies for future generations.
541:         Following Shweta's talk, a significant event took place where the Astroguide's batch in
542:         Manali was honored with certificates and recognized for the income they earned from their
543:         stargazing event. This event served as their graduation ceremony, marking the culmination of
544:         their training. The Astroguides introduced themselves and shared their experiences gained
545:         through the training program. They expressed heartfelt gratitude towards the AstronEra team
546:         for their support and guidance throughout the journey. This ceremony not only celebrated the
547:         achievements of the Astroguides but also highlighted the impact of empowering individuals
548:         with astronomical knowledge and skills for economic sustainability in the region.`,
549:     },
550:     avatar: 'shweta-kulkarni',
551:     featured: true,
552:     inPerson: true,
553:   },
554: ] as SpeakerType[]
555: 
556: const filterSpeakers = (featured: boolean, toSort = false) => {
557:   return speakers
558:     .filter((s: Speaker): boolean | undefined => s.featured === featured)
559:     .sort((a: Speaker, b: Speaker) => {
560:       if (!toSort) return 0
561:       if (a.given_name < b.given_name) {
562:         return -1
563:       }
564:       if (a.given_name > b.given_name) {
565:         return 1
566:       }
567:       return 0
568:     })
569: }
570: </script>
571: 
572: <style scoped></style>
```

## File: apps/website/components/conference/ConferenceVenue.vue
```vue
 1: <template>
 2:   <div class="relative grid grid-cols-1 items-start gap-6 lg:grid-cols-2 xl:gap-12">
 3:     <CommonTitle
 4:       class="row-start-1"
 5:       :title="venue.title"
 6:     >
 7:       <div class="row-start-2 h-full w-full space-y-4 text-left leading-6">
 8:         <p class="font-normal">
 9:           {{ venue.about }}
10:         </p>
11:         <PrimeButton
12:           as="a"
13:           href="https://www.manuallaya.com/"
14:           target="_blank"
15:           variant="outline"
16:         >
17:           Manu Allaya Website
18:         </PrimeButton>
19:       </div>
20:     </CommonTitle>
21:     <div class="h-full w-full">
22:       <IBImage
23:         :img="{
24:           src: image.src,
25:           alt: image.alt,
26:           width: '440',
27:           height: '520',
28:         }"
29:         class="mx-auto w-full rounded-md"
30:       />
31:     </div>
32:   </div>
33: </template>
34: 
35: <script setup lang="ts">
36: const venue = {
37:   title: {
38:     main: 'Conference Venue, Manu Allaya',
39:     subtitle: 'Manali, Himachal Pradesh, India',
40:   },
41:   website: 'https://www.manuallaya.com/',
42:   about: `Nestled in the heart of Himachal Pradesh in India, ManuAllaya served as a celestial
43:     gateway, offering guests an enchanting experience under the vast expanse of the night sky
44:     adorned with a myriad of stars. Manu Allaya not only provided a luxurious setting but also
45:     embraced the rich history, art, and culture of the region, seamlessly blending it with modern
46:     elegance. Overall, the choice of ManuAllaya as the conference venue and the thoughtful selection of
47:     presentation themes contributed to creating an immersive and intellectually stimulating
48:     environment, enabling participants to engage deeply with the subject matter and further the
49:     objectives of the conference.`,
50: }
51: const image = {
52:   src: 'conference/manu-allaya-milkyway-poster.jpg',
53:   alt: 'Manu Allaya resort at night with the milky way in the background',
54: }
55: </script>
```

## File: apps/website/components/footer/FooterBottomBar.vue
```vue
  1: <script setup lang="ts">
  2: const policies = ['privacy-policy', 'terms-of-use', 'cookies-policy', 'refund-policy']
  3: const currentYear = new Date().getFullYear()
  4: </script>
  5: 
  6: <template>
  7:   <div class="relative w-full">
  8:     <LandingGlass
  9:       hover-effect="glow"
 10:       glow-color="purple"
 11:       gradient="mixed"
 12:       intensity="low"
 13:       interactive
 14:       isolate-content
 15:     >
 16:       <div class="flex flex-col gap-6 text-sm">
 17:         <!-- Policies Links -->
 18:         <div class="flex flex-wrap justify-center gap-x-6 gap-y-2">
 19:           <NuxtLink
 20:             v-for="policy in policies"
 21:             :key="policy"
 22:             :to="`/policies/${policy}`"
 23:             class="policy-link relative"
 24:           >
 25:             <span
 26:               class="text-gray-400 hover:text-primary-400 transition-colors duration-300 capitalize"
 27:             >
 28:               {{ policy.replace('-', ' ') }}
 29:             </span>
 30:           </NuxtLink>
 31:         </div>
 32: 
 33:         <!-- Copyright Text -->
 34:         <div class="text-center text-gray-400">
 35:           <p class="inline-flex items-center gap-1">
 36:             ©2018 - {{ currentYear }} AstronEra. All rights reserved - Made with
 37:             <span class="inline-block animate-pulse text-red-500">❤️</span>
 38:             by
 39:             <a
 40:               href="https://www.incubrain.org/"
 41:               target="_blank"
 42:               class="incubrain-link relative ml-1 text-primary-400 hover:text-primary-300 transition-colors duration-300"
 43:             >
 44:               Incubrain
 45:             </a>
 46:           </p>
 47:         </div>
 48:       </div>
 49:     </LandingGlass>
 50:   </div>
 51: </template>
 52: 
 53: <style scoped>
 54: /* Policy link hover effect */
 55: .policy-link::after {
 56:   content: '';
 57:   position: absolute;
 58:   left: 0;
 59:   bottom: -1px;
 60:   width: 0;
 61:   height: 1px;
 62:   background-color: var(--primary-400);
 63:   transition: width 0.3s ease;
 64: }
 65: 
 66: .policy-link:hover::after {
 67:   width: 100%;
 68: }
 69: 
 70: /* Incubrain link hover effect */
 71: .incubrain-link::after {
 72:   content: '';
 73:   position: absolute;
 74:   left: 0;
 75:   bottom: -1px;
 76:   width: 0;
 77:   height: 1px;
 78:   background-color: var(--primary-400);
 79:   transition: width 0.3s ease;
 80: }
 81: 
 82: .incubrain-link:hover::after {
 83:   width: 100%;
 84: }
 85: 
 86: /* Heart animation */
 87: @keyframes heartbeat {
 88:   0%,
 89:   100% {
 90:     transform: scale(1);
 91:   }
 92:   50% {
 93:     transform: scale(1.1);
 94:   }
 95: }
 96: 
 97: .animate-heartbeat {
 98:   animation: heartbeat 1.5s ease-in-out infinite;
 99: }
100: </style>
```

## File: apps/website/components/footer/FooterCategories.vue
```vue
 1: <script setup lang="ts">
 2: type Category = {
 3:   title: string
 4:   links: string[]
 5: }
 6: 
 7: defineProps<{
 8:   category: Category
 9: }>()
10: </script>
11: 
12: <template>
13:   <ul>
14:     <li>
15:       <p class="text-lg font-semibold tracking-wide text-white">
16:         {{ category.title }}
17:       </p>
18:     </li>
19:     <li
20:       v-for="(link, linkIndex) in category.links"
21:       :key="`footer-link-${linkIndex}`"
22:       class="mt-6"
23:     >
24:       <a
25:         href=""
26:         class="text-base tracking-wide text-white"
27:       >
28:         {{ link }}
29:       </a>
30:     </li>
31:   </ul>
32: </template>
33: 
34: <style scoped></style>
```

## File: apps/website/components/footer/FooterWebsite.vue
```vue
  1: <script setup>
  2: const socials = ref([
  3:   {
  4:     id: 1,
  5:     platform: 'twitter',
  6:     icon: 'mdi:twitter',
  7:     url: 'https://twitter.com/AstronEra',
  8:     username: 'uk',
  9:   },
 10:   {
 11:     id: 2,
 12:     icon: 'mdi:linkedin',
 13:     platform: 'linkedin',
 14:     url: 'https://www.linkedin.com/company/astronera',
 15:     username: 'uk',
 16:   },
 17:   {
 18:     id: 3,
 19:     icon: 'mdi:instagram',
 20:     platform: 'instagram',
 21:     url: 'https://www.instagram.com/astronera',
 22:     username: 'uk',
 23:   },
 24: ])
 25: 
 26: const websiteLinks = [
 27:   {
 28:     key: 'about-us',
 29:     label: 'About Us',
 30:     icon: 'material-symbols:info',
 31:     visible: true,
 32:     disabled: false,
 33:     items: [
 34:       {
 35:         key: 'about',
 36:         label: 'About',
 37:         icon: 'material-symbols:info',
 38:         url: '/about',
 39:         visible: true,
 40:         disabled: false,
 41:       },
 42:       {
 43:         key: 'team',
 44:         label: 'Team',
 45:         icon: 'material-symbols:emoji-people',
 46:         url: '/team',
 47:         visible: true,
 48:         disabled: false,
 49:       },
 50:       {
 51:         key: 'contact',
 52:         label: 'Contact',
 53:         icon: 'material-symbols:call',
 54:         url: '/contact',
 55:         visible: true,
 56:         disabled: false,
 57:       },
 58:     ],
 59:   },
 60:   {
 61:     key: 'projects',
 62:     label: 'Projects',
 63:     icon: 'material-symbols:work',
 64:     visible: true,
 65:     disabled: false,
 66:     items: [
 67:       {
 68:         key: 'dark-sky-conference-2023',
 69:         label: 'Conference',
 70:         icon: 'material-symbols:mic-rounded',
 71:         url: '/projects/dark-sky-conference-2023',
 72:         visible: true,
 73:         disabled: false,
 74:       },
 75:       // {
 76:       //   key: 'astrotribe',
 77:       //   label: 'Astrotribe',
 78:       //   icon: 'material-symbols:groups',
 79:       //   url: 'projects/astrotribe',
 80:       //   visible: true,
 81:       //   disabled: false
 82:       // },
 83:     ],
 84:   },
 85:   // {
 86:   //   key: 'events',
 87:   //   label: 'Events',
 88:   //   icon: 'material-symbols:event',
 89:   //   visible: false,
 90:   //   disabled: false,
 91:   //   items: [
 92:   //     {
 93:   //       key: 'stargazing',
 94:   //       label: 'Stargazing',
 95:   //       icon: 'material-symbols:dark-mode',
 96:   //       url: '/events/stargazing',
 97:   //       visible: false,
 98:   //       disabled: false
 99:   //     }
100:   //   ]
101:   // },
102:   {
103:     key: 'blog',
104:     label: 'Blog',
105:     icon: 'material-symbols:menu-book-outline',
106:     visible: true,
107:     disabled: false,
108:     items: [
109:       {
110:         key: 'blog-home',
111:         label: 'All',
112:         icon: 'material-symbols:menu-book-outline',
113:         url: '/blog/category/all/page/1',
114:         visible: true,
115:         disabled: false,
116:       },
117:       {
118:         key: 'blog-dark-sky-conservation',
119:         label: 'Conservation',
120:         icon: 'material-symbols:menu-book-outline',
121:         url: '/blog/category/dark-sky-conservation/page/1',
122:         visible: true,
123:         disabled: false,
124:       },
125:       {
126:         key: 'blog-people-of-space',
127:         label: 'People',
128:         icon: 'material-symbols:menu-book-outline',
129:         url: '/blog/category/people-of-space/page/1',
130:         visible: true,
131:         disabled: false,
132:       },
133:       {
134:         key: 'blog-space-exploration',
135:         label: 'Exploration',
136:         icon: 'material-symbols:menu-book-outline',
137:         url: '/blog/category/space-exploration/page/1',
138:         visible: true,
139:         disabled: false,
140:       },
141:       {
142:         key: 'blog-sustainable-development',
143:         label: 'Sustainability',
144:         icon: 'material-symbols:menu-book-outline',
145:         url: '/blog/category/sustainable-development/page/1',
146:         visible: true,
147:         disabled: false,
148:       },
149:     ],
150:   },
151: ]
152: </script>
153: 
154: <template>
155:   <footer class="container py-8 gap-8 w-full relative flex">
156:     <LandingGlass
157:       hover-effect="glow"
158:       glow-color="purple"
159:       gradient="mixed"
160:       intensity="low"
161:       interactive
162:     >
163:       <!-- Content -->
164:       <div class="relative z-10 grid grid-cols-1 lg:grid-cols-[180px_3fr_180px] gap-8 w-full">
165:         <!-- Logo Section -->
166:         <div class="flex items-start">
167:           <NuxtLink
168:             to="/"
169:             class="flex items-center gap-4 group"
170:           >
171:             <div class="hidden gap-4 rounded-md p-1 lg:flex">
172:               <div
173:                 class="relative flex h-[36px] w-[36px] items-center justify-center rounded-md border bg-white p-1 md:h-[44px] md:w-[44px]"
174:               >
175:                 <IBImage
176:                   :img="{
177:                     src: '/astronera-logo.jpg',
178:                   }"
179:                   class="h-full w-full opacity-90"
180:                 />
181:               </div>
182:               <div class="flex justify-center">
183:                 <h1
184:                   class="mt-[2px] flex cursor-pointer flex-col items-start justify-start pr-2 text-sm font-bold uppercase leading-none tracking-normal"
185:                 >
186:                   Astron
187:                   <strong class="font-extrabold text-primary-400"> Era </strong>
188:                 </h1>
189:               </div>
190:             </div>
191:           </NuxtLink>
192:         </div>
193: 
194:         <!-- Links Section -->
195:         <div class="grid grid-cols-3 gap-8 mx-auto">
196:           <div
197:             v-for="link in websiteLinks"
198:             :key="link.key"
199:             class="space-y-4"
200:           >
201:             <h4 class="font-space text-lg text-white">
202:               {{ link.label }}
203:             </h4>
204:             <ul class="space-y-2">
205:               <li
206:                 v-for="item in link.items"
207:                 :key="item.key"
208:               >
209:                 <NuxtLink
210:                   :to="item.url"
211:                   class="text-gray-400 hover:text-sky-400 transition-colors duration-300 text-sm max-w-xl text-wrap"
212:                 >
213:                   {{ item.label }}
214:                 </NuxtLink>
215:               </li>
216:             </ul>
217:           </div>
218:         </div>
219: 
220:         <!-- Social Links -->
221:         <div class="flex flex-col items-end gap-4">
222:           <NuxtLink
223:             v-for="social in socials"
224:             :key="social.id"
225:             :to="social.url"
226:             target="_blank"
227:             class="group relative p-2 rounded-lg transition-all duration-300 hover:bg-sky-500/10"
228:           >
229:             <Icon
230:               :name="social.icon"
231:               class="text-gray-400 group-hover:text-sky-400 transition-colors duration-300"
232:               size="24px"
233:             />
234:           </NuxtLink>
235:         </div>
236:       </div>
237:     </LandingGlass>
238:     <FooterBottomBar class="relative z-10" />
239:   </footer>
240: </template>
241: 
242: <style>
243: @keyframes glow {
244:   0%,
245:   100% {
246:     box-shadow:
247:       0 0 0 1px rgba(74, 222, 255, 0.1),
248:       0 0 8px rgba(74, 222, 255, 0.1),
249:       inset 0 0 4px rgba(74, 222, 255, 0.1);
250:   }
251:   50% {
252:     box-shadow:
253:       0 0 0 1px rgba(74, 222, 255, 0.2),
254:       0 0 16px rgba(74, 222, 255, 0.2),
255:       inset 0 0 8px rgba(74, 222, 255, 0.2);
256:   }
257: }
258: 
259: .animate-glow {
260:   animation: glow 4s ease-in-out infinite;
261: }
262: </style>
```

## File: apps/website/components/home/FeatureGroup.vue
```vue
 1: <template>
 2:   <div class="px-4 py-8">
 3:     <h1 class="mb-4 text-center text-4xl font-bold">
 4:       {{ title }}
 5:     </h1>
 6:     <p class="mb-8 text-center text-xl">
 7:       {{ description }}
 8:     </p>
 9:     <div
10:       class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 rounded-lg border border-color overflow-hidden"
11:     >
12:       <div
13:         v-for="feature in features"
14:         :key="feature.title"
15:         class="foreground border-color flex flex-col border p-4 lg:p-8 shadow-md"
16:       >
17:         <div class="flex items-center gap-2 pb-2">
18:           <Icon
19:             :name="feature.icon"
20:             class="text-xl text-primary-900"
21:           />
22:           <h3 class="text-xl font-semibold">
23:             {{ feature.title }}
24:           </h3>
25:         </div>
26:         <span class="text-sm"
27:           >{{ feature.description }}
28: 
29:           <NuxtLink
30:             :to="feature.link"
31:             class="text-blue-800 hover:underline"
32:             >{{ feature.linkText }}
33:           </NuxtLink>
34:         </span>
35:       </div>
36:     </div>
37:   </div>
38: </template>
39: 
40: <script setup lang="ts">
41: interface Feature {
42:   icon: string
43:   title: string
44:   description: string
45:   link: string
46:   linkText: string
47: }
48: 
49: interface Props {
50:   title: string
51:   description: string
52:   features: Feature[]
53: }
54: 
55: const props = defineProps<Props>()
56: </script>
```

## File: apps/website/components/home/HomeButton.vue
```vue
 1: <template>
 2:   <PrimeButton
 3:     color="primary"
 4:     size="large"
 5:   >
 6:     <Icon
 7:       :class="hasIcon ? 'flex' : 'hidden absolute'"
 8:       :name="icon"
 9:     />
10:     {{ cta }}
11:   </PrimeButton>
12: </template>
13: 
14: <script setup lang="ts">
15: defineProps({
16:   cta: {
17:     type: String as PropType<string>,
18:     required: true,
19:   },
20:   hasIcon: {
21:     type: Boolean as PropType<boolean>,
22:     default: false,
23:   },
24:   icon: {
25:     type: String as PropType<string>,
26:     default: '',
27:   },
28: })
29: </script>
30: 
31: <style scoped></style>
```

## File: apps/website/components/home/HomeCtaMain.vue
```vue
 1: <template>
 2:   <div
 3:     class="relative flex items-center text-white justify-center w-full p-10 mx-auto md:py-20 lg:py-40 bg-black"
 4:   >
 5:     <div class="flex flex-col items-center justify-center gap-4 text-center text-light">
 6:       <h2 class="text-3xl font-bold">
 7:         {{ title }}
 8:       </h2>
 9:       <p class="max-w-sm text-lg leading-snug text-center">
10:         {{ body }}
11:       </p>
12:       <NuxtLink to="auth/register">
13:         <PrimeButton
14:           class="p-2"
15:           color="primary"
16:           size="xl"
17:         >
18:           {{ cta }}
19:         </PrimeButton>
20:       </NuxtLink>
21:     </div>
22:   </div>
23: </template>
24: 
25: <script setup lang="ts">
26: defineProps({
27:   title: {
28:     type: String as PropType<string>,
29:     required: true,
30:   },
31:   body: {
32:     type: String as PropType<string>,
33:     required: true,
34:   },
35:   cta: {
36:     type: String as PropType<string>,
37:     required: true,
38:   },
39: })
40: </script>
41: 
42: <style scoped></style>
```

## File: apps/website/components/home/HomeFeatures.vue
```vue
 1: <template>
 2:   <div class="mx-auto py-[40px] md:py-[80px] lg:py-[160px]">
 3:     <div class="mx-auto">
 4:       <HomeHeading
 5:         class="pb-16 md:pb-24"
 6:         heading="What is AstroTribe?"
 7:         subheading="Built By Astronomers For Astronomers"
 8:       />
 9:       <div
10:         class="grid grid-cols-1 items-start justify-center gap-4 md:grid-cols-2 md:gap-8 xl:grid-cols-3"
11:       >
12:         <div
13:           v-for="feature in features"
14:           :key="feature.id"
15:           class="text-white relative mx-auto h-full overflow-hidden rounded-lg p-8 shadow-md"
16:         >
17:           <IBImage
18:             :img="{
19:               src: feature.bgImg,
20:               alt: `${feature.title} background image`,
21:               height: '366px',
22:               width: '290px',
23:               quality: '70',
24:               format: 'webp',
25:             }"
26:             class="absolute left-0 top-0 h-full w-full object-cover"
27:           />
28:           <div class="absolute left-0 top-0 h-full w-full bg-zinc-900/80" />
29:           <div class="text-light relative z-50">
30:             <Icon
31:               :name="feature.icon"
32:               size="28px"
33:             />
34:             <div class="pt-4">
35:               <h1 class="text-lg font-semibold tracking-wider lg:text-2xl">
36:                 {{ feature.title }}
37:               </h1>
38:               <p class="mt-2 w-11/12 text-sm leading-normal tracking-wider">
39:                 {{ feature.description }}
40:               </p>
41:               <p
42:                 v-if="!feature.isAvailable"
43:                 class="text-success-test pt-2 text-xs font-semibold"
44:               >
45:                 Coming soon
46:               </p>
47:             </div>
48:           </div>
49:         </div>
50:       </div>
51:     </div>
52:   </div>
53: </template>
54: 
55: <script setup lang="ts">
56: import features from '@/data/home/features.json'
57: 
58: // must list out icons for them to work, for some reason they don't load directly from JSON (nuxthq/ui bug)
59: const icons = [
60:   'material-symbols:group-add',
61:   'material-symbols:calendar-month',
62:   'material-symbols:android-messages-outline',
63:   'mdi:briefcase',
64:   'mdi:telescope',
65:   'material-symbols:circle-notifications',
66: ]
67: </script>
68: 
69: <style scoped></style>
```

## File: apps/website/components/home/HomeFeatureTabs.vue
```vue
  1: <script setup lang="ts">
  2: const productSteps = [
  3:   {
  4:     id: 1,
  5:     tabName: 'tab1',
  6:     tabTitle: 'News',
  7:     title: 'Stay Updated with Astronomy News',
  8:     info: '10+ News Sources',
  9:     body: 'We aggregate news from all major space agencies like NASA and ISRO, as well as private companies.',
 10:     points: [
 11:       'News from NASA, ISRO, and more',
 12:       'Daily updates',
 13:       'AI-powered article summaries',
 14:       'Comprehensive coverage of private companies',
 15:     ],
 16:     cta: 'Check it out',
 17:     available: true,
 18:   },
 19:   {
 20:     id: 2,
 21:     tabName: 'tab2',
 22:     tabTitle: 'Companies',
 23:     info: '20+ Companies Onboarded',
 24:     title: 'Explore Government and Private Sector Companies',
 25:     body: 'Our database will include all major government and private sector companies from around the world, our initial focus is Indian private companies.',
 26:     points: [
 27:       'Database of major government agencies',
 28:       'Insights into private companies',
 29:       'Follow companies of interest - coming soon',
 30:       'Linked social profiles - coming soon',
 31:     ],
 32:     cta: 'Check it out',
 33:     available: true,
 34:   },
 35:   {
 36:     id: 3,
 37:     tabName: 'tab3',
 38:     tabTitle: 'People',
 39:     info: '50+ People',
 40:     title: 'Connect with Astronomy Enthusiasts',
 41:     body: 'Join a global community of astronomy enthusiasts.',
 42:     points: [
 43:       'Connect with global enthusiasts',
 44:       'Share your passion for astronomy',
 45:       'Foster collaboration',
 46:       'Hire AstroGuides',
 47:     ],
 48:     cta: 'Check it out',
 49:     available: true,
 50:   },
 51:   {
 52:     id: 4,
 53:     tabName: 'tab4',
 54:     tabTitle: 'Launches',
 55:     info: 'Upcoming Launches',
 56:     title: 'Never Miss a Launch',
 57:     body: 'Stay informed about all upcoming launches from launch providers worldwide.',
 58:     points: [
 59:       'Database of upcoming launches',
 60:       'Global launch providers',
 61:       'Stay informed about space events',
 62:       'Never miss an important launch',
 63:     ],
 64:     cta: 'Coming Q2 2024',
 65:     available: false,
 66:   },
 67: ]
 68: 
 69: const dummyData = {
 70:   news: {
 71:     id: 1,
 72:     created_at: '2024-03-23 06:30:24.736222+00',
 73:     updated_at: '2024-03-23 06:30:24.736222+00',
 74:     title: 'Elastocaloric Refrigeration for Spaceflight Applications (ESRA)',
 75:     body: 'Jun Cui Iowa State University ESI23 Cui Quadchart.pdf Elastocaloric materials heat up when exposed to a mechanical force and cool down, removing the same amount of heat from their environment, when the force is removed. Professor Cui will use the recently established DFT\\/machine learning guided metals development methodology to unravel the complex relationships between compositions, crystal structures, phase transformation, and fatigue behavior of the elastocaloric materials. He will develop novel, new elastocaloric materials and use them as the basis of a high-performance refrigeration system for NASA exploration applications. Back to ESI 2023',
 76:     category_id: 16,
 77:     author: null,
 78:     description:
 79:       'Jun Cui Iowa State University ESI23 Cui Quadchart.pdf Elastocaloric materials heat up when exposed to a mechanical force and cool down, removing the same amount of heat from their environment, when the force is removed. Professor Cui will use the\u2026',
 80:     featured_image:
 81:       'https://www.nasa.gov/wp-content/themes/nasa/assets/images/default-thumbnail.jpg',
 82:     has_summary: false,
 83:     published_at: '2024-03-21 18:30:00+00',
 84:     source: 'nasa',
 85:     url: 'https://www.nasa.gov/directorates/stmd/space-tech-research-grants/esi/elastocaloric-refrigeration-for-spaceflight-applications-esra/',
 86:   },
 87: 
 88:   company: {
 89:     id: 1,
 90:     name: 'Agnikul Cosmos',
 91:     description:
 92:       'Agnikul Cosmos is a space tech company building small satellite launch vehicles. We are building a full stack launch vehicle to take small satellites to space.',
 93:     founding_year: 2017,
 94:     logo_url: 'agnikul-logo.jpg',
 95:     url: 'https://agnikul.in/#/',
 96:     is_government: false,
 97:     category_id: 1,
 98:     scrape_frequency: 'bi_weekly',
 99:     social_media: {
100:       linkedin_url: 'https://www.linkedin.com/company/agnikul-cosmos/',
101:       twitter_url: 'https://twitter.com/@agnikulcosmos',
102:       instagram_url: 'https://instagram.com/agnikul/',
103:       youtube_url: 'https://www.youtube.com/@agnikulcosmos1404',
104:     },
105:   },
106:   user: {
107:     id: 'e1bf12c6-aad4-4905-bda2-127c027504a3',
108:     email: 'shwetakk6@gmail.com',
109:     given_name: 'Shweta',
110:     surname: 'Kulkarni',
111:     username: 'Shweta',
112:     dob: '1995-11-16',
113:     gender_id: 2,
114:     created_at: '2023-08-11 16:49:09.163+00',
115:     updated_at: '2023-08-11 16:49:09.163+00',
116:     last_seen: '2023-08-11 16:49:09.163+00',
117:     avatar: 'shweta-kulkarni.jpg',
118:     introduction: null,
119:     quote: null,
120:     followed_count: 1,
121:     followers_count: 1,
122:     plan: 'free',
123:     role: 'admin',
124:   },
125: } as const
126: 
127: const getDummyData = (type: string) => {
128:   return dummyData[type as keyof typeof dummyData]
129: }
130: </script>
131: 
132: <template>
133:   <div>
134:     <IBTabView :tabs="productSteps">
135:       <template
136:         v-for="feat in productSteps"
137:         :key="feat.id"
138:         #[feat.tabName]
139:       >
140:         <div class="grid grid-cols-1 gap-8 md:grid-cols-2">
141:           <div class="background border-color space-y-4 rounded-md border p-4 lg:p-8">
142:             <h3 class="text-2xl">
143:               {{ feat.title }}
144:             </h3>
145:             <!-- <p> {{ feat.body }}</p> -->
146:             <ul class="list-inside list-disc">
147:               <li
148:                 v-for="point in feat.points"
149:                 :key="point"
150:               >
151:                 {{ point }}
152:               </li>
153:             </ul>
154:             <PrimeMessage severity="info">
155:               {{ feat.info }}
156:             </PrimeMessage>
157:           </div>
158:           <div class="space-y-4">
159:             <NewsCard
160:               v-if="feat.id === 1"
161:               :news="getDummyData('news')"
162:             />
163:             <CompanyCard
164:               v-else-if="feat.id === 2"
165:               :company="getDummyData('company')"
166:             />
167:             <UserCard
168:               v-else-if="feat.id === 3"
169:               :user="getDummyData('user')"
170:             />
171:             <div v-else>
172:               <PrimeMessage severity="info"> Coming Very Soon </PrimeMessage>
173:             </div>
174:             <PrimeButton class="flex w-full justify-center"> Join to see more </PrimeButton>
175:           </div>
176:         </div>
177:       </template>
178:     </IBTabView>
179:   </div>
180: </template>
181: 
182: <style scoped></style>
```

## File: apps/website/components/home/HomeHeading.vue
```vue
 1: <template>
 2:   <div class="flex flex-col justify-center items-center text-center lg:pl-8">
 3:     <p
 4:       class="mb-4 text-base font-bold uppercase tracking-tight text-primary-600"
 5:     >
 6:       {{ heading }}
 7:     </p>
 8:     <h2 class="text-3xl font-semibold leading-normal max-w-80">
 9:       {{ subheading }}
10:     </h2>
11:   </div>
12: </template>
13: 
14: <script setup lang="ts">
15: defineProps({
16:   heading: {
17:     type: String,
18:     required: true,
19:   },
20:   subheading: {
21:     type: String,
22:     required: true,
23:   },
24: })
25: </script>
26: 
27: <style scoped></style>
```

## File: apps/website/components/home/HomeHero.vue
```vue
 1: <template>
 2:   <div class="relative min-h-screen text-white w-full">
 3:     <IBImage
 4:       :img="{
 5:         src: bgImg,
 6:         quality: '80',
 7:         format: 'webp',
 8:       }"
 9:       class="absolute left-0 top-0 h-full w-full bg-center bg-no-repeat object-cover"
10:     />
11:     <div class="absolute left-0 top-0 z-10 h-full w-full bg-zinc-900" />
12:     <div
13:       class="relative mx-auto grid max-w-[1920px] gap-8 px-4 py-32 md:px-16 lg:grid-cols-[1.5fr_1.75fr] xl:gap-16 xl:px-32"
14:     >
15:       <!-- Hero Left -->
16:       <div
17:         class="relative z-50 flex h-full w-full flex-col items-center gap-8 text-center lg:items-start lg:text-left"
18:       >
19:         <div
20:           class="h-16 w-16 overflow-hidden rounded-full bg-white p-2 shadow-lg lg:h-24 lg:w-24 xl:p-4"
21:         >
22:           <IBImage
23:             :img="{
24:               src: '/astronera-logo.jpg',
25:             }"
26:           />
27:         </div>
28:         <h1 class="max-w-lg text-4xl font-bold leading-tight lg:text-5xl">
29:           Explore The Universe And Grow With Us
30:         </h1>
31:         <p class="max-w-sm text-xl font-semibold">
32:           AstroTribe is a community of astronomers and enthusiasts unveiling the mysteries of the
33:           cosmos together.
34:         </p>
35:         <div>
36:           <NuxtLink :to="`${$config.public.aeAuthUrl}/register`">
37:             <PrimeButton> Signup, it's FREE! </PrimeButton>
38:           </NuxtLink>
39:         </div>
40:       </div>
41:       <div class="relative z-50 mx-auto flex h-full w-full items-center justify-center">
42:         <AppVideoModal :video="video" />
43:       </div>
44:     </div>
45:   </div>
46: </template>
47: 
48: <script setup lang="ts">
49: const video = {
50:   url: 'https://www.youtube.com/embed/x5ijmeCJ42s?si=V_t46bCe9ClaKmrN?mute=0&autoplay=1',
51:   thumbnail: 'images/hero-image.jpg',
52:   alt: 'Astron Era Hero Video',
53: }
54: 
55: const bgImg = '/hero-image.jpg'
56: </script>
```

## File: apps/website/components/home/HomeProductStep.vue
```vue
 1: <template>
 2:   <div
 3:     :class="
 4:       imageRight
 5:         ? 'mx-auto flex w-full flex-col items-center justify-between gap-10 md:flex-row-reverse'
 6:         : 'mx-auto flex w-full flex-col items-center justify-between gap-10 md:flex-row'
 7:     "
 8:   >
 9:     <div class="relative aspect-auto h-[360px] shadow-2xl md:w-[70%]">
10:       <IBImage
11:         :img="{
12:           src: imgSrc,
13:           alt: `${title} AstroTribe feature`,
14:           format: 'webp',
15:         }"
16:         class="h-full w-full overflow-hidden rounded-lg object-cover object-left"
17:       />
18:       <div
19:         class="absolute left-0 top-0 h-full w-full rounded-lg bg-zinc-900/10 block"
20:       />
21:     </div>
22:     <div class="px-4 md:w-[50%]">
23:       <h4 class="mb-4 text-xl font-bold">
24:         {{ title }}
25:       </h4>
26:       <p class="pb-2 text-sm">
27:         {{ body }}
28:       </p>
29:       <a class="text-success-600 text-sm font-semibold">{{ cta }}</a>
30:     </div>
31:   </div>
32: </template>
33: 
34: <script setup lang="ts">
35: defineProps({
36:   title: {
37:     type: String as PropType<string>,
38:     required: true,
39:   },
40:   body: {
41:     type: String as PropType<string>,
42:     required: true,
43:   },
44:   cta: {
45:     type: String as PropType<string>,
46:     required: true,
47:   },
48:   imageRight: {
49:     type: Boolean as PropType<boolean>,
50:     required: true,
51:   },
52:   imgSrc: {
53:     type: String as PropType<string>,
54:     required: true,
55:   },
56: })
57: </script>
58: 
59: <style scoped></style>
```

## File: apps/website/components/home/HomeTestimonial.vue
```vue
 1: <template>
 2:   <div>
 3:     <HomeHeading
 4:       heading="Hear From The Community"
 5:       subheading="Discover How We're Making a Difference"
 6:       class="pb-16 md:pb-24"
 7:     />
 8:     <AppSwiper
 9:       :items="testimonials"
10:       type="testimonial"
11:     >
12:       <template #default="{ item }: { item: Testimonial }">
13:         <div class="background h-full rounded-md border border-color p-6">
14:           <div class="flex h-auto items-center">
15:             <IBImage
16:               :img="{
17:                 src: item.image,
18:                 alt: item.name,
19:                 width: '60px',
20:                 height: '60px',
21:                 loading: 'lazy',
22:                 quality: '80',
23:                 format: 'webp',
24:               }"
25:               class="h-14 w-14 rounded-full"
26:             />
27:             <div class="flex flex-col items-start pl-4">
28:               <h3 class="text-xl font-semibold">
29:                 {{ item.name }}
30:               </h3>
31:               <p class="text-sm">
32:                 {{ item.company }}
33:               </p>
34:             </div>
35:           </div>
36:           <div class="pt-8">
37:             <p class="relative m-2 h-auto rounded-sm bg-primary-950 p-3 text-sm italic">
38:               <Icon
39:                 name="mdi:format-quote-open"
40:                 class="absolute -top-4 left-4 text-white"
41:                 size="28px"
42:               />
43:               {{ item.quote }}
44:               <Icon
45:                 name="mdi:format-quote-close"
46:                 class="absolute -bottom-4 right-4 text-white"
47:                 size="28px"
48:               />
49:             </p>
50:           </div>
51:         </div>
52:       </template>
53:     </AppSwiper>
54:   </div>
55: </template>
56: 
57: <script setup lang="ts">
58: import testimonials from '@/data/home/testimonials.json'
59: 
60: interface Testimonial {
61:   image: string
62:   name: string
63:   company: string
64:   quote: string
65: }
66: 
67: // !TODO: - allow users to add testimonials, fetch from supabase
68: </script>
69: 
70: <style></style>
```

## File: apps/website/components/home/HomeTrusted.vue
```vue
 1: <script setup lang="ts">
 2: const trustedImages = [
 3:   'images/trusted/dst.png',
 4:   'images/trusted/iau-oad.png',
 5:   'images/trusted/in-fed.png',
 6:   'images/trusted/iimb-nsrcel.png',
 7: ]
 8: </script>
 9: 
10: <template>
11:   <div class="flex flex-col gap-8 rounded-b-xl p-12 px-6 bg-zinc-200">
12:     <h4 class="text-lg block gap-4 text-center font-bold uppercase text-black"> Our Partners </h4>
13:     <div class="grid w-full grid-cols-2 justify-between gap-4 md:grid-cols-4">
14:       <IBImage
15:         v-for="(image, index) in trustedImages"
16:         :key="index"
17:         :img="{ src: image }"
18:         class="mx-auto h-16 lg:h-20"
19:       />
20:     </div>
21:   </div>
22: </template>
```

## File: apps/website/components/landing/LandingCTA.vue
```vue
 1: <script setup lang="ts">
 2: import { onMounted } from 'vue'
 3: import { useAnimation } from '~/composables/useAnimation'
 4: import { useRuntimeConfig } from '#app'
 5: 
 6: const { fadeInLeft, fadeInRight } = useAnimation()
 7: 
 8: defineProps<{
 9:   title: string
10:   subtitle: string
11:   buttonText: string
12: }>()
13: 
14: const config = useRuntimeConfig()
15: const authLink = config.public.aeAuthLink
16: 
17: onMounted(() => {
18:   fadeInLeft('.cta-content')
19:   fadeInRight('.cta-image')
20: })
21: </script>
22: 
23: <template>
24:   <section class="cta-section relative py-32">
25:     <div
26:     class="absolute inset-0 -z-10 h-full w-full bg-gradient-to-b from-transparent from-10% via-primary-950 via-50% to-transparent to-90%"
27:     ></div>
28: 
29:     <div class="flex flex-col md:flex-row items-center justify-between">
30:       <div class="cta-content text-white md:w-1/2 mb-8 md:mb-0">
31:         <h2 class="text-2xl md:text-3xl font-bold mb-4 font-space">
32:           {{ title }}
33:         </h2>
34:         <p class="text-xl mb-8">{{ subtitle }}</p>
35:         <NuxtLink
36:           :to="authLink"
37:           class="inline-block"
38:         >
39:           <PrimeButton
40:             :label="buttonText"
41:             severity="secondary"
42:             size="large"
43:           />
44:         </NuxtLink>
45:       </div>
46:       <div class="md:w-1/2 cta-image">
47:         <NuxtImg
48:           src="https://picsum.photos/800/600"
49:           alt="CTA Image"
50:           class="rounded-lg w-full h-auto shadow-2xl shadow-black"
51:         />
52:       </div>
53:     </div>
54:   </section>
55: </template>
56: 
57: <style scoped>
58: .bg-gradient-to-b {
59:   background-image: linear-gradient(
60:     to bottom,
61:     rgba(1, 34, 63, 0) 0%,
62:     rgba(1, 34, 63, 1) 50%,
63:     rgba(1, 34, 63, 0) 100%
64:   );
65: }
66: </style>
```

## File: apps/website/components/landing/LandingCTASocial.vue
```vue
  1: <script setup lang="ts">
  2: import { onMounted } from 'vue'
  3: import { useAnimation } from '~/composables/useAnimation'
  4: 
  5: const { fadeInUp, scaleIn } = useAnimation()
  6: 
  7: const socialMedia = [
  8:   {
  9:     name: 'LINKEDIN',
 10:     icon: 'mdi:linkedin',
 11:     gradient: 'from-blue-500 to-sky-600',
 12:     hoverGradient: 'hover:from-blue-400 hover:to-sky-500',
 13:   },
 14:   {
 15:     name: 'TWITTER',
 16:     icon: 'mdi:twitter',
 17:     gradient: 'from-sky-500 to-blue-600',
 18:     hoverGradient: 'hover:from-sky-400 hover:to-blue-500',
 19:   },
 20:   {
 21:     name: 'YOUTUBE',
 22:     icon: 'mdi:youtube',
 23:     gradient: 'from-red-500 to-rose-600',
 24:     hoverGradient: 'hover:from-red-400 hover:to-rose-500',
 25:   },
 26:   {
 27:     name: 'INSTAGRAM',
 28:     icon: 'mdi:instagram',
 29:     gradient: 'from-purple-500 to-pink-600',
 30:     hoverGradient: 'hover:from-purple-400 hover:to-pink-500',
 31:   },
 32: ]
 33: 
 34: onMounted(() => {
 35:   fadeInUp('.social-media-cta')
 36:   scaleIn('.social-button')
 37: })
 38: </script>
 39: 
 40: <template>
 41:   <section>
 42:     <LandingGlass
 43:       hover-effect="glow"
 44:       glow-color="purple"
 45:       gradient="mixed"
 46:       intensity="low"
 47:       interactive
 48:       isolate-content
 49:     >
 50:       <div class="social-media-cta space-y-12">
 51:         <!-- Social Media Section -->
 52:         <div class="text-center">
 53:           <h2 class="text-3xl md:text-4xl font-bold text-white mb-4 font-space">
 54:             Let's stay in touch
 55:           </h2>
 56:           <p class="text-gray-300 mb-8 max-w-2xl mx-auto">
 57:             Join our growing community and stay updated with the latest space news and platform
 58:             updates
 59:           </p>
 60: 
 61:           <!-- Social Buttons -->
 62:           <div class="flex flex-wrap justify-center gap-4">
 63:             <NuxtLink
 64:               v-for="platform in socialMedia"
 65:               :key="platform.name"
 66:               href="#"
 67:               class="social-button group"
 68:             >
 69:               <div class="relative">
 70:                 <!-- Button -->
 71:                 <PrimeButton
 72:                   class="relative z-10 border-none min-w-[160px] bg-gradient-to-r transition-all duration-300"
 73:                   :class="[platform.gradient, platform.hoverGradient]"
 74:                   size="large"
 75:                 >
 76:                   <template #icon>
 77:                     <Icon
 78:                       :name="platform.icon"
 79:                       size="24"
 80:                     />
 81:                   </template>
 82:                   {{ platform.name }}
 83:                 </PrimeButton>
 84: 
 85:                 <!-- Glow Effect -->
 86:                 <div
 87:                   class="absolute inset-0 opacity-0 group-hover:opacity-100 blur-xl transition-opacity duration-300 bg-gradient-to-r"
 88:                   :class="platform.gradient"
 89:                 />
 90:               </div>
 91:             </NuxtLink>
 92:           </div>
 93:         </div>
 94: 
 95:         <!-- Newsletter Section -->
 96:         <div class="max-w-2xl mx-auto w-full space-y-6">
 97:           <h3 class="text-xl text-center text-white">Subscribe to Our Newsletter</h3>
 98: 
 99:           <div class="relative">
100:             <!-- Input Group -->
101:             <div class="flex gap-4">
102:               <PrimeInputText
103:                 class="flex-1 bg-primary-900/50 border-primary-800/50 focus:border-sky-500/50 rounded-lg"
104:                 placeholder="Enter your email"
105:               />
106:               <PrimeButton
107:                 label="Subscribe"
108:                 class="bg-gradient-to-r from-sky-500 to-blue-600 hover:from-sky-400 hover:to-blue-500 transition-all duration-300"
109:               />
110:             </div>
111: 
112:             <!-- Privacy Note -->
113:             <p class="text-xs text-gray-400 mt-2 text-center">
114:               By subscribing, you agree to receive space-related updates. Unsubscribe at any time.
115:             </p>
116:           </div>
117:         </div>
118:       </div>
119:     </LandingGlass>
120:   </section>
121: </template>
122: 
123: <style scoped>
124: :deep(.p-inputtext) {
125:   background: rgba(15, 23, 42, 0.5);
126:   border-color: rgba(30, 41, 59, 0.5);
127:   color: white;
128: }
129: 
130: :deep(.p-inputtext:focus) {
131:   border-color: rgba(14, 165, 233, 0.5);
132:   box-shadow: none;
133: }
134: 
135: :deep(.p-inputtext::placeholder) {
136:   color: rgba(148, 163, 184, 0.7);
137: }
138: </style>
```

## File: apps/website/components/landing/LandingFeatures.vue
```vue
  1: <script setup lang="ts">
  2: import { ref, onMounted } from 'vue'
  3: import EmblaCarousel, { type EmblaCarouselType, type EmblaOptionsType } from 'embla-carousel'
  4: import AutoScroll from 'embla-carousel-auto-scroll'
  5: import { gsap } from 'gsap'
  6: import { useId } from '#app'
  7: 
  8: const emblaRef = ref<HTMLElement | null>(null)
  9: let emblaApi: EmblaCarouselType | undefined
 10: 
 11: // News sources/partners
 12: const partners = [
 13:   { name: 'Aadyah Aerospace', id: useId(), type: 'Private Space' },
 14:   { name: 'Aeroin Space', id: useId(), type: 'Private Space' },
 15:   { name: 'Agnikul', id: useId(), type: 'Private Space' },
 16:   { name: 'Astrogate Labs', id: useId(), type: 'Private Space' },
 17:   { name: 'Bellatrix Aerospace', id: useId(), type: 'Private Space' },
 18:   { name: 'CNSA', id: useId(), type: 'Space Agency' },
 19:   { name: 'CSA', id: useId(), type: 'Space Agency' },
 20:   { name: 'Dhruva Space', id: useId(), type: 'Private Space' },
 21:   { name: 'ESA', id: useId(), type: 'Space Agency' },
 22:   { name: 'ISRO', id: useId(), type: 'Space Agency' },
 23:   { name: 'JAXA', id: useId(), type: 'Space Agency' },
 24:   { name: 'NASA', id: useId(), type: 'Space Agency' },
 25:   { name: 'Pixxel', id: useId(), type: 'Private Space' },
 26:   { name: 'Roscosmos', id: useId(), type: 'Space Agency' },
 27:   { name: 'Skyroot Aerospace', id: useId(), type: 'Private Space' },
 28: ]
 29: 
 30: // Core features with more detailed information
 31: const features = [
 32:   {
 33:     id: useId(),
 34:     title: 'Personalized News Feed',
 35:     subtitle: 'Curated space news tailored to your interests',
 36:     description:
 37:       'Our AI-driven algorithm learns from your reading preferences to deliver the most relevant space and astronomy news directly to your feed.',
 38:     icon: 'mdi:newspaper-variant',
 39:     metrics: ['500+ daily updates', 'AI-powered curation', '15+ categories'],
 40:   },
 41:   {
 42:     id: useId(),
 43:     title: 'Chrome New Tab Extension',
 44:     subtitle: 'Never miss space updates',
 45:     description:
 46:       'Get the latest space news and updates every time you open a new tab in your browser. Stay informed and inspired with every click.',
 47:     icon: 'mdi:google-chrome',
 48:     metrics: ['Quick access', 'Creates a habit', 'One-click'],
 49:   },
 50:   {
 51:     id: useId(),
 52:     title: 'Research Hub',
 53:     subtitle: 'Latest astronomical research and discoveries',
 54:     description:
 55:       'Access peer-reviewed papers, research summaries, and breakthrough discoveries in astronomy and space technology.',
 56:     icon: 'mdi:telescope',
 57:     metrics: ['200+ journals', 'Expert analysis', 'Research briefs', 'Comming Soon'],
 58:   },
 59:   {
 60:     id: useId(),
 61:     title: 'Community Insights',
 62:     subtitle: 'Connect with space enthusiasts',
 63:     description:
 64:       'Engage with a global community of space enthusiasts, researchers, and industry professionals. Share insights and discuss the latest developments.',
 65:     icon: 'mdi:account-group',
 66:     metrics: ['Global community', 'Expert discussions', 'Live events'],
 67:   },
 68: ]
 69: 
 70: // Stats to showcase platform reach
 71: const stats = [
 72:   { id: useId(), value: 1, suffix: 'K+', label: 'Daily Readers' },
 73:   { id: useId(), value: 100, suffix: '+', label: 'News Sources' },
 74:   { id: useId(), value: 50, suffix: '+', label: 'Space Agencies & Companies' },
 75:   { id: useId(), value: 24, suffix: '/7', label: 'Coverage' },
 76: ]
 77: 
 78: onMounted(() => {
 79:   // Initialize partner carousel
 80:   if (emblaRef.value) {
 81:     const OPTIONS: EmblaOptionsType = { loop: true }
 82: 
 83:     emblaApi = EmblaCarousel(emblaRef.value, OPTIONS, [
 84:       AutoScroll({
 85:         playOnInit: true,
 86:         speed: 0.7,
 87:         direction: 'forward',
 88:       }),
 89:     ])
 90:   }
 91: 
 92:   // Animate stats - trigger earlier
 93:   gsap.from('.stat-value', {
 94:     textContent: 0,
 95:     duration: 2,
 96:     ease: 'power1.out',
 97:     snap: { textContent: 1 },
 98:     stagger: 0.2,
 99:     scrollTrigger: {
100:       trigger: '.stats-grid',
101:       start: 'top bottom', // Changed from bottom-=100px
102:       toggleActions: 'play none none reverse',
103:     },
104:   })
105: 
106:   // Animate features - trigger earlier and add markers for debugging
107:   gsap.from('.feature-card', {
108:     y: 40,
109:     opacity: 0,
110:     duration: 0.8,
111:     stagger: 0.2,
112:     ease: 'power2.out',
113:     scrollTrigger: {
114:       trigger: '.features-grid',
115:       start: 'top bottom', // Changed from bottom-=100px
116:       toggleActions: 'play none none reverse',
117:     },
118:   })
119: })
120: 
121: onUnmounted(() => {
122:   if (emblaApi?.destroy) {
123:     emblaApi.destroy()
124:   }
125: })
126: </script>
127: 
128: <template>
129:   <section>
130:     <!-- Stats Section -->
131:     <LandingGlass
132:       gradient="blue"
133:       intensity="low"
134:       class="mb-24"
135:       isolate-content
136:     >
137:       <div class="stats-grid grid grid-cols-2 md:grid-cols-4 gap-8">
138:         <div
139:           v-for="stat in stats"
140:           :key="stat.id"
141:           class="text-center flex flex-col"
142:         >
143:           <span class="flex items-center justify-center">
144:             <h3
145:               class="stat-value text-4xl md:text-5xl font-bold text-primary-400 mb-2"
146:               :data-stat-id="stat.id"
147:             >
148:               {{ stat.value }}
149:             </h3>
150:             <p class="text-2xl font-bold pl-1">{{ stat.suffix }}</p>
151:           </span>
152:           <p class="text-gray-400 text-sm md:text-base">{{ stat.label }}</p>
153:         </div>
154:       </div>
155: 
156:       <!-- Partners Carousel -->
157:       <div class="py-8 space-y-8">
158:         <LandingTitle
159:           title="Trusted Sources & Partners"
160:           subtitle="Connecting you with the leaders in space exploration"
161:           class="!pb-12"
162:         />
163: 
164:         <div class="relative border-x border-primary-900/30 rounded-lg py-8">
165:           <div
166:             ref="emblaRef"
167:             class="embla overflow-hidden"
168:           >
169:             <div class="embla__container flex">
170:               <div
171:                 v-for="partner in partners"
172:                 :key="partner.id"
173:                 class="embla__slide flex-shrink-0 mx-6"
174:               >
175:                 <div class="flex flex-col items-center space-y-3 group/partner">
176:                   <div
177:                     class="w-24 h-24 bg-primary-900/50 rounded-xl p-4 flex items-center justify-center transition-transform duration-300 group-hover/partner:scale-110"
178:                   >
179:                     <NuxtImg
180:                       :src="`/images/logos/${partner.name.toLowerCase().replace(' ', '-')}-logo.jpg`"
181:                       :alt="partner.name"
182:                       class="w-full h-full object-contain opacity-70 group-hover/partner:opacity-100"
183:                       width="96"
184:                       height="96"
185:                     />
186:                   </div>
187:                   <span class="text-sm font-medium text-gray-400">{{ partner.name }}</span>
188:                   <span class="text-xs text-gray-500">{{ partner.type }}</span>
189:                 </div>
190:               </div>
191:             </div>
192:           </div>
193:           <div
194:             class="absolute top-0 left-0 h-full w-32 bg-gradient-to-r from-primary-950 to-transparent"
195:           ></div>
196:           <div
197:             class="absolute top-0 right-0 h-full w-32 bg-gradient-to-l from-primary-950 to-transparent"
198:           ></div>
199:         </div>
200:       </div>
201: 
202:       <div class="py-8 space-y-8">
203:         <LandingTitle
204:           title="Comprehensive Space Coverage"
205:           subtitle="Get all your space news, research, and mission updates in one place with our powerful platform"
206:           class="!pb-12"
207:         />
208:         <div class="features-grid grid grid-cols-1 md:grid-cols-2 gap-8">
209:           <div
210:             v-for="feature in features"
211:             :key="feature.id"
212:           >
213:             <PrimeCard
214:               class="h-full bg-primary-900/30 border border-primary-900/50 hover:border-primary-900/50 transition-colors duration-300"
215:             >
216:               <template #title>
217:                 <div class="flex items-start space-x-4">
218:                   <div
219:                     class="p-3 flex rounded-xl bg-primary-500/10 group-hover:bg-primary-500/20 transition-colors duration-300"
220:                   >
221:                     <Icon
222:                       :name="feature.icon"
223:                       class="text-primary-400"
224:                       size="32"
225:                     />
226:                   </div>
227:                   <div>
228:                     <h3 class="text-xl font-bold text-white mb-1">{{ feature.title }}</h3>
229:                     <p class="text-gray-400 text-base">{{ feature.subtitle }}</p>
230:                   </div>
231:                 </div>
232:               </template>
233: 
234:               <template #content>
235:                 <p class="text-gray-300 mb-6">{{ feature.description }}</p>
236:                 <div class="flex flex-wrap gap-3">
237:                   <span
238:                     v-for="(metric, index) in feature.metrics"
239:                     :key="index"
240:                     class="px-3 py-1 rounded-full text-sm bg-primary-900/50 text-gray-400 border border-primary-900"
241:                   >
242:                     {{ metric }}
243:                   </span>
244:                 </div>
245:               </template>
246:             </PrimeCard>
247:           </div>
248:         </div>
249:       </div>
250:     </LandingGlass>
251:   </section>
252: </template>
253: 
254: <style scoped>
255: .embla {
256:   overflow: hidden;
257:   position: relative;
258:   z-index: 1;
259: }
260: 
261: .embla__container {
262:   display: flex;
263:   will-change: transform;
264: }
265: 
266: .embla__slide {
267:   flex: 0 0 auto;
268:   min-width: 0;
269:   max-width: 200px;
270:   position: relative;
271: }
272: </style>
```

## File: apps/website/components/landing/LandingFuture.vue
```vue
  1: <script setup lang="ts">
  2: import { ref, onMounted } from 'vue'
  3: import gsap from 'gsap'
  4: import { useAnimation } from '~/composables/useAnimation'
  5: 
  6: const { pulseAnimation } = useAnimation()
  7: 
  8: const features = [
  9:   {
 10:     icon: 'mdi:robot',
 11:     title: 'AI News Summaries',
 12:     description: 'Get concise, AI-generated summaries of the latest space news.',
 13:     color: 'from-blue-500/20 to-purple-600/20',
 14:     gradient: 'bg-gradient-to-br from-blue-500 to-purple-600',
 15:     comingSoon: 'Q4 2024',
 16:   },
 17:   {
 18:     icon: 'mdi:file-document-outline',
 19:     title: 'Latest Research',
 20:     description: 'Stay updated with simplified summaries of recent arXiv papers.',
 21:     color: 'from-green-500/20 to-teal-600/20',
 22:     gradient: 'bg-gradient-to-br from-green-500 to-teal-600',
 23:     comingSoon: 'Q4 2024',
 24:   },
 25:   {
 26:     icon: 'mdi:rocket-launch',
 27:     title: 'Company Updates',
 28:     description: 'Follow the latest news and updates from your favorite space companies.',
 29:     color: 'from-red-500/20 to-orange-600/20',
 30:     gradient: 'bg-gradient-to-br from-red-500 to-orange-600',
 31:     comingSoon: 'Q1 2025',
 32:   },
 33:   {
 34:     icon: 'mdi:account-group',
 35:     title: 'Networking',
 36:     description: 'Connect with other space enthusiasts and professionals in the community.',
 37:     color: 'from-yellow-500/20 to-amber-600/20',
 38:     gradient: 'bg-gradient-to-br from-yellow-500 to-amber-600',
 39:     comingSoon: 'Q2 2025',
 40:   },
 41: ]
 42: 
 43: const featureItems = ref([])
 44: const ctaButton = ref(null)
 45: 
 46: onMounted(() => {
 47:   // Fade in feature items
 48:   gsap.fromTo(
 49:     featureItems.value,
 50:     { y: 50, opacity: 0 },
 51:     {
 52:       y: 0,
 53:       opacity: 1,
 54:       duration: 0.8,
 55:       stagger: 0.2,
 56:       scrollTrigger: {
 57:         trigger: '.features-grid',
 58:         start: 'top bottom',
 59:         toggleActions: 'play none none reverse',
 60:       },
 61:     },
 62:   )
 63: 
 64:   // Pulse animation for CTA button
 65:   if (ctaButton.value) {
 66:     pulseAnimation(ctaButton.value)
 67:   }
 68: })
 69: </script>
 70: 
 71: <template>
 72:   <section>
 73:     <LandingGlass
 74:       gradient="mixed"
 75:       intensity="low"
 76:       interactive
 77:       isolate-content
 78:     >
 79:       <LandingTitle
 80:         title="Into the Future"
 81:         subtitle="Elevate Your Space Exploration Experience"
 82:         gradient="mixed"
 83:         intensity="low"
 84:         class="!pb-16"
 85:       />
 86:       <div class="features-grid grid grid-cols-1 md:grid-cols-2 gap-8 mb-16">
 87:         <div
 88:           v-for="(feature, index) in features"
 89:           :key="index"
 90:           ref="featureItems"
 91:           class="group/feature relative"
 92:         >
 93:           <!-- Feature Card -->
 94:           <div
 95:             class="relative h-full rounded-xl bg-primary-900/30 backdrop-blur-sm p-8 border border-primary-800/30 transition-all duration-500 hover:border-sky-500/30"
 96:           >
 97:             <!-- Hover Gradient -->
 98:             <div
 99:               class="absolute inset-0 bg-gradient-to-br opacity-0 group-hover/feature:opacity-100 transition-opacity duration-500 rounded-xl"
100:               :class="feature.color"
101:             ></div>
102: 
103:             <!-- Content -->
104:             <div class="relative z-10 flex flex-col h-full">
105:               <!-- Icon -->
106:               <div
107:                 class="w-16 h-16 rounded-xl flex items-center justify-center mb-6"
108:                 :class="feature.gradient"
109:               >
110:                 <Icon
111:                   :name="feature.icon"
112:                   size="32"
113:                   class="text-white"
114:                 />
115:               </div>
116: 
117:               <!-- Text Content -->
118:               <h3 class="text-xl font-bold text-white mb-3">{{ feature.title }}</h3>
119:               <p class="text-gray-300 mb-6">{{ feature.description }}</p>
120: 
121:               <!-- Coming Soon Badge -->
122:               <div class="mt-auto flex items-center gap-2">
123:                 <span class="text-sky-400 text-sm">Coming</span>
124:                 <span
125:                   class="px-2 py-1 rounded-full text-xs bg-sky-500/10 border border-sky-500/20 text-sky-400"
126:                 >
127:                   {{ feature.comingSoon }}
128:                 </span>
129:               </div>
130:             </div>
131:           </div>
132: 
133:           <!-- Card Glow -->
134:           <div
135:             class="absolute inset-0 bg-sky-500/5 group-hover/feature:bg-sky-500/10 blur-xl transition-all duration-500 -z-10 rounded-xl"
136:           />
137:         </div>
138:       </div>
139: 
140:       <!-- CTA Section -->
141:       <div class="text-center space-y-6">
142:         <p class="text-xl text-gray-300">Want Early Access?</p>
143:         <div class="flex justify-center gap-4">
144:           <PrimeButton
145:             ref="ctaButton"
146:             label="Join the Waitlist"
147:             size="large"
148:             class="min-w-[200px] bg-gradient-to-r from-sky-500 to-blue-600 hover:from-sky-400 hover:to-blue-500 transition-all duration-300"
149:           />
150:           <PrimeButton
151:             label="Learn More"
152:             size="large"
153:             outlined
154:             severity="secondary"
155:             class="min-w-[200px] border-sky-500/30 hover:border-sky-500/50 text-sky-400 transition-all duration-300"
156:           />
157:         </div>
158:         <p class="text-sm text-gray-400 max-w-md mx-auto">
159:           Join our beta program and help shape the future of space exploration technology
160:         </p>
161:       </div>
162:     </LandingGlass>
163:   </section>
164: </template>
```

## File: apps/website/components/landing/LandingGlass.vue
```vue
  1: <script setup lang="ts">
  2: interface Props {
  3:   padded?: boolean
  4:   gradient?: keyof typeof gradientConfigs
  5:   intensity?: keyof typeof intensityConfigs
  6:   interactive?: boolean
  7:   glowColor?: string
  8:   borderColor?: string
  9:   hoverEffect?: keyof typeof hoverEffects
 10:   isolateContent?: boolean
 11:   rounded?: boolean
 12:   overflow?: boolean
 13: }
 14: 
 15: // Move configurations outside component for better reuse and performance
 16: const gradientConfigs = {
 17:   blue: ['bg-sky-500', 'bg-blue-500', 'bg-sky-400'],
 18:   purple: ['bg-purple-500', 'bg-indigo-500', 'bg-violet-500'],
 19:   mixed: ['bg-sky-500', 'bg-purple-500', 'bg-blue-500'],
 20:   green: ['bg-emerald-500', 'bg-green-500', 'bg-teal-500'],
 21:   orange: ['bg-orange-500', 'bg-amber-500', 'bg-yellow-500'],
 22: } as const
 23: 
 24: const intensityConfigs = {
 25:   low: {
 26:     backdrop: 'backdrop-blur-lg',
 27:     bgOpacity: 'bg-primary-950/30',
 28:     blobOpacity: 'opacity-5',
 29:     hoverBgOpacity: 'hover:bg-primary-950/40',
 30:   },
 31:   medium: {
 32:     backdrop: 'backdrop-blur-xl',
 33:     bgOpacity: 'bg-primary-950/50',
 34:     blobOpacity: 'opacity-10',
 35:     hoverBgOpacity: 'hover:bg-primary-950/60',
 36:   },
 37:   high: {
 38:     backdrop: 'backdrop-blur-2xl',
 39:     bgOpacity: 'bg-primary-950/70',
 40:     blobOpacity: 'opacity-15',
 41:     hoverBgOpacity: 'hover:bg-primary-950/80',
 42:   },
 43: } as const
 44: 
 45: const hoverEffects = {
 46:   glow: (color: string) => `hover:shadow-[0_0_30px_rgba(var(--color-${color}-500),0.3)]`,
 47:   scale: 'hover:scale-[1.02]',
 48:   blur: 'hover:backdrop-blur-2xl',
 49:   none: '',
 50: } as const
 51: 
 52: // Default props with better typing
 53: const props = withDefaults(defineProps<Props>(), {
 54:   padded: true,
 55:   gradient: 'blue',
 56:   intensity: 'medium',
 57:   interactive: false,
 58:   glowColor: 'sky',
 59:   borderColor: 'sky',
 60:   hoverEffect: 'none',
 61:   isolateContent: true,
 62:   rounded: true,
 63:   overflow: false,
 64: })
 65: 
 66: // Memoize complex computations
 67: const gradientConfig = computed(() => gradientConfigs[props.gradient])
 68: const intensityConfig = computed(() => intensityConfigs[props.intensity])
 69: 
 70: const baseClasses = computed(() => [
 71:   'relative group w-full',
 72:   intensityConfig.value.backdrop,
 73:   intensityConfig.value.bgOpacity,
 74:   'transition-all duration-500',
 75:   props.rounded ? 'rounded-2xl' : 'rounded-none',
 76:   props.overflow ? '' : 'overflow-hidden',
 77: ])
 78: 
 79: const hoverClasses = computed(() => {
 80:   if (!props.interactive) return ''
 81: 
 82:   const effect =
 83:     typeof hoverEffects[props.hoverEffect] === 'function'
 84:       ? hoverEffects[props.hoverEffect](props.glowColor)
 85:       : hoverEffects[props.hoverEffect]
 86: 
 87:   return `transition-all duration-500 ${effect} ${intensityConfig.value.hoverBgOpacity}`
 88: })
 89: 
 90: const borderClasses = computed(() => ({
 91:   ['border-' + props.borderColor + '-500/' + (props.intensity === 'low' ? '20' : '30')]: true,
 92:   'rounded-2xl': props.rounded,
 93:   [`group-hover:border-${props.borderColor}-500/50`]: props.interactive,
 94: }))
 95: 
 96: const contentClasses = computed(() => ({
 97:   'p-12': props.padded,
 98:   'isolation-auto': props.isolateContent,
 99: }))
100: </script>
101: 
102: <template>
103:   <div :class="[baseClasses, hoverClasses]">
104:     <div
105:       class="absolute inset-0 transition-opacity duration-500"
106:       :class="[intensityConfig.blobOpacity, { 'group-hover:opacity-[0.15]': interactive }]"
107:     >
108:       <template
109:         v-for="(gradient, index) in gradientConfig"
110:         :key="index"
111:       >
112:         <div
113:           :class="[
114:             'absolute rounded-full mix-blend-multiply filter blur-3xl',
115:             gradient,
116:             {
117:               'top-0 -left-40 w-96 h-96': index === 0,
118:               'top-0 -right-40 w-96 h-96 animation-delay-2000': index === 1,
119:               '-bottom-32 left-20 w-96 h-96 animation-delay-4000': index === 2,
120:             },
121:           ]"
122:         />
123:       </template>
124:     </div>
125: 
126:     <!-- Noise texture -->
127:     <div
128:       class="absolute inset-0 bg-noise pointer-events-none transition-opacity duration-500"
129:       :class="{
130:         'opacity-[0.02] group-hover:opacity-[0.03]': interactive,
131:         'opacity-[0.02]': !interactive,
132:       }"
133:     />
134: 
135:     <!-- Electric edges -->
136:     <div class="absolute inset-1">
137:       <div
138:         class="absolute inset-0 border transition-colors duration-500"
139:         :class="borderClasses"
140:       />
141:       <div
142:         class="absolute inset-0"
143:         :class="{ 'rounded-2xl': rounded }"
144:         :style="{
145:           '--glow-color': `var(--color-${glowColor}-500)`,
146:         }"
147:       />
148:     </div>
149: 
150:     <!-- Content -->
151:     <slot name="header" />
152:     <div
153:       class="relative z-10"
154:       :class="contentClasses"
155:     >
156:       <slot />
157:     </div>
158:   </div>
159: </template>
160: 
161: <style scoped>
162: 
163: .bg-noise {
164:   background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
165: }
166: </style>
```

## File: apps/website/components/landing/LandingHero.vue
```vue
  1: <script setup lang="ts">
  2: import { ref, onMounted, onUnmounted } from 'vue'
  3: import { gsap } from 'gsap'
  4: 
  5: const highlightedWords = ['Discover', 'Innovate', 'Explore']
  6: const currentWord = ref(highlightedWords[0])
  7: const isTransitioning = ref(false)
  8: const scrollY = ref(0)
  9: const videoLoaded = ref(false)
 10: const videoElement = ref<HTMLVideoElement | null>(null)
 11: 
 12: const rotateWords = () => {
 13:   if (isTransitioning.value) return
 14: 
 15:   isTransitioning.value = true
 16:   const currentIndex = highlightedWords.indexOf(currentWord.value)
 17:   const nextIndex = (currentIndex + 1) % highlightedWords.length
 18: 
 19:   gsap.to('.highlight-word', {
 20:     y: 50,
 21:     opacity: 0,
 22:     duration: 0.5,
 23:     onComplete: () => {
 24:       currentWord.value = highlightedWords[nextIndex]
 25:       gsap.fromTo('.highlight-word', { y: -50, opacity: 0 }, { y: 0, opacity: 1, duration: 0.5 })
 26:       isTransitioning.value = false
 27:     },
 28:   })
 29: }
 30: 
 31: const handleScroll = () => {
 32:   scrollY.value = window.scrollY
 33: }
 34: 
 35: const handleVideoLoad = () => {
 36:   videoLoaded.value = true
 37:   if (videoElement.value) {
 38:     videoElement.value.play().catch((error) => {
 39:       console.error('Video play error:', error)
 40:     })
 41:   }
 42:   gsap.to('.video-fade-in', {
 43:     opacity: 1,
 44:     duration: 1,
 45:     ease: 'power2.out',
 46:   })
 47: }
 48: 
 49: let wordRotationInterval: number | null = null
 50: 
 51: // Use onMounted instead of nuxtApp.hook
 52: onMounted(() => {
 53:   if (import.meta.client) {
 54:     // Initial animations with a slight delay to ensure DOM is ready
 55:     setTimeout(() => {
 56:       gsap.from('.hero-title', {
 57:         x: -50,
 58:         opacity: 0,
 59:         duration: 1,
 60:         ease: 'power3.out',
 61:       })
 62: 
 63:       gsap.from('.hero-subtitle', {
 64:         x: -50,
 65:         opacity: 0,
 66:         duration: 1,
 67:         delay: 0.3,
 68:         ease: 'power3.out',
 69:       })
 70: 
 71:       gsap.from('.hero-cta', {
 72:         x: -50,
 73:         opacity: 0,
 74:         duration: 1,
 75:         delay: 0.6,
 76:         ease: 'power3.out',
 77:       })
 78:     }, 100)
 79: 
 80:     // Initialize video
 81:     if (videoElement.value) {
 82:       videoElement.value.play().catch(console.error)
 83:     }
 84: 
 85:     // Start word rotation
 86:     wordRotationInterval = setInterval(rotateWords, 3000)
 87: 
 88:     // Add scroll listener
 89:     window.addEventListener('scroll', handleScroll)
 90:   }
 91: })
 92: 
 93: // Clean up with onUnmounted
 94: onUnmounted(() => {
 95:   if (import.meta.client) {
 96:     window.removeEventListener('scroll', handleScroll)
 97:     if (wordRotationInterval) {
 98:       clearInterval(wordRotationInterval)
 99:     }
100:   }
101: })
102: </script>
103: 
104: <!-- Template remains the same -->
105: <template>
106:   <div class="relative w-full h-screen overflow-hidden">
107:     <!-- Video Background -->
108:     <div class="absolute inset-0">
109:       <!-- Thumbnail placeholder (shows until video loads) -->
110:       <img
111:         src="/hero-image.jpg"
112:         alt="Space video thumbnail"
113:         class="absolute inset-0 w-full h-full object-cover transition-opacity duration-500"
114:         :class="{ 'opacity-0': videoLoaded }"
115:       />
116: 
117:       <!-- Video element -->
118:       <ClientOnly>
119:         <video
120:           ref="videoElement"
121:           class="video-fade-in absolute inset-0 w-full h-full object-cover"
122:           :class="{ 'opacity-0': !videoLoaded }"
123:           muted
124:           loop
125:           playsinline
126:           preload="auto"
127:           poster="/hero-image.jpg"
128:           @loadeddata="handleVideoLoad"
129:         >
130:           <source
131:             src="/videos/hero.mp4"
132:             type="video/mp4"
133:           />
134:         </video>
135:       </ClientOnly>
136: 
137:       <!-- Overlay -->
138:       <div
139:         class="absolute inset-0 bg-primary-950/10"
140:         :style="{
141:           background:
142:             'linear-gradient(to right, rgba(10, 10, 0, 0.90) 0%, rgba(30, 10, 60, 0.1) 100%)',
143:         }"
144:       ></div>
145:     </div>
146: 
147:     <!-- Rest of the content remains the same -->
148:     <div class="relative z-10 mx-auto px-12 min-h-screen flex flex-col justify-center">
149:       <div class="max-w-3xl">
150:         <h1
151:           class="hero-title text-4xl md:text-6xl lg:text-7xl font-bold text-white mb-6 leading-tight"
152:         >
153:           A Cosmos to
154:           <div class="relative block mt-2">
155:             <span
156:               :key="currentWord"
157:               class="highlight-word transition-all duration-500 ease-out block text-primary-400"
158:             >
159:               {{ currentWord }}</span
160:             >
161:           </div>
162:         </h1>
163: 
164:         <p class="hero-subtitle text-lg md:text-xl text-gray-200 max-w-md mb-12">
165:           Your daily dose of astronomical discoveries, mission updates, and space-tech insights.
166:         </p>
167: 
168:         <div class="hero-cta flex gap-4">
169:           <PrimeButton size="large"> 🚀 Get Started </PrimeButton>
170:           <PrimeButton
171:             severity="secondary"
172:             size="large"
173:             outlined
174:           >
175:             Learn More
176:           </PrimeButton>
177:         </div>
178:       </div>
179: 
180:       <div class="absolute bottom-8 w-full flex justify-center items-center left-0">
181:         <div class="w-8 h-14 border-2 border-white/30 rounded-full flex justify-center mx-auto">
182:           <div class="w-2 h-4 bg-white/60 rounded-full mt-3 animate-bounce"></div>
183:         </div>
184:       </div>
185:     </div>
186:   </div>
187: </template>
188: 
189: <style scoped>
190: .video-fade-in {
191:   transition: opacity 1s ease-out;
192: }
193: </style>
```

## File: apps/website/components/landing/LandingImageCycle.vue
```vue
 1: <script setup lang="ts">
 2: import { ref, onMounted, onUnmounted } from 'vue'
 3: 
 4: const props = defineProps({
 5:   images: {
 6:     type: Array as () => string[],
 7:     required: true,
 8:   },
 9:   interval: {
10:     type: Number,
11:     default: 7000,
12:   },
13: })
14: 
15: const currentImageIndex = ref(0)
16: let intervalId: number | null = null
17: 
18: const nextImage = () => {
19:   currentImageIndex.value = (currentImageIndex.value + 1) % props.images.length
20: }
21: 
22: onMounted(() => {
23:   intervalId = setInterval(nextImage, props.interval)
24: })
25: 
26: onUnmounted(() => {
27:   if (intervalId !== null) {
28:     clearInterval(intervalId)
29:   }
30: })
31: </script>
32: 
33: <template>
34:   <div class="absolute inset-0 w-full h-full">
35:     <TransitionGroup
36:       name="fade"
37:       tag="div"
38:     >
39:       <div
40:         v-for="(image, index) in images"
41:         :key="image"
42:         v-show="index === currentImageIndex"
43:         class="absolute inset-0 w-full h-full bg-cover bg-center transition-opacity duration-1000"
44:         :style="{ backgroundImage: `url(${image})` }"
45:       ></div>
46:     </TransitionGroup>
47:   </div>
48: </template>
49: 
50: <style scoped>
51: .fade-enter-active,
52: .fade-leave-active {
53:   transition: opacity 1s ease;
54: }
55: .fade-enter-from,
56: .fade-leave-to {
57:   opacity: 0;
58: }
59: </style>
```

## File: apps/website/components/landing/LandingPricing.vue
```vue
  1: <script setup lang="ts">
  2: import { onMounted } from 'vue'
  3: import { useAnimation } from '~/composables/useAnimation'
  4: 
  5: const { fadeInUp } = useAnimation()
  6: 
  7: const features = [
  8:   {
  9:     text: 'Daily space news updates',
 10:     description: 'Stay informed with the latest developments in space exploration',
 11:   },
 12:   {
 13:     text: 'Basic search functionality',
 14:     description: "Find exactly what you're looking for with powerful search",
 15:   },
 16:   {
 17:     text: 'Community forums access',
 18:     description: 'Connect with fellow space enthusiasts',
 19:   },
 20:   {
 21:     text: 'Email notifications',
 22:     description: 'Never miss important space events and news',
 23:   },
 24:   {
 25:     text: 'Personalized feed',
 26:     description: 'Content tailored to your interests',
 27:   },
 28:   {
 29:     text: 'Launch calendars',
 30:     description: 'Track upcoming space missions and events',
 31:   },
 32:   {
 33:     text: 'Basic API access',
 34:     description: 'Integrate space data into your projects',
 35:   },
 36:   {
 37:     text: 'Basic API access',
 38:     description: 'Integrate space data into your projects',
 39:   },
 40:   {
 41:     text: 'Basic API access',
 42:     description: 'Integrate space data into your projects',
 43:   },
 44: ]
 45: 
 46: onMounted(() => {
 47:   fadeInUp('.pricing-content')
 48: })
 49: </script>
 50: 
 51: <template>
 52:   <section class="py-24">
 53:     <LandingGlass
 54:       gradient="mixed"
 55:       intensity="low"
 56:     >
 57:       <LandingTitle
 58:         title="Unlimited access for FREE"
 59:         subtitle="AstronEra offers the most comprehensive space news platform at zero cost"
 60:       />
 61:       <div class="pricing-content flex flex-col items-center">
 62:         <!-- Price Tag -->
 63:         <div class="flex items-baseline gap-2 mb-8">
 64:           <span class="text-6xl font-bold text-sky-400">$0</span>
 65:           <span class="text-xl text-gray-400">/forever</span>
 66:           <span
 67:             class="ml-4 px-4 py-1 rounded-full text-sm bg-emerald-500/10 border border-emerald-500/20 text-emerald-400"
 68:           >
 69:             FOREVER FREE
 70:           </span>
 71:         </div>
 72: 
 73:         <!-- Features Grid -->
 74:         <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12 w-full max-w-4xl">
 75:           <div
 76:             v-for="feature in features"
 77:             :key="feature.text"
 78:             class="group relative flex"
 79:           >
 80:             <!-- Feature Card -->
 81:             <div
 82:               class="relative rounded-xl bg-primary-900/30 backdrop-blur-sm p-4 border border-primary-800/30 transition-all duration-300 hover:border-sky-500/30"
 83:             >
 84:               <!-- Hover Gradient -->
 85:               <div
 86:                 class="absolute inset-0 bg-gradient-to-br from-sky-500/5 to-blue-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-xl"
 87:               />
 88: 
 89:               <!-- Content -->
 90:               <div class="relative z-10 flex items-start gap-3">
 91:                 <Icon
 92:                   name="mdi:check-circle"
 93:                   class="text-emerald-500 flex-shrink-0 mt-1"
 94:                   size="20"
 95:                 />
 96:                 <div>
 97:                   <h4 class="font-medium text-white mb-1">{{ feature.text }}</h4>
 98:                   <p class="text-sm text-gray-400">{{ feature.description }}</p>
 99:                 </div>
100:               </div>
101:             </div>
102:           </div>
103:         </div>
104: 
105:         <!-- CTA Section -->
106:         <div class="text-center space-y-6 max-w-2xl">
107:           <p class="text-gray-300"> No credit card required. Start exploring the cosmos today! </p>
108:           <div class="flex justify-center gap-4">
109:             <PrimeButton
110:               label="Get Started Now"
111:               icon="mdi:rocket-launch-outline"
112:               size="large"
113:               class="min-w-[200px] bg-gradient-to-r from-sky-500 to-blue-600 hover:from-sky-400 hover:to-blue-500 transition-all duration-300"
114:             />
115:             <PrimeButton
116:               label="Learn More"
117:               size="large"
118:               outlined
119:               severity="secondary"
120:               class="min-w-[200px] border-sky-500/30 hover:border-sky-500/50 text-sky-400 transition-all duration-300"
121:             />
122:           </div>
123:           <p class="text-sm text-gray-400">
124:             Join thousands of space enthusiasts already using AstronEra
125:           </p>
126:         </div>
127:       </div>
128:     </LandingGlass>
129:   </section>
130: </template>
```

## File: apps/website/components/landing/LandingProductSteps.vue
```vue
  1: <script setup lang="ts">
  2: import { ref, onMounted } from 'vue'
  3: import { useAnimation } from '~/composables/useAnimation'
  4: 
  5: const { fadeInUp } = useAnimation()
  6: 
  7: const steps = [
  8:   {
  9:     icon: 'mdi:checkbox-marked-circle-outline',
 10:     title: 'Customize Your Feed',
 11:     description: 'Select your favorite topics and interests to personalize your news feed.',
 12:     gif: '/images/gifs/select-interests.gif',
 13:     color: 'from-blue-500/20 to-purple-500/20',
 14:   },
 15:   {
 16:     icon: 'mdi:newspaper-variant-outline',
 17:     title: '',
 18:     description: '',
 19:     gif: '/images/gifs/explore-content.gif',
 20:     color: 'from-sky-500/20 to-blue-500/20',
 21:   },
 22:   {
 23:     icon: 'mdi:bell-outline',
 24:     title: 'Stay Updated',
 25:     description: 'Receive personalized notifications for events and breaking news.',
 26:     gif: '/images/gifs/track-missions.gif',
 27:     color: 'from-purple-500/20 to-blue-500/20',
 28:   },
 29:   {
 30:     icon: 'mdi:clock-time-four-outline',
 31:     title: 'Save Time',
 32:     description: 'The more you use it, the better it gets at delivering the news you care about.',
 33:     gif: '/images/gifs/stay-updated.gif',
 34:     color: 'from-indigo-500/20 to-sky-500/20',
 35:   },
 36: ]
 37: 
 38: onMounted(() => {
 39:   fadeInUp('.step-item')
 40: })
 41: </script>
 42: 
 43: <template>
 44:   <section class="py-24 container">
 45:     <LandingTitle
 46:       class="mb-12"
 47:       title="How it works"
 48:       subtitle="Discover the universe effortlessly with our intuitive platform. Here's how:"
 49:     />
 50: 
 51:     <!-- Steps Grid -->
 52:     <div class="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-5xl mx-auto">
 53:       <div
 54:         v-for="(step, index) in steps"
 55:         :key="index"
 56:         class="step-item group relative"
 57:       >
 58:         <!-- Step Number -->
 59:         <div
 60:           class="absolute -top-6 -left-6 w-12 h-12 rounded-full bg-primary-900/50 backdrop-blur-lg flex items-center justify-center border border-sky-500/20 z-10 transition-all duration-300 group-hover:border-sky-500/40 group-hover:bg-primary-900/70"
 61:         >
 62:           <span class="font-space text-sky-400 text-xl">{{ index + 1 }}</span>
 63:         </div>
 64: 
 65:         <PrimeCard
 66:           class="h-full bg-primary-900/30 backdrop-blur-md border border-primary-800/30 hover:border-sky-500/30 transition-all duration-500 overflow-hidden"
 67:         >
 68:           <!-- Content -->
 69:           <template #header>
 70:             <div class="relative w-full aspect-video rounded-lg overflow-hidden bg-primary-950/50">
 71:               <!-- Replace with actual GIF -->
 72:               <div class="absolute inset-0 flex items-center justify-center">
 73:                 <span class="text-gray-400">GIF Placeholder</span>
 74:               </div>
 75: 
 76:               <!-- Overlay with icon -->
 77:               <div
 78:                 class="absolute inset-0 bg-gradient-to-t from-primary-900/80 to-transparent group-hover:from-primary-900/90 transition-all duration-500"
 79:               >
 80:                 <Icon
 81:                   :name="step.icon"
 82:                   size="48"
 83:                   class="absolute bottom-4 right-4 text-sky-400/80 transition-transform duration-300 group-hover:scale-110"
 84:                 />
 85:               </div>
 86:             </div>
 87:           </template>
 88: 
 89:           <template #title>
 90:             <h3 class="text-2xl font-space text-white mb-2 relative z-10">
 91:               {{ step.title }}
 92:             </h3>
 93:           </template>
 94: 
 95:           <template #content>
 96:             <div
 97:               class="absolute inset-0 bg-gradient-to-br opacity-0 group-hover:opacity-40 transition-opacity duration-500"
 98:               :class="step.color"
 99:             ></div>
100:             <p class="text-gray-300 relative z-10">{{ step.description }}</p>
101:           </template>
102:         </PrimeCard>
103: 
104:         <!-- Card Glow -->
105:         <div
106:           class="absolute inset-0 bg-sky-500/5 group-hover:bg-sky-500/10 blur-xl transition-all duration-500 -z-10"
107:         ></div>
108:       </div>
109:     </div>
110:   </section>
111: </template>
112: 
113: <style scoped>
114: /* Ensure proper stacking */
115: .how-to-use-section {
116:   isolation: isolate;
117: }
118: </style>
```

## File: apps/website/components/landing/LandingTestimonials.vue
```vue
  1: <script setup lang="ts">
  2: import { onMounted } from 'vue'
  3: import { useAnimation } from '~/composables/useAnimation'
  4: import testimonials from '@/data/home/testimonials.json'
  5: 
  6: const { carouselFadeIn } = useAnimation()
  7: 
  8: interface Testimonial {
  9:   image: string
 10:   name: string
 11:   company: string
 12:   quote: string
 13: }
 14: 
 15: onMounted(() => {
 16:   carouselFadeIn('.testimonial-item')
 17: })
 18: </script>
 19: 
 20: <template>
 21:   <section class="py-24">
 22:     <GlassPanel
 23:       gradient="purple"
 24:       intensity="medium"
 25:     >
 26:       <LandingTitle
 27:         title="Hear From The Community"
 28:         subtitle="Discover How We're Making a Difference"
 29:         class="!pb-12"
 30:       />
 31:       <!-- Testimonials Carousel -->
 32:       <AppSwiper
 33:         :items="testimonials"
 34:         type="testimonial"
 35:         class="testimonials-carousel"
 36:       >
 37:         <template #default="{ item }: { item: Testimonial }">
 38:           <div class="testimonial-item group">
 39:             <!-- Card with glass effect -->
 40:             <div
 41:               class="relative h-full rounded-xl bg-primary-900/30 backdrop-blur-md border border-primary-800/30 hover:border-sky-500/30 transition-all duration-500 p-8"
 42:             >
 43:               <!-- Hover gradient -->
 44:               <div
 45:                 class="absolute inset-0 bg-gradient-to-br from-sky-500/5 to-purple-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-xl"
 46:               ></div>
 47: 
 48:               <!-- Content -->
 49:               <div class="relative z-10">
 50:                 <!-- Profile section -->
 51:                 <div class="flex items-center mb-8">
 52:                   <div class="relative">
 53:                     <IBImage
 54:                       :img="{
 55:                         src: item.image,
 56:                         alt: item.name,
 57:                         width: '60px',
 58:                         height: '60px',
 59:                         loading: 'lazy',
 60:                         quality: '80',
 61:                         format: 'webp',
 62:                       }"
 63:                       class="min-h-16 min-w-16 rounded-full ring-2 ring-sky-500/20"
 64:                     />
 65:                     <!-- Glow behind image -->
 66:                     <div class="absolute inset-0 bg-sky-500/20 blur-xl -z-10"></div>
 67:                   </div>
 68: 
 69:                   <div class="flex flex-col pl-4">
 70:                     <h3 class="text-xl font-semibold text-white">{{ item.name }}</h3>
 71:                     <p class="text-sky-400">{{ item.company }}</p>
 72:                   </div>
 73:                 </div>
 74: 
 75:                 <!-- Quote section -->
 76:                 <div class="relative">
 77:                   <div class="relative rounded-xl foreground p-6">
 78:                     <Icon
 79:                       name="mdi:format-quote-open"
 80:                       class="absolute -top-4 left-4 text-sky-400/40"
 81:                       size="32px"
 82:                     />
 83:                     <p class="text-gray-300 italic relative z-10">{{ item.quote }}</p>
 84:                     <Icon
 85:                       name="mdi:format-quote-close"
 86:                       class="absolute -bottom-4 right-4 text-sky-400/40"
 87:                       size="32px"
 88:                     />
 89:                   </div>
 90:                 </div>
 91:               </div>
 92:             </div>
 93: 
 94:             <!-- Card glow effect -->
 95:             <div
 96:               class="absolute inset-0 bg-sky-500/5 group-hover:bg-sky-500/10 blur-xl transition-all duration-500 -z-10 rounded-xl"
 97:             ></div>
 98:           </div>
 99:         </template>
100:       </AppSwiper>
101:     </GlassPanel>
102:   </section>
103: </template>
104: 
105: <style scoped>
106: .testimonials-carousel :deep(.swiper-pagination-bullet) {
107:   background: theme('colors.sky.400');
108:   opacity: 0.5;
109: }
110: 
111: .testimonials-carousel :deep(.swiper-pagination-bullet-active) {
112:   opacity: 1;
113: }
114: 
115: /* Optional: Enhanced navigation buttons */
116: .testimonials-carousel :deep(.swiper-button-next),
117: .testimonials-carousel :deep(.swiper-button-prev) {
118:   color: blue;
119:   background: blue;
120:   width: 40px;
121:   height: 40px;
122:   border-radius: 50%;
123:   backdrop-filter: blur(8px);
124: }
125: 
126: .testimonials-carousel :deep(.swiper-button-next:after),
127: .testimonials-carousel :deep(.swiper-button-prev:after) {
128:   font-size: 20px;
129: }
130: </style>
```

## File: apps/website/components/landing/LandingTitle.vue
```vue
 1: <template>
 2:   <div
 3:     class="flex flex-col text-center gap-4"
 4:     :class="padding"
 5:   >
 6:     <h2
 7:       class="text-3xl md:text-5xl font-bold tracking-wider relative font-orbitron max-w-2xl text-wrap mx-auto"
 8:     >
 9:       <!-- Main text - Make this solid white initially -->
10:       <span class="relative text-white">{{ title }}</span>
11: 
12:       <!-- Glow effect - Position behind the main text -->
13:       <span
14:         class="absolute inset-0 blur-sm bg-gradient-to-r from-white via-gray-100 to-gray-300 opacity-50 bg-clip-text text-transparent -z-10"
15:         aria-hidden="true"
16:       >
17:         {{ title }}
18:       </span>
19:     </h2>
20: 
21:     <h4
22:       v-if="subtitle"
23:       class="text-lg md:text-2xl font-light tracking-wide font-sourcecodepro relative max-w-xl mx-auto"
24:     >
25:       <!-- Main subtitle text - Solid color -->
26:       <span class="relative text-sky-400">{{ subtitle }}</span>
27: 
28:       <!-- Subtitle glow - Behind main text -->
29:       <span
30:         class="absolute inset-0 blur-sm text-sky-400/30 -z-10"
31:         aria-hidden="true"
32:       >
33:         {{ subtitle }}
34:       </span>
35:     </h4>
36:   </div>
37: </template>
38: 
39: <script setup lang="ts">
40: defineProps({
41:   title: {
42:     type: String,
43:     required: true,
44:   },
45:   subtitle: {
46:     type: String,
47:     required: false,
48:     default: '',
49:   },
50:   padding: {
51:     type: String,
52:     required: false,
53:     default: 'pb-8',
54:   },
55: })
56: </script>
57: 
58: <style scoped>
59: /* Optional: Add hover effect */
60: 
61: h2 {
62:   text-wrap: normal !important; /* Override the text-wrap-balance */
63:   animation: textPulse 4s ease-in-out infinite;
64: }
65: 
66: h2:hover span:first-child {
67:   opacity: 0.7;
68:   transition: opacity 0.3s ease;
69: }
70: 
71: .font-space {
72:   font-family: 'Orbitron', sans-serif;
73: }
74: 
75: .font-subtitle {
76:   font-family: 'Space Grotesk', sans-serif;
77: }
78: 
79: /* Optional: Add text shadow animation */
80: @keyframes textPulse {
81:   0%,
82:   100% {
83:     text-shadow: 0 0 8px rgba(255, 255, 255, 0.1);
84:   }
85:   50% {
86:     text-shadow: 0 0 12px rgba(255, 255, 255, 0.2);
87:   }
88: }
89: 
90: h2 {
91:   animation: textPulse 4s ease-in-out infinite;
92: }
93: </style>
```

## File: apps/website/components/landing/LandingTrusted.vue
```vue
  1: <script setup lang="ts">
  2: import { ref, onMounted } from 'vue'
  3: import { useAnimation } from '~/composables/useAnimation'
  4: import LandingTitle from './LandingTitle.vue'
  5: 
  6: const { fadeInUp, scaleOnHover } = useAnimation()
  7: 
  8: interface TrustedPartner {
  9:   image: string
 10:   name: string
 11:   invert?: boolean
 12:   category: 'research' | 'education' | 'space' | 'tech'
 13:   description: string
 14: }
 15: 
 16: const trustedPartners = ref<TrustedPartner[]>([
 17:   {
 18:     image: 'images/trusted/dst.png',
 19:     name: 'DST',
 20:     invert: true,
 21:     category: 'research',
 22:     description:
 23:       "Department of Science and Technology - Government of India's premier scientific research organization.",
 24:   },
 25:   {
 26:     image: 'images/trusted/iau-oad.png',
 27:     name: 'IAU-OAD',
 28:     invert: true,
 29:     category: 'education',
 30:     description: 'International Astronomical Union Office of Astronomy for Development.',
 31:   },
 32:   {
 33:     image: 'images/trusted/in-fed.png',
 34:     name: 'IN-FED',
 35:     invert: true,
 36:     category: 'space',
 37:     description: 'Indian Federation of Space Research and Technology.',
 38:   },
 39:   {
 40:     image: 'images/trusted/iimb-nsrcel.png',
 41:     name: 'IIMB-NSRCEL',
 42:     invert: true,
 43:     category: 'tech',
 44:     description: "IIM Bangalore's Innovation & Entrepreneurship Center.",
 45:   },
 46: ])
 47: 
 48: const categoryColors = {
 49:   research: 'from-blue-500/10 to-sky-500/10',
 50:   education: 'from-purple-500/10 to-blue-500/10',
 51:   space: 'from-sky-500/10 to-indigo-500/10',
 52:   tech: 'from-indigo-500/10 to-purple-500/10',
 53: }
 54: 
 55: onMounted(() => {
 56:   fadeInUp('.partner-logo')
 57:   scaleOnHover('.partner-logo')
 58: })
 59: </script>
 60: 
 61: <template>
 62:   <section class="py-24">
 63:       <LandingGlass
 64:       gradient="mixed"
 65:       intensity="low"
 66:       >
 67:       <LandingTitle title="Trusted by Leading Organizations" class="!pb-12" />
 68:       <!-- Partner Stats -->
 69:       <div class="flex justify-center gap-8 mb-16">
 70:         <div class="text-center">
 71:           <h3 class="text-3xl font-bold text-sky-400 mb-2">30+</h3>
 72:           <p class="text-gray-400">Global Partners</p>
 73:         </div>
 74:         <div class="text-center">
 75:           <h3 class="text-3xl font-bold text-sky-400 mb-2">12+</h3>
 76:           <p class="text-gray-400">Countries</p>
 77:         </div>
 78:         <div class="text-center">
 79:           <h3 class="text-3xl font-bold text-sky-400 mb-2">5+</h3>
 80:           <p class="text-gray-400">Years of Trust</p>
 81:         </div>
 82:       </div>
 83: 
 84:       <!-- Partners Grid -->
 85:       <div class="grid grid-cols-2 md:grid-cols-4 gap-8 items-center justify-items-center mb-16">
 86:         <div
 87:           v-for="(partner, index) in trustedPartners"
 88:           :key="index"
 89:           class="partner-logo group relative"
 90:         >
 91:           <!-- Partner Card -->
 92:           <div
 93:             class="relative rounded-xl bg-primary-900/30 backdrop-blur-sm p-6 border border-primary-800/30 transition-all duration-500 hover:border-sky-500/30"
 94:           >
 95:             <!-- Hover Gradient -->
 96:             <div
 97:               class="absolute inset-0 bg-gradient-to-br opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-xl"
 98:               :class="categoryColors[partner.category]"
 99:             ></div>
100: 
101:             <!-- Logo -->
102:             <div class="relative z-10">
103:               <NuxtImg
104:                 :id="'partner-logo-' + index"
105:                 v-tooltip="partner.description"
106:                 :src="partner.image"
107:                 :alt="partner.name"
108:                 :class="[
109:                   'max-h-16 w-auto object-contain transition-all duration-300 group-hover:scale-110',
110:                   partner.invert ? 'filter invert' : '',
111:                 ]"
112:               />
113:             </div>
114:           </div>
115: 
116:           <!-- Card Glow -->
117:           <div
118:             class="absolute inset-0 bg-sky-500/5 group-hover:bg-sky-500/10 blur-xl transition-all duration-500 -z-10 rounded-xl"
119:           ></div>
120:         </div>
121:       </div>
122: 
123:       <!-- CTA Section -->
124:       <div class="text-center space-y-6">
125:         <p class="text-xl text-gray-300">Ready to Join Our Network?</p>
126:         <div class="flex gap-4 justify-center">
127:           <PrimeButton
128:             label="Partner With Us"
129:             size="large"
130:             class="min-w-[200px] bg-gradient-to-r from-sky-500 to-blue-600 hover:from-sky-400 hover:to-blue-500 transition-all duration-300"
131:           />
132:           <PrimeButton
133:             label="Learn More"
134:             size="large"
135:             outlined
136:             severity="secondary"
137:             class="min-w-[200px] border-sky-500/30 hover:border-sky-500/50 text-sky-400 transition-all duration-300"
138:           />
139:         </div>
140:         <p class="text-sm text-gray-400 max-w-md mx-auto">
141:           Join our growing network of space industry leaders and help shape the future of space
142:           exploration
143:         </p>
144:       </div>
145:     </LandingGlass>
146:   </section>
147: </template>
148: 
149: <style scoped>
150: .filter.invert {
151:   filter: invert(1);
152: }
153: 
154: /* Ensure proper stacking */
155: .partner-logo {
156:   isolation: isolate;
157: }
158: </style>
```

## File: apps/website/components/landing/LandingWebSeries.vue
```vue
  1: <script setup lang="ts">
  2: import { ref, onMounted } from 'vue'
  3: import { useAnimation } from '~/composables/useAnimation'
  4: 
  5: const { fadeInUp } = useAnimation()
  6: const loadVideo = ref(false)
  7: 
  8: const patreonPerks = [
  9:   'Behind-the-scenes content',
 10:   'Early access to episodes',
 11:   'Monthly Q&A sessions',
 12:   'Exclusive tutorials',
 13:   'Development insights',
 14: ]
 15: 
 16: onMounted(() => {
 17:   fadeInUp('.content-section')
 18: })
 19: </script>
 20: 
 21: <template>
 22:   <section class="py-24 space-y-8">
 23:     <!-- Optional Title Section -->
 24:     <LandingTitle
 25:       title="Startups Guide to the Galaxy"
 26:       subtitle="Follow our journey building AstronEra and learn from our experiences"
 27:     />
 28:     <div class="content-section space-y-8">
 29:       <!-- Main Grid -->
 30:       <div class="grid md:grid-cols-2 gap-8">
 31:         <LandingGlass
 32:           hover-effect="glow"
 33:           glow-color="purple"
 34:           gradient="mixed"
 35:           intensity="low"
 36:           interactive
 37:           isolate-content
 38:         >
 39:           <!-- Series Info -->
 40:           <div class="relative group">
 41:             <div
 42:               class="relative rounded-xl transition-all duration-500 hover:border-sky-500/30 h-full"
 43:             >
 44:               <!-- Content -->
 45:               <div class="relative z-10 h-full flex flex-col">
 46:                 <Icon
 47:                   name="mdi:video-vintage"
 48:                   size="48"
 49:                   class="text-sky-400 mb-6"
 50:                 />
 51:                 <h3 class="text-2xl font-bold text-white mb-4 font-space"> Building in Public </h3>
 52:                 <p class="text-gray-300 mb-6">
 53:                   Watch as we navigate the challenges of building a space-tech startup. From
 54:                   ideation to launch, we share every step of our journey.
 55:                 </p>
 56:                 <div class="mt-auto">
 57:                   <span
 58:                     class="px-3 py-1 rounded-full text-xs bg-sky-500/10 border border-sky-500/20 text-sky-400"
 59:                   >
 60:                     New Episode Every Week
 61:                   </span>
 62:                 </div>
 63:               </div>
 64:             </div>
 65:           </div>
 66:         </LandingGlass>
 67: 
 68:         <!-- Patreon Support -->
 69:         <LandingGlass
 70:           hover-effect="glow"
 71:           glow-color="purple"
 72:           gradient="mixed"
 73:           intensity="low"
 74:           interactive
 75:           isolate-content
 76:         >
 77:           <div class="relative group">
 78:             <div
 79:               class="relative rounded-xl transition-all duration-500 hover:border-sky-500/30 h-full"
 80:             >
 81:               <!-- Content -->
 82:               <div class="relative z-10 h-full flex flex-col">
 83:                 <Icon
 84:                   name="mdi:patreon"
 85:                   size="48"
 86:                   class="text-red-400 mb-6"
 87:                 />
 88:                 <h3 class="text-2xl font-bold text-white mb-4 font-space">
 89:                   Support Us on Patreon
 90:                 </h3>
 91:                 <div class="space-y-3 mb-6">
 92:                   <div
 93:                     v-for="perk in patreonPerks"
 94:                     :key="perk"
 95:                     class="flex items-center gap-2"
 96:                   >
 97:                     <Icon
 98:                       name="mdi:check"
 99:                       class="text-emerald-400"
100:                     />
101:                     <span class="text-gray-300">{{ perk }}</span>
102:                   </div>
103:                 </div>
104:                 <div class="mt-auto">
105:                   <NuxtLink
106:                     to="https://www.patreon.com/YourPatreonLink"
107:                     target="_blank"
108:                   >
109:                     <PrimeButton
110:                       size="large"
111:                       class="w-full bg-gradient-to-r from-orange-500 to-red-600 hover:from-orange-400 hover:to-red-500 transition-all duration-300"
112:                     >
113:                       Become a Patron
114:                     </PrimeButton>
115:                   </NuxtLink>
116:                 </div>
117:               </div>
118:             </div>
119:           </div>
120:         </LandingGlass>
121:       </div>
122: 
123:       <!-- Video Section -->
124:       <LandingGlass
125:         hover-effect="glow"
126:         glow-color="purple"
127:         gradient="mixed"
128:         intensity="low"
129:         interactive
130:         isolate-content
131:       >
132:         <div class="relative group">
133:           <div class="relative rounded-xl transition-all duration-500 hover:border-sky-500/30">
134:             <!-- Video Container -->
135:             <div class="aspect-video relative rounded-lg overflow-hidden">
136:               <img
137:                 v-if="!loadVideo"
138:                 src="https://img.youtube.com/vi/gMG621m6QRE/maxresdefault.jpg"
139:                 alt="Startups Guide to the Galaxy - AstronEra"
140:                 class="w-full h-full object-cover cursor-pointer transition-transform duration-300 hover:scale-105"
141:                 @click="loadVideo = true"
142:               />
143:               <div
144:                 v-if="!loadVideo"
145:                 class="absolute inset-0 flex items-center justify-center bg-black/50 hover:bg-black/40 transition-colors duration-300"
146:               >
147:                 <Icon
148:                   name="mdi:play-circle"
149:                   size="72"
150:                   class="text-white/90 hover:text-white transition-colors duration-300"
151:                 />
152:               </div>
153:               <iframe
154:                 v-else
155:                 src="https://www.youtube.com/embed/gMG621m6QRE?start=488&autoplay=1"
156:                 title="Startups Guide to the Galaxy - AstronEra"
157:                 frameborder="0"
158:                 allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
159:                 allowfullscreen
160:                 class="absolute inset-0 w-full h-full"
161:               />
162:             </div>
163:           </div>
164:         </div>
165:       </LandingGlass>
166:       <LazyLandingCTASocial />
167:     </div>
168:   </section>
169: </template>
170: 
171: <style scoped></style>
```

## File: apps/website/components/OgImage/OgImageDefault.vue
```vue
  1: <script lang="ts" setup>
  2: /**
  3:  * @credits NuxtLabs <https://nuxtlabs.com/>
  4:  * @see https://github.com/nuxt/nuxt.com/blob/main/components/OgImage/OgImageDocs.vue
  5:  */
  6: import { computed } from 'vue'
  7: 
  8: const props = withDefaults(
  9:   defineProps<{ title?: string; description?: string; headline?: string }>(),
 10:   {
 11:     title: 'title',
 12:     description: 'description',
 13:     headline: 'headline',
 14:   },
 15: )
 16: 
 17: const title = computed(() => props.title.slice(0, 60))
 18: 
 19: </script>
 20: 
 21: <template>
 22:   <div class="w-full h-full flex flex-col justify-center bg-[#020420]">
 23:     <svg
 24:       class="absolute right-0 top-0"
 25:       width="629"
 26:       height="593"
 27:       viewBox="0 0 629 593"
 28:       fill="none"
 29:       xmlns="http://www.w3.org/2000/svg"
 30:     >
 31:       <g filter="url(#filter0_f_199_94966)">
 32:         <path
 33:           d="M628.5 -578L639.334 -94.4223L806.598 -548.281L659.827 -87.387L965.396 -462.344L676.925 -74.0787L1087.69 -329.501L688.776 -55.9396L1160.22 -164.149L694.095 -34.9354L1175.13 15.7948L692.306 -13.3422L1130.8 190.83L683.602 6.50012L1032.04 341.989L668.927 22.4412L889.557 452.891L649.872 32.7537L718.78 511.519L628.5 36.32L538.22 511.519L607.128 32.7537L367.443 452.891L588.073 22.4412L224.955 341.989L573.398 6.50012L126.198 190.83L564.694 -13.3422L81.8734 15.7948L562.905 -34.9354L96.7839 -164.149L568.224 -55.9396L169.314 -329.501L580.075 -74.0787L291.604 -462.344L597.173 -87.387L450.402 -548.281L617.666 -94.4223L628.5 -578Z"
 34:           fill="#00DC82"
 35:         />
 36:       </g>
 37:       <defs>
 38:         <filter
 39:           id="filter0_f_199_94966"
 40:           x="0.873535"
 41:           y="-659"
 42:           width="1255.25"
 43:           height="1251.52"
 44:           filterUnits="userSpaceOnUse"
 45:           color-interpolation-filters="sRGB"
 46:         >
 47:           <feFlood
 48:             flood-opacity="0"
 49:             result="BackgroundImageFix"
 50:           />
 51:           <feBlend
 52:             mode="normal"
 53:             in="SourceGraphic"
 54:             in2="BackgroundImageFix"
 55:             result="shape"
 56:           />
 57:           <feGaussianBlur
 58:             stdDeviation="40.5"
 59:             result="effect1_foregroundBlur_199_94966"
 60:           />
 61:         </filter>
 62:       </defs>
 63:     </svg>
 64: 
 65:     <div class="w-[620px] pl-[100px]">
 66:       <p
 67:         v-if="headline"
 68:         class="uppercase text-[24px] text-[#00DC82] mb-8 font-semibold"
 69:       >
 70:         {{ headline }}
 71:       </p>
 72:       <h1 class="w-[620px] m-0 text-[65px] font-semibold mb-4 text-white flex items-center">
 73:         <span>{{ title.slice(0, 40) }}</span>
 74:       </h1>
 75:       <p class="text-[30px] text-[#E4E4E7] leading-tight">
 76:         {{ description.slice(0, 200) }}
 77:       </p>
 78:     </div>
 79:     <div class="absolute flex justify-center items-center right-[200px] h-full">
 80:       <img
 81:         :src="`/astronera-logo.jpg`"
 82:         width="90px"
 83:         height="90px"
 84:         class="z-50 relative"
 85:       />
 86: 
 87:       <svg
 88:         class="absolute"
 89:         width="340"
 90:         height="340"
 91:         viewBox="0 0 340 340"
 92:         fill="none"
 93:         xmlns="http://www.w3.org/2000/svg"
 94:       >
 95:         <path
 96:           d="M86.6286 103.106C88.2099 94.7477 94.7477 88.2099 103.106 86.6286L104.427 86.3788C146.343 78.4485 189.386 78.5576 231.262 86.7002L232.272 86.8967C239.615 88.3244 245.4 93.99 246.981 101.301L247.277 102.671C256.565 145.63 256.438 190.092 246.903 232.997C245.361 239.939 239.939 245.361 232.997 246.903C190.092 256.438 145.63 256.565 102.671 247.277L101.301 246.981C93.99 245.4 88.3244 239.615 86.8967 232.272L86.7002 231.262C78.5576 189.386 78.4485 146.343 86.3788 104.426L86.6286 103.106Z"
 97:           fill="url(#paint0_linear_199_94959)"
 98:         />
 99:         <path
100:           d="M86.6286 103.106C88.2099 94.7477 94.7477 88.2099 103.106 86.6286L104.427 86.3788C146.343 78.4485 189.386 78.5576 231.262 86.7002L232.272 86.8967C239.615 88.3244 245.4 93.99 246.981 101.301L247.277 102.671C256.565 145.63 256.438 190.092 246.903 232.997C245.361 239.939 239.939 245.361 232.997 246.903C190.092 256.438 145.63 256.565 102.671 247.277L101.301 246.981C93.99 245.4 88.3244 239.615 86.8967 232.272L86.7002 231.262C78.5576 189.386 78.4485 146.343 86.3788 104.426L86.6286 103.106Z"
101:           fill="url(#paint1_radial_199_94959)"
102:           fill-opacity="0.06"
103:         />
104:         <path
105:           d="M103.028 86.2151C94.4994 87.8286 87.8286 94.4994 86.2151 103.028L85.9653 104.348C78.0252 146.318 78.1344 189.414 86.2872 231.342L86.4836 232.353C87.9434 239.86 93.7366 245.776 101.212 247.392L102.582 247.688C145.601 256.989 190.124 256.862 233.089 247.314C240.19 245.736 245.736 240.19 247.314 233.089C256.862 190.124 256.989 145.601 247.688 102.582L247.392 101.212C245.776 93.7366 239.86 87.9434 232.353 86.4836L231.342 86.2872C189.414 78.1344 146.318 78.0252 104.348 85.9653L103.028 86.2151Z"
106:           stroke="url(#paint2_linear_199_94959)"
107:           stroke-opacity="0.2"
108:           stroke-width="0.841584"
109:         />
110:         <path
111:           d="M86.5693 66.0418C76.1888 68.0728 68.0728 76.1888 66.0418 86.5693L65.7807 87.9041C55.4495 140.708 55.5631 195.024 66.1151 247.784L66.3095 248.756C68.1871 258.144 75.4486 265.527 84.8039 267.561L86.1767 267.86C140.001 279.561 195.755 279.425 249.525 267.477C258.483 265.486 265.485 258.489 267.475 249.53C279.429 195.737 279.558 139.989 267.852 86.1413L267.553 84.7671C265.524 75.4341 258.158 68.19 248.793 66.3169L247.784 66.1151C195.024 55.5631 140.708 55.4495 87.904 65.7807L86.5693 66.0418Z"
112:           stroke="url(#paint3_linear_199_94959)"
113:           stroke-opacity="0.6"
114:           stroke-width="1.7"
115:         />
116:         <path
117:           d="M66.1749 44.2983C55.2117 46.6476 46.6475 55.2117 44.2983 66.1749L43.1523 71.5228C29.5422 135.037 29.5422 200.713 43.1523 264.227L44.425 270.166C46.7026 280.795 54.917 289.15 65.5055 291.608C132.857 307.243 203.127 307.189 270.477 291.554C280.924 289.129 289.129 280.924 291.554 270.477C307.189 203.127 307.243 132.857 291.608 65.5055C289.15 54.917 280.795 46.7026 270.166 44.425L264.227 43.1523C200.713 29.5422 135.037 29.5422 71.5228 43.1523L66.1749 44.2983Z"
118:           stroke="url(#paint4_linear_199_94959)"
119:           stroke-opacity="0.4"
120:           stroke-width="1.7"
121:         />
122:         <path
123:           d="M47.0949 24.9846C36.0029 27.3375 27.3375 36.0029 24.9846 47.0949L19.3193 73.8027C5.86738 137.219 5.96967 202.762 19.6195 266.137L25.0028 291.131C27.3518 302.037 35.8106 310.592 46.6894 313.064L67.2583 317.739C134.879 333.107 205.098 332.991 272.667 317.398L291.54 313.043C302.229 310.576 310.576 302.229 313.043 291.54L317.398 272.667C332.991 205.098 333.107 134.879 317.739 67.2583L313.064 46.6894C310.592 35.8106 302.037 27.3518 291.131 25.0028L266.137 19.6195C202.762 5.96966 137.219 5.86738 73.8027 19.3193L47.0949 24.9846Z"
124:           stroke="url(#paint5_linear_199_94959)"
125:           stroke-opacity="0.2"
126:           stroke-width="2.125"
127:         />
128:         <!-- Insert SVG Logo -->
129:         <defs>
130:           <filter
131:             id="filter0_f_199_94959"
132:             x="124.176"
133:             y="130.551"
134:             width="91.6485"
135:             height="67.3485"
136:             filterUnits="userSpaceOnUse"
137:             color-interpolation-filters="sRGB"
138:           >
139:             <feFlood
140:               flood-opacity="0"
141:               result="BackgroundImageFix"
142:             />
143:             <feBlend
144:               mode="normal"
145:               in="SourceGraphic"
146:               in2="BackgroundImageFix"
147:               result="shape"
148:             />
149:             <feGaussianBlur
150:               stdDeviation="3.78713"
151:               result="effect1_foregroundBlur_199_94959"
152:             />
153:           </filter>
154:           <linearGradient
155:             id="paint0_linear_199_94959"
156:             x1="167.875"
157:             y1="74.375"
158:             x2="88"
159:             y2="261"
160:             gradientUnits="userSpaceOnUse"
161:           >
162:             <stop stop-color="#0F172A" />
163:             <stop
164:               offset="1"
165:               stop-color="#0F172A"
166:               stop-opacity="0"
167:             />
168:           </linearGradient>
169:           <radialGradient
170:             id="paint1_radial_199_94959"
171:             cx="0"
172:             cy="0"
173:             r="1"
174:             gradientUnits="userSpaceOnUse"
175:             gradientTransform="translate(167.875 167.875) rotate(-90) scale(100.596 107.502)"
176:           >
177:             <stop stop-color="white" />
178:             <stop
179:               offset="1"
180:               stop-opacity="0"
181:             />
182:           </radialGradient>
183:           <linearGradient
184:             id="paint2_linear_199_94959"
185:             x1="247.183"
186:             y1="96.4978"
187:             x2="194.172"
188:             y2="229.234"
189:             gradientUnits="userSpaceOnUse"
190:           >
191:             <stop stop-color="white" />
192:             <stop
193:               offset="1"
194:               stop-opacity="0"
195:             />
196:           </linearGradient>
197:           <linearGradient
198:             id="paint3_linear_199_94959"
199:             x1="267.01"
200:             y1="78.6537"
201:             x2="200.746"
202:             y2="244.574"
203:             gradientUnits="userSpaceOnUse"
204:           >
205:             <stop stop-color="#00DC82" />
206:             <stop
207:               offset="1"
208:               stop-opacity="0"
209:             />
210:             <stop
211:               offset="1"
212:               stop-opacity="0"
213:             />
214:           </linearGradient>
215:           <linearGradient
216:             id="paint4_linear_199_94959"
217:             x1="292.405"
218:             y1="57.8159"
219:             x2="209.877"
220:             y2="264.463"
221:             gradientUnits="userSpaceOnUse"
222:           >
223:             <stop stop-color="#00DC82" />
224:             <stop
225:               offset="1"
226:               stop-opacity="0"
227:             />
228:           </linearGradient>
229:           <linearGradient
230:             id="paint5_linear_199_94959"
231:             x1="314.196"
232:             y1="40.2232"
233:             x2="217.813"
234:             y2="281.562"
235:             gradientUnits="userSpaceOnUse"
236:           >
237:             <stop stop-color="#00DC82" />
238:             <stop
239:               offset="1"
240:               stop-opacity="0"
241:             />
242:           </linearGradient>
243:           <linearGradient
244:             id="paint6_linear_199_94959"
245:             x1="202.444"
246:             y1="144.3"
247:             x2="191.546"
248:             y2="184.293"
249:             gradientUnits="userSpaceOnUse"
250:           >
251:             <stop stop-color="white" />
252:             <stop
253:               offset="1"
254:               stop-opacity="0"
255:             />
256:           </linearGradient>
257:           <linearGradient
258:             id="paint7_linear_199_94959"
259:             x1="202.444"
260:             y1="144.3"
261:             x2="191.546"
262:             y2="184.293"
263:             gradientUnits="userSpaceOnUse"
264:           >
265:             <stop stop-color="white" />
266:             <stop
267:               offset="1"
268:               stop-opacity="0"
269:             />
270:           </linearGradient>
271:         </defs>
272:       </svg>
273:     </div>
274:   </div>
275: </template>
```

## File: apps/website/components/svg/SvgStars.vue
```vue
 1: <template>
 2:   <svg
 3:     class="absolute"
 4:     xmlns="http://www.w3.org/2000/svg"
 5:     :width="size"
 6:     :height="size"
 7:     viewBox="0 0 24 24"
 8:   >
 9:     <path
10:       :fill="svgColor"
11:       d="m14.43 10l-1.47-4.84c-.29-.95-1.63-.95-1.91 0L9.57 10H5.12c-.97 0-1.37 1.25-.58 1.81l3.64 2.6l-1.43 4.61c-.29.93.79 1.68 1.56 1.09l3.69-2.8l3.69 2.81c.77.59 1.85-.16 1.56-1.09l-1.43-4.61l3.64-2.6c.79-.57.39-1.81-.58-1.81h-4.45z"
12:     />
13:   </svg>
14: </template>
15: 
16: <script setup lang="ts">
17: defineProps({
18:   size: {
19:     type: Number,
20:     required: true,
21:   },
22:   svgColor: {
23:     type: String,
24:     required: false,
25:     default: '#3d3d3d',
26:   },
27: })
28: </script>
```

## File: apps/website/components/team/TeamCard.vue
```vue
 1: <script setup lang="ts">
 2: import type { TeamMemberType } from '@/types/team'
 3: 
 4: defineProps({
 5:   member: {
 6:     type: Object as PropType<TeamMemberType>,
 7:     required: true,
 8:   },
 9: })
10: </script>
11: 
12: <template>
13:   <IBGlass
14:     class="flex w-full flex-col items-center justify-between rounded-md backdrop-blur-lg backdrop-filter transition-all duration-300 hover:-translate-y-1 hover:drop-shadow-2xl"
15:   >
16:     <div class="absolute h-full w-full animate-pulse">
17:       <SvgStars
18:         class="bottom-46 left-12"
19:         :size="15"
20:         svg-color="#303030"
21:       />
22:       <SvgStars
23:         class="bottom-22 left-36"
24:         :size="8"
25:         svg-color="#303030"
26:       />
27:       <SvgStars
28:         class="right-14 top-24"
29:         :size="12"
30:         svg-color="#303030"
31:       />
32:       <SvgStars
33:         class="bottom-12 left-44"
34:         :size="20"
35:         svg-color="#303030"
36:       />
37:       <SvgStars
38:         class="left-12 top-52"
39:         :size="14"
40:         svg-color="#303030"
41:       />
42:     </div>
43: 
44:     <div class="relative flex items-start justify-center px-10 pb-4">
45:       <div class="w-20 overflow-hidden rounded-full border md:w-24">
46:         <IBImage
47:           :img="{
48:             src: member.avatar,
49:             alt: member.name,
50:             loading: 'lazy',
51:             width: '100',
52:             height: '100',
53:           }"
54:         />
55:       </div>
56:     </div>
57:     <div class="flex flex-col items-center justify-center space-y-3">
58:       <p class="rounded-sm text-center text-base font-semibold leading-none">
59:         {{ member.name }}
60:       </p>
61:       <p class="text-center text-sm font-semibold leading-none">
62:         {{ member.position.title }}
63:       </p>
64:       <div class="z-10 space-y-3 pt-12">
65:         <AppSocialBlock
66:           :socials="member.socials"
67:           :has-title="false"
68:           class="relative flex items-center justify-center space-x-2"
69:         />
70:         <div>
71:           <NuxtLink :to="`/team/${member.name.toLowerCase().replaceAll(' ', '-')}`">
72:             <PrimeButton> View Profile </PrimeButton>
73:           </NuxtLink>
74:         </div>
75:       </div>
76:     </div>
77:   </IBGlass>
78: </template>
79: 
80: <style scoped></style>
```

## File: apps/website/components/AppBackButton.vue
```vue
 1: <script setup lang="ts"></script>
 2: 
 3: <template>
 4:   <div class="background flex items-center justify-center gap-2 rounded-md p-2">
 5:     <NuxtLink to="/">
 6:       <PrimeButton label="Go back"> Go Home </PrimeButton>
 7:     </NuxtLink>
 8:     <!-- <AppThemeToggle v-slot="{ toggle, isDark }">
 9:       <Icon
10:         :name="isDark ? 'heroicons:sun' : 'heroicons:moon'"
11:         class="cursor-pointer"
12:                       size="24px"
13: 
14:         @click="toggle"
15:       />
16:     </AppThemeToggle> -->
17:   </div>
18: </template>
19: 
20: <style scoped></style>
```

## File: apps/website/components/AppDetectBottom.vue
```vue
 1: <template>
 2:   <div ref="sentinel" />
 3: </template>
 4: 
 5: <script setup lang="ts">
 6: const sentinel = ref<HTMLElement | null>(null)
 7: 
 8: const emit = defineEmits(['bottom-trigger'])
 9: 
10: watchEffect((onCleanup) => {
11:   if (!sentinel.value) {
12:     // The sentinel element is not yet in the DOM.
13:     return
14:   }
15: 
16:   const options = {
17:     root: null,
18:     rootMargin: '0px',
19:     threshold: 0.5,
20:   }
21: 
22:   const observer = new IntersectionObserver((entries) => {
23:     entries.forEach((entry) => {
24:       if (entry.isIntersecting) {
25:         console.info('intersecting')
26:         emit('bottom-trigger')
27:       }
28:     })
29:   }, options)
30: 
31:   observer.observe(sentinel.value)
32: 
33:   // Remove Sentinel On UnMounted
34:   onCleanup(() => {
35:     if (observer && sentinel.value) {
36:       observer.unobserve(sentinel.value)
37:     }
38:   })
39: })
40: </script>
41: 
42: <style scoped></style>
```

## File: apps/website/components/AppFeatures.vue
```vue
 1: <script setup lang="ts">
 2: const organization = {
 3:   key: '1',
 4:   label: 'CEO',
 5:   type: 'person',
 6:   styleClass: 'ui-person',
 7:   expanded: true,
 8:   data: { name: 'Walter White', title: 'CEO', image: 'images/organization/walter.jpg' },
 9:   children: [
10:     {
11:       key: '2',
12:       label: 'CFO',
13:       type: 'person',
14:       styleClass: 'ui-person',
15:       expanded: true,
16:       data: { name: 'Saul Goodman', title: 'CFO', image: 'images/organization/saul.jpg' },
17:       children: [
18:         {
19:           key: '3',
20:           label: 'Tax',
21:           type: 'person',
22:           styleClass: 'ui-person',
23:           data: { name: 'Skyler White', title: 'Tax', image: 'images/organization/skyler.jpg' },
24:         },
25:         {
26:           key: '4',
27:           label: 'Legal',
28:           type: 'person',
29:           styleClass: 'ui-person',
30:           data: { name: 'Jesse Pinkman', title: 'Legal', image: 'images/organization/jesse.jpg' },
31:         },
32:       ],
33:     },
34:     {
35:       key: '5',
36:       label: 'COO',
37:       type: 'person',
38:       styleClass: 'ui-person',
39:       data: { name: 'Mike E.', title: 'COO', image: 'images/organization/mike.jpg' },
40:     },
41:     {
42:       key: '6',
43:       label: 'CTO',
44:       type: 'person',
45:       styleClass: 'ui-person',
46:       data: { name: 'Gus Fring', title: 'CTO', image: 'images/organization/gus.jpg' },
47:     },
48:   ],
49: }
50: 
51: const selection = ref([])
52: </script>
53: 
54: <template>
55:   <PrimeOrganizationChart
56:     v-model:selection-keys="selection"
57:     :value="organization"
58:   >
59:     <template #person="slotProps">
60:       <div class="flex flex-col items-center rounded-lg shadow-md">
61:         <span class="font-bold mb-2">{{ slotProps.node.data.name }}</span>
62:         <span>{{ slotProps.node.data.title }}</span>
63:       </div>
64:     </template>
65:     <template #default="slotProps">
66:       <span>{{ slotProps.node.label }}</span>
67:     </template>
68:   </PrimeOrganizationChart>
69: </template>
70: 
71: <style scoped></style>
```

## File: apps/website/components/AppSocialBlock.vue
```vue
 1: <template>
 2:   <div class="flex flex-col space-y-2">
 3:     <h2
 4:       v-if="hasTitle"
 5:       class="text-xl font-semibold leading-normal"
 6:     >
 7:       Follow us
 8:     </h2>
 9:     <div :class="`flex w-full gap-2 ${position}`">
10:       <a
11:         v-for="s in socials"
12:         :key="s.id"
13:         class="cursor-pointer"
14:         target="_blank"
15:         :href="s.url"
16:       >
17:         <Icon
18:           :name="`mdi:${s.platform}`"
19:           :size="`${iconSize}px`"
20:         />
21:       </a>
22:     </div>
23:   </div>
24: </template>
25: 
26: <script setup lang="ts">
27: import type { UserSocialType } from '#types/users'
28: 
29: defineProps({
30:   socials: {
31:     type: Array as PropType<UserSocialType[]>,
32:     required: true,
33:   },
34:   hasTitle: {
35:     type: Boolean,
36:     default: true,
37:   },
38:   position: {
39:     type: String,
40:     required: false,
41:     default: 'justify-center',
42:   },
43:   iconSize: {
44:     type: Number,
45:     default: 24,
46:   },
47: })
48: </script>
49: 
50: <style scoped></style>
```

## File: apps/website/components/AppStars.vue
```vue
 1: <template>
 2:   <div>
 3:     <div class="h-full">
 4:       <div class="flex h-full gap-2 leading-4">
 5:         <div class="group relative flex h-full items-center justify-center gap-1">
 6:           <Icon
 7:             v-for="i in 5"
 8:             :key="i"
 9:             :name="isStarFilled(i, rating / 2)"
10:             class="text-yellow-400"
11:             :size="`${starSize}px`"
12:           />
13:           <div
14:             class="absolute left-1/2 top-full mt-2 -translate-x-1/2 transform rounded p-2 text-xs opacity-0 shadow-lg transition duration-200 ease-in-out group-hover:opacity-100 group-focus:opacity-100"
15:           >
16:             {{ rating.toPrecision(2) }}
17:           </div>
18:         </div>
19:       </div>
20:     </div>
21:   </div>
22: </template>
23: 
24: <script setup lang="ts">
25: // todo:med:1 - turn this into a baseStar component, then use in places like rating etc
26: defineProps({
27:   rating: {
28:     type: Number as PropType<number>,
29:     required: true,
30:   },
31:   starSize: {
32:     type: Number as PropType<number>,
33:     default: 14,
34:   },
35: })
36: 
37: const isStarFilled = (index: number, rating: number) => {
38:   if (index <= Math.floor(rating)) {
39:     return 'material-symbols:star'
40:   } else if (index - 0.5 <= rating) {
41:     return 'material-symbols:star-half'
42:   } else {
43:     return 'material-symbols:star-outline'
44:   }
45: }
46: </script>
47: 
48: <style scoped>
49: .group:focus .group-focus\:opacity-100 {
50:   opacity: 100 !important;
51: }
52: </style>
```

## File: apps/website/components/AppSwiper.vue
```vue
 1: <script setup lang="ts" generic="T">
 2: import { ref, onMounted, watch, computed } from 'vue'
 3: import useEmblaCarousel from 'embla-carousel-vue'
 4: import AutoPlay from 'embla-carousel-autoplay'
 5: 
 6: const [emblaRef, emblaApi] = useEmblaCarousel(
 7:   {
 8:     loop: false,
 9:     align: 'start',
10:   },
11:   [AutoPlay({ delay: 7000 })],
12: )
13: 
14: const breakpoints = computed(() => ({
15:   '(min-width: 1280px)': { slidesPerView: 3, rows: 2 },
16:   '(min-width: 768px)': { slidesPerView: 2, rows: 1 },
17:   '(min-width: 640px)': { slidesPerView: 1, rows: 1 },
18: }))
19: 
20: const carouselLoaded = ref(false)
21: onMounted(async () => {
22:   await new Promise((resolve) => setTimeout(resolve, 1000))
23:   carouselLoaded.value = true
24: })
25: 
26: // watch(
27: //   [carouselLoaded],
28: //   () => {
29: //     console.log('reInit', breakpoints.value, emblaApi.value)
30: //     if (emblaApi.value) {
31: //       emblaApi.value.reInit(breakpoints.value)
32: //     }
33: //   },
34: //   { deep: true, immediate: true },
35: // )
36: 
37: defineProps<{
38:   items: T[]
39:   type: string
40: }>()
41: </script>
42: 
43: <template>
44:   <div
45:     v-if="items.length > 0"
46:     ref="emblaRef"
47:     class="embla max-w-full overflow-hidden rounded-xl"
48:   >
49:     <div class="embla__container grid gap-8 grid-cols-2 md:grid-cols-2 lg:grid-cols-3">
50:       <div
51:         v-for="(item, index) in items"
52:         :key="`${type}-${index}`"
53:         class="embla__slide"
54:       >
55:         <slot :item="item" />
56:       </div>
57:     </div>
58:   </div>
59: </template>
60: 
61: <style scoped>
62: 
63: .embla__container {
64:   display: flex;
65: }
66: .embla__slide {
67:   min-width: 340px;
68: }
69: 
70: /* @media (min-width: 768px) {
71:   .embla__slide {
72:     flex: 0 0 50%;
73:   }
74: }
75: 
76: @media (min-width: 1280px) {
77:   .embla__slide {
78:     flex: 0 0 33.333%;
79:   }
80: } */
81: </style>
```

## File: apps/website/components/AppThemeToggle.client.vue
```vue
 1: <script setup>
 2: import { usePrimeVue } from 'primevue/config'
 3: 
 4: const mode = useColorMode()
 5: 
 6: const PrimeVue = usePrimeVue()
 7: const isDark = computed(() => true)
 8: // const isDark = computed(() => mode.preference === 'dark')
 9: 
10: const toggle = () => {
11:   mode.preference = isDark.value = true
12: }
13: 
14: const darkTheme = 'aura-dark-teal'
15: const lightTheme = 'aura-light-teal'
16: 
17: watch(
18:   isDark,
19:   (isDarkNow) => {
20:     if (isDarkNow) {
21:       console.log('going dark')
22:       PrimeVue.changeTheme(lightTheme, darkTheme, 'theme-link', () => {})
23:     } else {
24:       // console.log('going light')
25:       // PrimeVue.changeTheme(darkTheme, lightTheme, 'theme-link', () => {})
26:     }
27:   },
28:   { immediate: true },
29: )
30: 
31: onMounted(() => {
32:   // const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches
33:   // mode.preference = prefersDarkMode ? 'dark' : 'light'
34: })
35: 
36: const context = reactive({
37:   isDark,
38:   toggle,
39: })
40: </script>
41: 
42: <template>
43:   <div class="flex">
44:     <!-- <AppThemeToggle v-slot="{ toggle, isDark }">
45:       <Icon
46:       :name="isDark ? 'heroicons:sun' : 'heroicons:moon'"
47:       class="cursor-pointer"
48:       size="24px"
49:       @click="toggle"
50:       />
51:     </AppThemeToggle>
52:     -->
53:     <slot v-bind="context" />
54:   </div>
55: </template>
```

## File: apps/website/components/AppTipTap.vue
```vue
  1: <template>
  2:   <div>
  3:     <div v-if="editor">
  4:       <PrimeButton
  5:         :disabled="!editor.can().chain().focus().toggleBold().run()"
  6:         :class="{ 'is-active': editor.isActive('bold') }"
  7:         @click="editor.chain().focus().toggleBold().run()"
  8:       >
  9:         bold
 10:       </PrimeButton>
 11:       <PrimeButton
 12:         :disabled="!editor.can().chain().focus().toggleItalic().run()"
 13:         :class="{ 'is-active': editor.isActive('italic') }"
 14:         @click="editor.chain().focus().toggleItalic().run()"
 15:       >
 16:         italic
 17:       </PrimeButton>
 18:       <PrimeButton
 19:         :disabled="!editor.can().chain().focus().toggleStrike().run()"
 20:         :class="{ 'is-active': editor.isActive('strike') }"
 21:         @click="editor.chain().focus().toggleStrike().run()"
 22:       >
 23:         strike
 24:       </PrimeButton>
 25:       <PrimeButton
 26:         :disabled="!editor.can().chain().focus().toggleCode().run()"
 27:         :class="{ 'is-active': editor.isActive('code') }"
 28:         @click="editor.chain().focus().toggleCode().run()"
 29:       >
 30:         code
 31:       </PrimeButton>
 32:       <PrimeButton @click="editor.chain().focus().unsetAllMarks().run()"> clear marks </PrimeButton>
 33:       <PrimeButton @click="editor.chain().focus().clearNodes().run()"> clear nodes </PrimeButton>
 34:       <PrimeButton
 35:         :class="{ 'is-active': editor.isActive('paragraph') }"
 36:         @click="editor.chain().focus().setParagraph().run()"
 37:       >
 38:         paragraph
 39:       </PrimeButton>
 40:       <PrimeButton
 41:         :class="{ 'is-active': editor.isActive('heading', { level: 1 }) }"
 42:         @click="editor.chain().focus().toggleHeading({ level: 1 }).run()"
 43:       >
 44:         h1
 45:       </PrimeButton>
 46:       <PrimeButton
 47:         :class="{ 'is-active': editor.isActive('heading', { level: 2 }) }"
 48:         @click="editor.chain().focus().toggleHeading({ level: 2 }).run()"
 49:       >
 50:         h2
 51:       </PrimeButton>
 52:       <PrimeButton
 53:         :class="{ 'is-active': editor.isActive('heading', { level: 3 }) }"
 54:         @click="editor.chain().focus().toggleHeading({ level: 3 }).run()"
 55:       >
 56:         h3
 57:       </PrimeButton>
 58:       <PrimeButton
 59:         :class="{ 'is-active': editor.isActive('heading', { level: 4 }) }"
 60:         @click="editor.chain().focus().toggleHeading({ level: 4 }).run()"
 61:       >
 62:         h4
 63:       </PrimeButton>
 64:       <PrimeButton
 65:         :class="{ 'is-active': editor.isActive('heading', { level: 5 }) }"
 66:         @click="editor.chain().focus().toggleHeading({ level: 5 }).run()"
 67:       >
 68:         h5
 69:       </PrimeButton>
 70:       <PrimeButton
 71:         :class="{ 'is-active': editor.isActive('heading', { level: 6 }) }"
 72:         @click="editor.chain().focus().toggleHeading({ level: 6 }).run()"
 73:       >
 74:         h6
 75:       </PrimeButton>
 76:       <PrimeButton
 77:         :class="{ 'is-active': editor.isActive('bulletList') }"
 78:         @click="editor.chain().focus().toggleBulletList().run()"
 79:       >
 80:         bullet list
 81:       </PrimeButton>
 82:       <PrimeButton
 83:         :class="{ 'is-active': editor.isActive('orderedList') }"
 84:         @click="editor.chain().focus().toggleOrderedList().run()"
 85:       >
 86:         ordered list
 87:       </PrimeButton>
 88:       <PrimeButton
 89:         :class="{ 'is-active': editor.isActive('codeBlock') }"
 90:         @click="editor.chain().focus().toggleCodeBlock().run()"
 91:       >
 92:         code block
 93:       </PrimeButton>
 94:       <PrimeButton
 95:         :class="{ 'is-active': editor.isActive('blockquote') }"
 96:         @click="editor.chain().focus().toggleBlockquote().run()"
 97:       >
 98:         blockquote
 99:       </PrimeButton>
100:       <PrimeButton @click="editor.chain().focus().setHorizontalRule().run()">
101:         horizontal rule
102:       </PrimeButton>
103:       <PrimeButton @click="editor.chain().focus().setHardBreak().run()"> hard break </PrimeButton>
104:       <PrimeButton
105:         :disabled="!editor.can().chain().focus().undo().run()"
106:         @click="editor.chain().focus().undo().run()"
107:       >
108:         undo
109:       </PrimeButton>
110:       <PrimeButton
111:         :disabled="!editor.can().chain().focus().redo().run()"
112:         @click="editor.chain().focus().redo().run()"
113:       >
114:         redo
115:       </PrimeButton>
116:     </div>
117:     <TiptapEditorContent :editor="editor" />
118:   </div>
119: </template>
120: 
121: <script setup>
122: const editor = useEditor({
123:   content: '<p>I\'m running Tiptap with Vue.js. 🎉</p>',
124:   extensions: [TiptapStarterKit],
125: })
126: 
127: onBeforeUnmount(() => {
128:   unref(editor).destroy()
129: })
130: </script>
```

## File: apps/website/components/AppVideoModal.vue
```vue
 1: <template>
 2:   <PrimeCard
 3:     :pt="{
 4:       body: 'py-2 px-1',
 5:     }"
 6:     :pt-options="{ mergeProps: true, mergeSections: true }"
 7:   >
 8:     <template #content>
 9:       <PrimeButton
10:         class="relative flex items-center justify-center"
11:         link
12:         @click="handleClicked()"
13:       >
14:         <IBImage
15:           :img="{
16:             src: video.thumbnail,
17:             alt: video.alt,
18:             height: '480px',
19:             width: '840px',
20:             sizes: '100vw lg:50vw',
21:           }"
22:         />
23:         <Icon
24:           name="mdi:play"
25:           class="absolute"
26:           size="72px"
27:         />
28:       </PrimeButton>
29: 
30:       <PrimeDialog
31:         v-model:visible="isOpen"
32:         modal
33:         :style="{ width: '60rem' }"
34:         :breakpoints="{ '1199px': '75vw', '575px': '90vw' }"
35:       >
36:         <template #header>
37:           <h2 class="text-2xl font-semibold"> Watch the video </h2>
38:         </template>
39:         <div class="relative flex aspect-[16/9] w-full max-w-[1140px]">
40:           <iframe
41:             :src="video.url"
42:             title="YouTube video player"
43:             frameborder="0"
44:             class="aspect-video w-full"
45:             allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
46:             allowfullscreen
47:           />
48:         </div>
49:       </PrimeDialog>
50:     </template>
51:   </PrimeCard>
52: </template>
53: 
54: <script setup lang="ts">
55: const isOpen = ref(false)
56: 
57: const handleClicked = () => {
58:   isOpen.value = true
59: }
60: 
61: type VideoType = {
62:   url: string
63:   thumbnail: string
64:   alt: string
65: }
66: 
67: defineProps({
68:   video: {
69:     type: Object as PropType<VideoType>,
70:     default: () => ({
71:       url: '',
72:       thumbnail: '',
73:       alt: '',
74:     }),
75:   },
76: })
77: 
78: // todo:med:easy - make the modal a base component
79: </script>
80: 
81: <style></style>
```

## File: apps/website/components/LoginButton.vue
```vue
 1: <template>
 2:   <button @click="initiateLogin"> Login </button>
 3: </template>
 4: 
 5: <script setup>
 6: const user = ref(null)
 7: 
 8: const initiateLogin = () => {
 9:   const authWindow = window.open(
10:     'https://auth.domain.com/auth-handler',
11:     'Auth',
12:     'width=600,height=600',
13:   )
14: 
15:   window.addEventListener(
16:     'message',
17:     (event) => {
18:       if (event.origin !== 'https://auth.domain.com') return
19: 
20:       if (event.data.type === 'AUTH_RESULT') {
21:         if (event.data.success) {
22:           user.value = event.data.user
23:           // Handle successful login
24:         } else {
25:           // Handle login error
26:         }
27:       }
28:     },
29:     false,
30:   )
31: }
32: </script>
```

## File: apps/website/components/NavTop.vue
```vue
  1: <script setup lang="ts">
  2: const websiteLinks = [
  3:   {
  4:     key: 'about-us',
  5:     label: 'About Us',
  6:     icon: 'material-symbols:info',
  7:     visible: true,
  8:     disabled: false,
  9:     items: [
 10:       {
 11:         key: 'about',
 12:         label: 'About',
 13:         icon: 'material-symbols:info',
 14:         url: '/about',
 15:         visible: true,
 16:         disabled: false,
 17:       },
 18:       {
 19:         key: 'team',
 20:         label: 'Team',
 21:         icon: 'material-symbols:emoji-people',
 22:         url: '/team',
 23:         visible: true,
 24:         disabled: false,
 25:       },
 26:       {
 27:         key: 'contact',
 28:         label: 'Contact',
 29:         icon: 'material-symbols:call',
 30:         url: '/contact',
 31:         visible: true,
 32:         disabled: false,
 33:       },
 34:     ],
 35:   },
 36:   {
 37:     key: 'projects',
 38:     label: 'Projects',
 39:     icon: 'material-symbols:work',
 40:     visible: true,
 41:     disabled: false,
 42:     items: [
 43:       {
 44:         key: 'dark-sky-conference-2023',
 45:         label: 'Conference',
 46:         icon: 'material-symbols:mic-rounded',
 47:         url: '/projects/dark-sky-conference-2023',
 48:         visible: true,
 49:         disabled: false,
 50:       },
 51:     ],
 52:   },
 53:   {
 54:     key: 'blog',
 55:     label: 'Blog',
 56:     icon: 'material-symbols:menu-book-outline',
 57:     visible: true,
 58:     disabled: false,
 59:     items: [
 60:       {
 61:         key: 'blog-home',
 62:         label: 'All',
 63:         icon: 'material-symbols:menu-book-outline',
 64:         url: '/blog/category/all/page/1',
 65:         visible: true,
 66:         disabled: false,
 67:       },
 68:       {
 69:         key: 'blog-dark-sky-conservation',
 70:         label: 'Conservation',
 71:         icon: 'material-symbols:menu-book-outline',
 72:         url: '/blog/category/dark-sky-conservation/page/1',
 73:         visible: true,
 74:         disabled: false,
 75:       },
 76:       {
 77:         key: 'blog-people-of-space',
 78:         label: 'People',
 79:         icon: 'material-symbols:menu-book-outline',
 80:         url: '/blog/category/people-of-space/page/1',
 81:         visible: true,
 82:         disabled: false,
 83:       },
 84:       {
 85:         key: 'blog-space-exploration',
 86:         label: 'Exploration',
 87:         icon: 'material-symbols:menu-book-outline',
 88:         url: '/blog/category/space-exploration/page/1',
 89:         visible: true,
 90:         disabled: false,
 91:       },
 92:       {
 93:         key: 'blog-sustainable-development',
 94:         label: 'Sustainability',
 95:         icon: 'material-symbols:menu-book-outline',
 96:         url: '/blog/category/sustainable-development/page/1',
 97:         visible: true,
 98:         disabled: false,
 99:       },
100:     ],
101:   },
102: ]
103: 
104: defineProps({
105:   isCompact: {
106:     type: Boolean,
107:     default: false,
108:   },
109:   compactOnScroll: {
110:     type: Boolean,
111:     default: false,
112:   },
113: })
114: 
115: const { y } = useWindowScroll()
116: const lastScrollY = ref(y.value)
117: const navbarClasses = computed(() => {
118:   if (navPosition.value === 'fixed') {
119:     return ''
120:   } else {
121:     return navPosition.value === 'hidden' ? 'animate-bounce-out' : 'animate-bounce-in'
122:   }
123: })
124: 
125: const navPosition = ref('fixed')
126: 
127: watch(
128:   y,
129:   (newY) => {
130:     if (window?.innerWidth < 1024) {
131:       navPosition.value = 'fixed'
132:     } else if (newY > lastScrollY.value) {
133:       navPosition.value = 'hidden'
134:     } else if (newY < lastScrollY.value) {
135:       navPosition.value = 'visible'
136:     }
137:     lastScrollY.value = newY
138:   },
139:   { immediate: true },
140: )
141: </script>
142: 
143: <template>
144:   <div
145:     ref="navbar"
146:     class="flex min-w-full w-full fixed top-0 left-0 right-0 z-50"
147:     :class="navbarClasses"
148:   >
149:     <!-- Glass Container -->
150:     <LandingGlass
151:       hover-effect="glow"
152:       glow-color="purple"
153:       gradient="mixed"
154:       intensity="low"
155:       interactive
156:       isolate-content
157:       class="!w-full"
158:       :padded="false"
159:       :rounded="false"
160:       :overflow="true"
161:     >
162:       <PrimeMenubar
163:         :model="websiteLinks"
164:         class="w-full text-white rounded-none lg:rounded-b-xl bg-transparent border-none relative z-10"
165:         :pt="{
166:           root: {
167:             class: 'flex items-center justify-between px-4 py-2',
168:           },
169:           submenu: {
170:             class:
171:               '!bg-primary-950/95 backdrop-blur-xl md:absolute md:flex-col flex !text-sm !font-bold !text-white border border-primary-500/50 rounded-md',
172:           },
173:         }"
174:       >
175:         <template #start>
176:           <div class="hidden gap-4 rounded-md p-1 lg:flex">
177:             <div
178:               class="relative flex h-[36px] w-[36px] items-center justify-center rounded-md border bg-white p-1 md:h-[44px] md:w-[44px]"
179:             >
180:               <IBImage
181:                 :img="{
182:                   src: '/astronera-logo.jpg',
183:                 }"
184:                 class="h-full w-full opacity-90"
185:               />
186:             </div>
187:             <NuxtLink
188:               to="/"
189:               class="flex min-h-full items-center justify-center"
190:             >
191:               <h4
192:                 class="mt-[2px] flex cursor-pointer flex-col items-start justify-start pr-2 text-sm font-bold uppercase leading-none tracking-normal"
193:               >
194:                 Astron
195:                 <strong class="font-extrabold text-primary-400"> Era </strong>
196:               </h4>
197:             </NuxtLink>
198:           </div>
199:         </template>
200:         <template #item="{ item, hasSubmenu, root }">
201:           <div class="px-4 py-2">
202:             <NuxtLink
203:               :to="item.url"
204:               class="cursor-pointer text-white text-nowrap"
205:             >
206:               <p class="flex items-center gap-1">
207:                 {{ item.label }}
208:                 <Icon
209:                   v-if="hasSubmenu"
210:                   :name="root ? 'mdi:chevron-down' : 'mdi:chevron-right'"
211:                 />
212:               </p>
213:             </NuxtLink>
214:           </div>
215:         </template>
216:         <template #end>
217:           <div class="flex flex-nowrap items-center justify-center gap-4 lg:pr-2">
218:             <NuxtLink
219:               to="https://github.com/incubrain/astrotribe"
220:               target="_blank"
221:               class="hidden items-center justify-center lg:flex"
222:             >
223:               <Icon
224:                 name="mdi:github"
225:                 class="flex cursor-pointer items-center justify-center"
226:                 size="24px"
227:               />
228:             </NuxtLink>
229:             <div class="flex h-auto min-w-24 items-center justify-center gap-2 lg:gap-4">
230:               <div class="space-x-2 lg:space-x-4">
231:                 <NuxtLink
232:                   v-ripple
233:                   :to="$config.public.aeAuthUrl"
234:                 >
235:                   <PrimeButton
236:                     severity="contrast"
237:                     outlined
238:                   >
239:                     login
240:                   </PrimeButton>
241:                 </NuxtLink>
242: 
243:                 <NuxtLink
244:                   v-ripple
245:                   :to="`${$config.public.aeAuthUrl}/register`"
246:                 >
247:                   <PrimeButton> Join AstronEra </PrimeButton>
248:                 </NuxtLink>
249:               </div>
250:             </div>
251:           </div>
252:         </template>
253:       </PrimeMenubar>
254:     </LandingGlass>
255:   </div>
256: </template>
257: 
258: <style scoped>
259: canvas {
260:   width: 100vw;
261:   height: 100vh;
262:   display: block;
263: }
264: 
265: .navbar {
266:   display: flex !important;
267:   position: static !important;
268:   background-color: red !important; /* Just to make it obvious */
269:   z-index: 9999 !important;
270: }
271: 
272: @keyframes bounce-in {
273:   0% {
274:     transform: translateY(-100%);
275:   }
276:   100% {
277:     transform: translateY(0);
278:   }
279: }
280: 
281: @keyframes bounce-out {
282:   0% {
283:     transform: translateY(0);
284:   }
285:   100% {
286:     transform: translateY(-100%);
287:   }
288: }
289: 
290: .animate-bounce-in {
291:   animation: bounce-in 0.5s ease-out forwards;
292: }
293: 
294: .animate-bounce-out {
295:   animation: bounce-out 1s ease-in forwards;
296: }
297: </style>
```

## File: apps/website/components/Pagination.vue
```vue
 1: <template>
 2:   <nav class="pagination">
 3:     <ul class="pagination-list">
 4:       <li v-if="currentPage > 1">
 5:         <NuxtLink :to="`${baseUrl}/page/${currentPage - 1}`">Previous</NuxtLink>
 6:       </li>
 7:       <li
 8:         v-for="page in pages"
 9:         :key="page"
10:       >
11:         <NuxtLink
12:           :to="`${baseUrl}/page/${page}`"
13:           :class="{ 'is-current': page === currentPage }"
14:         >
15:           {{ page }}
16:         </NuxtLink>
17:       </li>
18:       <li v-if="currentPage < totalPages">
19:         <NuxtLink :to="`${baseUrl}/page/${currentPage + 1}`">Next</NuxtLink>
20:       </li>
21:     </ul>
22:   </nav>
23: </template>
24: 
25: <script setup lang="ts">
26: const p = defineProps<{
27:   currentPage: number
28:   totalPages: number
29:   baseUrl: string
30: }>()
31: 
32: const pages = computed(() => {
33:   const pagesArray = []
34:   for (let i = 1; i <= p.totalPages; i++) {
35:     pagesArray.push(i)
36:   }
37:   return pagesArray
38: })
39: </script>
40: 
41: <style scoped>
42: .pagination {
43:   display: flex;
44:   justify-content: center;
45:   margin-top: 20px;
46: }
47: 
48: .pagination-list {
49:   display: flex;
50:   list-style: none;
51: }
52: 
53: .pagination-list li {
54:   margin: 0 5px;
55: }
56: 
57: .pagination-list .is-current {
58:   font-weight: bold;
59: }
60: </style>
```

## File: apps/website/composables/useAnimation.ts
```typescript
  1: // composables/useAnimation.ts
  2: import { onMounted, onUnmounted } from 'vue'
  3: import { gsap } from 'gsap'
  4: import { ScrollTrigger } from 'gsap/ScrollTrigger'
  5: 
  6: gsap.registerPlugin(ScrollTrigger)
  7: 
  8: export function useAnimation() {
  9:   const fadeInUp = (elements: string, options = {}) => {
 10:     gsap.from(elements, {
 11:       opacity: 0,
 12:       y: 50,
 13:       duration: 0.8,
 14:       stagger: 0.2,
 15:       scrollTrigger: {
 16:         trigger: elements,
 17:         start: 'top bottom-=100px',
 18:         toggleActions: 'play none none reverse',
 19:       },
 20:       ...options,
 21:     })
 22:   }
 23: 
 24:   const scaleOnHover = (elements: string) => {
 25:     gsap.utils.toArray(elements).forEach((el: Element) => {
 26:       gsap
 27:         .to(el, {
 28:           scale: 1.1,
 29:           duration: 0.3,
 30:           paused: true,
 31:         })
 32:         .reverse()
 33: 
 34:       el.addEventListener('mouseenter', () => gsap.to(el, { scale: 1.1, duration: 0.3 }))
 35:       el.addEventListener('mouseleave', () => gsap.to(el, { scale: 1, duration: 0.3 }))
 36:     })
 37:   }
 38: 
 39:   const carouselFadeIn = (elements: string, options = {}) => {
 40:     gsap.from(elements, {
 41:       opacity: 0,
 42:       y: 20,
 43:       duration: 0.5,
 44:       stagger: 0.1,
 45:       ease: 'power2.out',
 46:       scrollTrigger: {
 47:         trigger: elements,
 48:         start: 'top bottom-=100px',
 49:       },
 50:       ...options,
 51:     })
 52:   }
 53: 
 54:   const staggeredFadeIn = (elements: string, stagger = 0.1, options = {}) => {
 55:     gsap.from(elements, {
 56:       opacity: 0,
 57:       duration: 0.5,
 58:       stagger: stagger,
 59:       ease: 'power2.out',
 60:       ...options,
 61:     })
 62:   }
 63: 
 64:   const parallax = (element: string, options = {}) => {
 65:     gsap.to(element, {
 66:       y: '30%',
 67:       ease: 'none',
 68:       scrollTrigger: {
 69:         trigger: element,
 70:         scrub: true,
 71:       },
 72:       ...options,
 73:     })
 74:   }
 75: 
 76:   // New animations
 77:   const fadeInScale = (elements: string, options = {}) => {
 78:     gsap.from(elements, {
 79:       opacity: 0,
 80:       scale: 0.8,
 81:       duration: 0.5,
 82:       ease: 'back.out(1.7)',
 83:       ...options,
 84:     })
 85:   }
 86: 
 87:   const typewriterEffect = (element: string, text: string, options = {}) => {
 88:     gsap.to(element, {
 89:       duration: 2,
 90:       text: text,
 91:       ease: 'none',
 92:       ...options,
 93:     })
 94:   }
 95: 
 96:   const flipCard = (frontElement: string, backElement: string, duration = 0.6) => {
 97:     const tl = gsap.timeline()
 98:     tl.to(frontElement, { duration: duration / 2, rotationY: 90 })
 99:       .set(frontElement, { visibility: 'hidden' })
100:       .set(backElement, { rotationY: -90, visibility: 'visible' })
101:       .to(backElement, { duration: duration / 2, rotationY: 0 })
102:     return tl
103:   }
104: 
105:   const shakeAnimation = (element: string, options = {}) => {
106:     gsap.to(element, {
107:       x: 5,
108:       duration: 0.1,
109:       repeat: 5,
110:       yoyo: true,
111:       ease: 'power1.inOut',
112:       ...options,
113:     })
114:   }
115: 
116:   const bounceIn = (elements: string, options = {}) => {
117:     gsap.from(elements, {
118:       scale: 0,
119:       duration: 0.8,
120:       ease: 'elastic.out(1, 0.5)',
121:       ...options,
122:     })
123:   }
124: 
125:   const rotateIn = (elements: string, options = {}) => {
126:     gsap.from(elements, {
127:       rotation: 360,
128:       opacity: 0,
129:       duration: 1,
130:       ease: 'power2.out',
131:       ...options,
132:     })
133:   }
134: 
135:   const slideInFromSide = (elements: string, fromRight = true, options = {}) => {
136:     gsap.from(elements, {
137:       x: fromRight ? '100%' : '-100%',
138:       opacity: 0,
139:       duration: 0.8,
140:       ease: 'power2.out',
141:       ...options,
142:     })
143:   }
144: 
145:   const textReveal = (element: string, options = {}) => {
146:     gsap.from(element, {
147:       clipPath: 'inset(0 100% 0 0)',
148:       duration: 1,
149:       ease: 'power4.inOut',
150:       ...options,
151:     })
152:   }
153: 
154:   const pulseAnimation = (element: string, options = {}) => {
155:     gsap.to(element, {
156:       scale: 1.05,
157:       repeat: -1,
158:       yoyo: true,
159:       duration: 0.8,
160:       ease: 'power1.inOut',
161:       ...options,
162:     })
163:   }
164: 
165:   const growWidth = (elements: string, options = {}) => {
166:     return gsap.from(elements, {
167:       width: 0,
168:       duration: 0.5,
169:       stagger: 0.2,
170:       ...options,
171:     })
172:   }
173: 
174:   const fadeInLeft = (elements: string, options = {}) => {
175:     return gsap.from(elements, {
176:       x: -50,
177:       opacity: 0,
178:       duration: 0.8,
179:       scrollTrigger: {
180:         trigger: elements,
181:         start: 'top bottom-=100px',
182:         toggleActions: 'play none none reverse',
183:       },
184:       ...options,
185:     })
186:   }
187: 
188:   const fadeInRight = (elements: string, options = {}) => {
189:     return gsap.from(elements, {
190:       x: 50,
191:       opacity: 0,
192:       duration: 0.8,
193:       scrollTrigger: {
194:         trigger: elements,
195:         start: 'top bottom-=100px',
196:         toggleActions: 'play none none reverse',
197:       },
198:       ...options,
199:     })
200:   }
201: 
202:   const scaleIn = (elements: string, options = {}) => {
203:     return gsap.from(elements, {
204:       scale: 0.5,
205:       opacity: 0,
206:       duration: 0.5,
207:       stagger: 0.1,
208:       scrollTrigger: {
209:         trigger: elements,
210:         start: 'top bottom-=100px',
211:         toggleActions: 'play none none reverse',
212:       },
213:       ...options,
214:     })
215:   }
216: 
217:   onUnmounted(() => {
218:     ScrollTrigger.getAll().forEach((trigger) => trigger.kill())
219:   })
220: 
221:   return {
222:     fadeInUp,
223:     carouselFadeIn,
224:     staggeredFadeIn,
225:     parallax,
226:     fadeInScale,
227:     typewriterEffect,
228:     flipCard,
229:     shakeAnimation,
230:     bounceIn,
231:     rotateIn,
232:     slideInFromSide,
233:     textReveal,
234:     pulseAnimation,
235:     scaleOnHover,
236:     growWidth,
237:     fadeInLeft,
238:     fadeInRight,
239:     scaleIn,
240:   }
241: }
```

## File: apps/website/composables/useMarkdownParser.ts
```typescript
 1: // composables/useMarkdownParser.ts
 2: import { createMarkdownParser, rehypeHighlight, createShikiHighlighter } from '@nuxtjs/mdc/runtime'
 3: import MaterialThemePalenight from 'shiki/themes/material-theme-palenight.mjs'
 4: import HtmlLang from 'shiki/langs/html.mjs'
 5: import MdcLang from 'shiki/langs/mdc.mjs'
 6: import TsLang from 'shiki/langs/typescript.mjs'
 7: import VueLang from 'shiki/langs/vue.mjs'
 8: import ScssLang from 'shiki/langs/scss.mjs'
 9: import YamlLang from 'shiki/langs/yaml.mjs'
10: 
11: export default function useMarkdownParser() {
12:   let parser: Awaited<ReturnType<typeof createMarkdownParser>>
13: 
14:   const parse = async (markdown: string) => {
15:     if (!parser) {
16:       parser = await createMarkdownParser({
17:         rehype: {
18:           plugins: {
19:             highlight: {
20:               instance: rehypeHighlight,
21:               options: {
22:                 theme: 'material-theme-palenight',
23:                 highlighter: createShikiHighlighter({
24:                   bundledThemes: {
25:                     'material-theme-palenight': MaterialThemePalenight,
26:                   },
27:                   bundledLangs: {
28:                     html: HtmlLang,
29:                     mdc: MdcLang,
30:                     vue: VueLang,
31:                     yml: YamlLang,
32:                     scss: ScssLang,
33:                     ts: TsLang,
34:                     typescript: TsLang,
35:                   },
36:                 }),
37:               },
38:             },
39:           },
40:         },
41:       })
42:     }
43:     return parser(markdown)
44:   }
45: 
46:   return parse
47: }
```

## File: apps/website/composables/useStrapi.ts
```typescript
  1: import { type FetchOptions, $fetch } from 'ofetch'
  2: import qs from 'qs'
  3: import { useRuntimeConfig } from '#imports'
  4: 
  5: interface Strapi5ResponseSingle<T> {
  6:   data: T
  7:   meta?: Record<string, any>
  8: }
  9: 
 10: interface Strapi5ResponseMany<T> {
 11:   data: T[]
 12:   meta?: {
 13:     pagination?: {
 14:       page: number
 15:       pageSize: number
 16:       pageCount: number
 17:       total: number
 18:     }
 19:     [key: string]: any
 20:   }
 21: }
 22: 
 23: interface Strapi5RequestParams {
 24:   filters?: Record<string, any>
 25:   populate?: any
 26:   sort?: any
 27:   pagination?: any
 28:   fields?: string[]
 29:   [key: string]: any
 30: }
 31: 
 32: interface StrapiV5Client {
 33:   find<T = any>(
 34:     contentType: string,
 35:     params?: Strapi5RequestParams,
 36:     fetchOptions?: FetchOptions,
 37:   ): Promise<Strapi5ResponseMany<T>>
 38:   findOne<T = any>(
 39:     contentType: string,
 40:     documentId?: string | Strapi5RequestParams,
 41:     params?: Strapi5RequestParams,
 42:     fetchOptions?: FetchOptions,
 43:   ): Promise<Strapi5ResponseSingle<T>>
 44:   create<T = any>(
 45:     contentType: string,
 46:     data: Partial<T>,
 47:     params?: Strapi5RequestParams,
 48:     fetchOptions?: FetchOptions,
 49:   ): Promise<Strapi5ResponseSingle<T>>
 50:   update<T = any>(
 51:     contentType: string,
 52:     documentId: string | Partial<T>,
 53:     data?: Partial<T>,
 54:     params?: Strapi5RequestParams,
 55:     fetchOptions?: FetchOptions,
 56:   ): Promise<Strapi5ResponseSingle<T>>
 57:   delete<T = any>(
 58:     contentType: string,
 59:     documentId?: string,
 60:     fetchOptions?: FetchOptions,
 61:   ): Promise<Strapi5ResponseSingle<T>>
 62: }
 63: 
 64: export const useStrapi = (): StrapiV5Client => {
 65:   const config = useRuntimeConfig()
 66:   const baseUrl = config.public.strapiUrl.endsWith('/')
 67:     ? config.public.strapiUrl.slice(0, -1)
 68:     : config.public.strapiUrl
 69:   // Create a custom fetch client with base URL
 70:   const client = (url: string, params?: Record<string, any>, options?: FetchOptions) => {
 71:     let queryString = ''
 72:     if (params) {
 73:       queryString = qs.stringify(params, { encodeValuesOnly: true })
 74:     }
 75:     return $fetch(`${url}${queryString ? `?${queryString}` : ''}`, {
 76:       baseURL: `${baseUrl}/api`,
 77:       ...options,
 78:     })
 79:   }
 80: 
 81:   const find = <T = any>(
 82:     contentType: string,
 83:     params?: Strapi5RequestParams,
 84:     fetchOptions?: FetchOptions,
 85:   ): Promise<Strapi5ResponseMany<T>> => {
 86:     return client(`/${contentType}`, params, { method: 'GET', ...fetchOptions })
 87:   }
 88: 
 89:   const findOne = <T = any>(
 90:     contentType: string,
 91:     documentId?: string | Strapi5RequestParams,
 92:     params?: Strapi5RequestParams,
 93:     fetchOptions?: FetchOptions,
 94:   ): Promise<Strapi5ResponseSingle<T>> => {
 95:     if (typeof documentId === 'object') {
 96:       params = documentId
 97:       documentId = undefined
 98:     }
 99: 
100:     const path = [contentType, documentId].filter(Boolean).join('/')
101: 
102:     return client(`/${path}`, { method: 'GET', params, ...fetchOptions })
103:   }
104: 
105:   const create = <T = any>(
106:     contentType: string,
107:     data: Partial<T>,
108:     params?: Strapi5RequestParams,
109:     fetchOptions?: FetchOptions,
110:   ): Promise<Strapi5ResponseSingle<T>> => {
111:     return client(`/${contentType}`, { method: 'POST', body: { data }, params, ...fetchOptions })
112:   }
113: 
114:   const update = <T = any>(
115:     contentType: string,
116:     documentId: string | Partial<T>,
117:     data?: Partial<T>,
118:     params?: Strapi5RequestParams,
119:     fetchOptions?: FetchOptions,
120:   ): Promise<Strapi5ResponseSingle<T>> => {
121:     if (typeof documentId === 'object') {
122:       data = documentId
123:       documentId = undefined
124:     }
125: 
126:     const path = [contentType, documentId].filter(Boolean).join('/')
127: 
128:     return client(`/${path}`, { method: 'PUT', body: { data }, params, ...fetchOptions })
129:   }
130: 
131:   const _delete = <T = any>(
132:     contentType: string,
133:     documentId?: string,
134:     fetchOptions?: FetchOptions,
135:   ): Promise<Strapi5ResponseSingle<T>> => {
136:     const path = [contentType, documentId].filter(Boolean).join('/')
137: 
138:     return client(`/${path}`, { method: 'DELETE', ...fetchOptions })
139:   }
140: 
141:   return {
142:     find,
143:     findOne,
144:     create,
145:     update,
146:     delete: _delete,
147:   }
148: }
```

## File: apps/website/content/blog/dark-sky-conservation/1.why-dark-skies-matter.md
```markdown
  1: ---
  2: id: 58a1d564-93df-4b67-8fc8-64b9a69c6b76
  3: title: Dim the Lights, Ignite the Wonder - Why Dark Skies Matter
  4: description:
  5:   Discover the importance of dark sky conservation and its impact on ecosystems, human health, and
  6:   our connection to the cosmos. Join the fight against light pollution and learn how you can help
  7:   preserve the magic of the night sky.
  8: category: dark-sky-conservation
  9: authorIds:
 10:   - 2
 11:   - 3
 12: tags:
 13:   - dark skies
 14:   - light pollution
 15:   - conservation
 16:   - astronomy
 17: keywords:
 18:   primary: Dark Sky Conservation
 19:   secondary:
 20:     - Light Pollution
 21:     - International Dark-Sky Association
 22:     - Ecosystems
 23:     - Human Health
 24:     - Astronomy
 25: status: published
 26: robots: false
 27: featured_image: 1.landscape-painting-of-dark-skies-and-mountains.webp
 28: version: 0.1
 29: updatedAt: 2024-05-20
 30: publishedAt: 2024-05-20
 31: ---
 32: 
 33: ### The Silent Threat of Light Pollution
 34: 
 35: Imagine a universe stuck on a low-budget dimmer switch, the faint whispers of distant galaxies
 36: drowned out by the harsh glare of city lights. That's the reality for many of us – light pollution
 37: is a growing problem, and it's not just a buzzkill for stargazers. It's a silent threat to our
 38: ecosystems, our health, and our connection to the cosmos.
 39: 
 40: ### Ecological Impact of Light Pollution
 41: 
 42: Think of it like an ecological light switch. Flip it the wrong way, and the whole system goes
 43: haywire. Insects, crucial for healthy ecosystems, lose their celestial compass. Migrating birds,
 44: guided by the stars, become lost. Predators and prey, used to the natural rhythm of light and dark,
 45: find their hunting confused. It's a domino effect playing out across the natural world.
 46: 
 47: ### Human Health and Light Pollution
 48: 
 49: But hey, humans aren't exactly immune to this light pollution mess. Our internal clocks, finely
 50: tuned to the day-night cycle, get messed up by the constant blue light bombardment. Sleep suffers,
 51: hormones get cranky, and our risk of certain health problems increases. Not exactly a recipe for a
 52: happy and healthy life.
 53: 
 54: ### Astronomical Challenges
 55: 
 56: For astronomers, light pollution is like having a permanent case of cosmic cataracts. The faint
 57: light of distant stars and galaxies, holding the secrets of our universe's origin, becomes lost in
 58: the urban glow. It's like trying to read a mind-blowing book with a disco ball strobing overhead –
 59: not exactly ideal for scientific discovery.
 60: 
 61: ### Fighting Back Against Light Pollution
 62: 
 63: But there's hope, fellow Earthlings! Organizations like the International Dark-Sky Association (IDA)
 64: are leading the charge against light pollution. Think of them as the galactic night watch, working
 65: with communities and governments to develop lighting that's both functional and respectful of the
 66: cosmos. We're talking shielded lights, lower intensity, and warmer colors that don't disrupt the
 67: natural world.
 68: 
 69: ### How You Can Help
 70: 
 71: Here's where you, awesome citizen of Earth, come in. You can be a champion for the celestial cause!
 72: Spread the word about dark sky conservation. Talk to your neighbors, businesses, and local leaders.
 73: When replacing those tired outdoor lights, opt for shielded fixtures that cast a warm, downward
 74: glow. Every unnecessary watt saved is a tiny victory for the Milky Way.
 75: 
 76: ### Dark Sky Conservation in India
 77: 
 78: India, the land of ancient wisdom and stargazing sages, is also joining the fight. From the inky
 79: blackness of the Nubra Valley to the star-dusted plateau of Djinkoni, efforts are underway to
 80: preserve these pockets of pristine darkness. In the Indian context, dark sky conservation is more
 81: than just science – it's a bridge back to a rich cultural heritage, where the night sky held
 82: profound meaning in mythology, astronomy, and spiritual practices.
 83: 
 84: ### Reclaiming the Magic of Darkness
 85: 
 86: Let's reclaim the magic of darkness, the canvas upon which the universe paints its most breathtaking
 87: masterpieces. Let's ensure that future generations can experience the awe-inspiring vastness of the
 88: cosmos, not a perpetual twilight show. Together, we can dim the city lights and ignite the wonder of
 89: the night sky. The universe is waiting.
 90: 
 91: ### Future Topics on Dark Sky Conservation
 92: 
 93: This is just the beginning of our exploration into the fascinating world of dark sky conservation.
 94: In upcoming posts, we'll delve deeper into the efforts already underway around the globe. We'll
 95: explore the inspiring work of organizations like the IDA and local initiatives protecting precious
 96: pockets of darkness. We'll share the latest research on light pollution's impact and unpack
 97: practical solutions you can implement in your own backyard.
 98: 
 99: So, stay tuned, space enthusiast! We're about to embark on a journey to illuminate the importance of
100: darkness and empower you to be a champion for the night sky.
```

## File: apps/website/content/blog/people-of-space/1.evolving-realities-for-people-of-space.md
```markdown
  1: ---
  2: id: 74bd3a23-f1be-4f29-9f36-c1de78518a68
  3: title: Exploring the Cosmos - Evolving Realities for People of Space
  4: description:
  5:   A journey through the extraordinary narratives of individuals involved in space exploration,
  6:   highlighting the evolution, diversity, and inclusion in the field.
  7: category: people-of-space
  8: authorIds:
  9:   - 2
 10:   - 3
 11: tags:
 12:   - diversity
 13:   - inclusion
 14:   - astronauts
 15: keywords:
 16:   primary: People of Space
 17:   secondary:
 18:     - Gender Equality
 19:     - Democratization of Space
 20:     - SpaceX
 21:     - ISS
 22:     - Space Tourism
 23: status: published
 24: robots: false
 25: featured_image: 1.20-people-who-influenced-the-space-industry.webp
 26: version: 0.1
 27: updatedAt: 2024-05-20
 28: publishedAt: 2024-05-20
 29: ---
 30: 
 31: ### The Captivating Realm of Space
 32: 
 33: In the vast expanse of the universe, where stars twinkle and galaxies dance, there exists a realm
 34: that has long captured the imagination of humanity: SPACE. From the early days of gazing at the
 35: stars to the modern era of space exploration, the journey of the people involved in this field has
 36: been nothing short of extraordinary. As we delve into the stories of those who traverse the cosmos,
 37: we uncover a narrative of evolution, diversity, and inclusion.
 38: 
 39: ### Breaking Gender Barriers
 40: 
 41: Decades ago, the landscape of space exploration was vastly different. Gender biases permeated the
 42: industry, with women often sidelined or overlooked in favor of their male counterparts. However, the
 43: tides have shifted dramatically since then. Today, women are at the forefront of space exploration,
 44: breaking barriers and shattering stereotypes.
 45: 
 46: From Valentina Tereshkova, the first woman to journey into space, to Sally Ride, the first American
 47: woman in space, to Christina Koch and Jessica Meir, who conducted the first all-female spacewalk,
 48: women have cemented their place in the annals of space history.
 49: 
 50: In our upcoming blogs, we'll explore the stories of pioneering female astronauts, engineers, and
 51: scientists who are inspiring future generations to reach for the stars.
 52: 
 53: ### Democratizing Space Exploration
 54: 
 55: Moreover, the accessibility of space exploration was once limited primarily to a handful of affluent
 56: nations, leaving many countries with limited resources behind. However, the democratization of space
 57: technology has opened doors for a more inclusive approach.
 58: 
 59: Organizations like SpaceX, Blue Origin, Astroscale, and Pixxel are revolutionizing space travel,
 60: making it more affordable and accessible than ever before. As a result, countries from all corners
 61: of the globe, including those with limited resources, are now able to participate in space
 62: exploration initiatives.
 63: 
 64: In our upcoming series of blogs under this theme, we will examine how initiatives like international
 65: partnerships, satellite programs, and affordable launch options are democratizing access to space,
 66: enabling nations with limited resources to leverage space technology for socio-economic development.
 67: 
 68: ### Embracing Diverse Backgrounds
 69: 
 70: One of the most remarkable transformations in the field of space exploration is the inclusion of
 71: individuals from diverse professional backgrounds. Gone are the days when only astronauts and
 72: engineers were associated with space missions. Today, artists, educators, journalists, and even
 73: private citizens are venturing into space, bringing their unique perspectives and expertise to the
 74: table.
 75: 
 76: For instance, Yusaku Maezawa, a Japanese billionaire, plans to fly around the moon with a group of
 77: artists as part of SpaceX's Dear Moon project, highlighting the intersection of art and space
 78: exploration.
 79: 
 80: Furthermore, the collaborative nature of modern space missions has fostered a spirit of inclusivity
 81: and cooperation among nations. International partnerships, such as the International Space Station
 82: (ISS) and Lunar Gateway, serve as symbols of unity and collaboration, transcending geopolitical
 83: boundaries for the greater good of humanity.
 84: 
 85: Astronauts from different countries work hand in hand, conducting groundbreaking research and
 86: advancing our understanding of the cosmos. In our coming series, we will discuss the implications of
 87: this shift, including the commercialization of space, the rise of space tourism, and the potential
 88: for new discoveries and collaborations.
 89: 
 90: ### The Evolution of Space Exploration
 91: 
 92: The journey of people in the field of space exploration has undergone a remarkable transformation
 93: over the decades. From overcoming gender biases to democratizing access and embracing diversity, the
 94: evolution of space exploration reflects the resilience and ingenuity of the human spirit.
 95: 
 96: As we look to the stars with renewed hope and curiosity, let us continue to strive for a future
 97: where the cosmos truly belongs to all.
 98: 
 99: ### Conclusion: Celebrating Diversity in Space
100: 
101: As we navigate through these topics, we'll highlight the voices and experiences of individuals from
102: diverse backgrounds, shedding light on the rich tapestry of talent and perspectives driving progress
103: in the fields of aerospace and astronomy.
104: 
105: Join us on this exhilarating voyage as we explore the cosmos and celebrate the people who dare to
106: reach beyond the stars.
```

## File: apps/website/content/blog/space-exploration/1.journey-through-space-exploration.md
```markdown
  1: ---
  2: id: 3aebf167-1a5e-4e25-9e15-7b1f5c3edb61
  3: title: Unveiling the Mysteries of the Cosmos - A Journey Through Space Exploration
  4: description:
  5:   Since the dawn of humanity, the stars have beckoned us with their enigmatic allure, igniting a
  6:   primal curiosity to explore the vast expanse of the cosmos. Join us as we trace the trajectory of
  7:   space exploration and uncover its profound impact on both our understanding of the universe and
  8:   life here on Earth.
  9: category: space-exploration
 10: authorIds:
 11:   - 2
 12:   - 3
 13: tags:
 14:   - exploration
 15:   - cosmos
 16:   - technology
 17:   - sustainability
 18: keywords:
 19:   primary: Space Exploration
 20:   secondary:
 21:     - Space Race
 22:     - Robotics
 23:     - ISS
 24:     - Cis-Lunar Economy
 25:     - Asteroid Mining
 26: status: published
 27: robots: false
 28: featured_image: 1.starship-lands-on-mars.webp
 29: version: 0.1
 30: updatedAt: 2024-05-20
 31: publishedAt: 2024-05-20
 32: ---
 33: 
 34: ### The Enigmatic Allure of the Stars
 35: 
 36: Since the dawn of humanity, the stars have beckoned us with their enigmatic allure, igniting a
 37: primal curiosity to explore the vast expanse of the cosmos. Over the decades, our quest to unravel
 38: the mysteries of space has evolved dramatically, propelled by advancements in technology, shifting
 39: priorities, and a relentless thirst for knowledge. In this blog, we embark on a journey through
 40: time, tracing the trajectory of space exploration and uncovering its profound impact on both our
 41: understanding of the universe and life here on Earth.
 42: 
 43: ### Early Milestones in Space Exploration
 44: 
 45: In the early days of space exploration, the focus was primarily on achieving milestones such as
 46: reaching orbit, landing on the moon, and launching satellites into space. This era was characterized
 47: by the Space Race between the United States and the Soviet Union, fueled by geopolitical tensions
 48: and the desire for technological supremacy. Basic tools and technologies, such as rocket propulsion
 49: systems and rudimentary spacecraft, laid the foundation for humanity's foray into the cosmos.
 50: 
 51: ### Advancements and New Frontiers
 52: 
 53: As the decades unfolded, so too did the focus and scope of space exploration. Advancements in
 54: robotics, computer science, and materials science revolutionized the way we explore space, enabling
 55: us to venture deeper into the unknown. Robotic probes and rovers, such as Voyager, Curiosity, and
 56: Perseverance, have expanded our understanding of the solar system and beyond, uncovering new worlds,
 57: moons, and phenomena along the way.
 58: 
 59: Moreover, the International Space Station (ISS) stands as a testament to international collaboration
 60: and scientific cooperation, serving as a microgravity laboratory where researchers from around the
 61: world conduct experiments in fields ranging from medicine to materials science. The ISS not only
 62: advances our understanding of human physiology in space but also paves the way for future
 63: long-duration space missions, such as crewed missions to Mars.
 64: 
 65: ### The Cis-Lunar Economy: A New Vision
 66: 
 67: In recent years, humanity's interest in space exploration has transcended the bounds of mere
 68: curiosity, evolving into a pragmatic pursuit of establishing sustainable off-world economies.
 69: Central to this vision is the concept of the cis-lunar economy, a bustling ecosystem of activities
 70: centered around the region between Earth and the Moon. This includes endeavors like growing plants
 71: in space and mining resources from asteroids, both of which hold immense promise for the future of
 72: space exploration and the betterment of life on Earth.
 73: 
 74: #### Space Agriculture
 75: 
 76: One of the most intriguing aspects of the cis-lunar economy is the prospect of growing plants in
 77: space. Companies like SpaceX, Blue Origin, and NASA have been actively involved in research and
 78: experiments aimed at cultivating crops beyond Earth's atmosphere. The potential benefits of space
 79: agriculture are manifold. Not only does it provide a sustainable source of fresh food for astronauts
 80: during long-duration missions, but it also offers insights into how plants respond to the unique
 81: conditions of microgravity and radiation in space. Such research is invaluable for developing
 82: technologies to support future human colonies on other celestial bodies, where traditional
 83: agriculture may not be feasible.
 84: 
 85: Moreover, space farming holds promise for addressing food security issues on Earth. By leveraging
 86: the lessons learned from space-based agriculture, we can enhance our understanding of plant biology
 87: and optimize crop production methods. This could lead to the development of more resilient and
 88: efficient agricultural practices, crucial for feeding a growing global population in the face of
 89: climate change and diminishing arable land.
 90: 
 91: #### Asteroid Mining
 92: 
 93: In parallel with space farming, the exploration and utilization of asteroid resources represent
 94: another cornerstone of the cis-lunar economy. Companies like Planetary Resources (now Redwire
 95: Space), Deep Space Industries, and Asteroid Mining Corporation are at the forefront of this nascent
 96: industry, pioneering technologies to extract valuable minerals and metals from near-Earth asteroids.
 97: These celestial bodies are rich in precious metals like platinum, rare earth elements, and water,
 98: which can be utilized to sustainably fuel space exploration and support industrial activities both
 99: in space and on Earth.
100: 
101: The potential benefits of asteroid mining are profound. By tapping into the vast resources of space,
102: we can alleviate the strain on terrestrial reserves and mitigate the environmental impacts
103: associated with traditional mining practices. Furthermore, the availability of space-derived
104: materials could revolutionize manufacturing processes, enabling the production of advanced
105: technologies and infrastructure in space, thereby reducing the cost and logistical challenges of
106: space missions.
107: 
108: ### Opportunities and Challenges
109: 
110: The convergence of space agriculture and asteroid mining within the cis-lunar economy presents a
111: myriad of opportunities for human advancement. Beyond the immediate benefits to space exploration
112: and industry, these endeavors hold the potential to foster international collaboration and
113: innovation, driving economic growth and technological progress on a global scale. Moreover, the
114: development of a sustainable off-world economy could serve as a catalyst for addressing pressing
115: challenges facing humanity, from climate change to resource scarcity.
116: 
117: However, realizing the full potential of the cis-lunar economy requires concerted efforts from
118: governments, private sector entities, and the international community. Regulatory frameworks need to
119: be established to govern space activities and ensure equitable access to space resources.
120: Investments in research and development are essential to advancing key technologies and overcoming
121: the technical challenges associated with space exploration and resource utilization. Additionally,
122: fostering collaboration and knowledge-sharing among stakeholders is critical for maximizing the
123: benefits of space exploration for all of humanity.
124: 
125: ### Conclusion: A Pivotal Moment in Human History
126: 
127: In conclusion, the burgeoning interest in the cis-lunar economy, encompassing space agriculture and
128: asteroid mining, represents a pivotal moment in human history. By harnessing the resources of space
129: and leveraging technological innovation, we have the opportunity to build a sustainable and
130: prosperous future for generations to come, both on Earth and beyond.
131: 
132: Looking ahead, the future of space exploration is filled with promise and possibility. NASA's
133: Artemis program aims to return humans to the moon by 2024, while India’s GAGANYAN mission will be
134: the first attempt by the nation to achieve orbital insertion of a manned craft. These missions pave
135: the way for sustainable lunar exploration and lay the groundwork for crewed missions to Mars.
136: 
137: Space exploration is a testament to the indomitable human spirit, driven by curiosity, innovation,
138: and a shared desire to explore the unknown. From humble beginnings to bold visions of the future,
139: our journey through space has been one of discovery, wonder, and awe. As we gaze up at the stars,
140: let us continue to push the boundaries of exploration, unlocking the secrets of the cosmos and
141: charting a course towards a brighter, more enlightened future for all of humanity.
142: 
143: ### Future Themes
144: 
145: The following blogs under this particular theme will share with you the recent visions, planned and
146: future mission concepts as well as the advancements, goals, policy and law framework necessary to
147: make space exploration more convenient and affordable in coming years.
```

## File: apps/website/content/blog/sustainable-development/1.astronomy-for-social-development.md
```markdown
  1: ---
  2: id: b83f3a22-ea27-4b33-a7cf-d4f8dc9a8b10
  3: title: Astronomy for Sustainable Development - Uniting Humanity for a Brighter Future
  4: description:
  5:   Explore how the power of astronomy can drive sustainable development, connecting our understanding
  6:   of the cosmos to the well-being of Earth and its inhabitants.
  7: category: sustainable-development
  8: authorIds:
  9:   - 2
 10:   - 3
 11: tags:
 12:   - stars
 13:   - moons
 14:   - planets
 15:   - astronomy
 16: keywords:
 17:   primary: Astronomy and Sustainable Development
 18: secondary:
 19:   - Sustainable Development Goals
 20:   - Astronomy
 21:   - Space Exploration
 22:   - Environmental Conservation
 23: status: published
 24: robots: false
 25: featured_image: 1.sustainable-global-space-development.webp
 26: version: 0.1
 27: updatedAt: 2024-01-19
 28: publishedAt: 2024-01-12
 29: ---
 30: 
 31: ### Dear Reader
 32: 
 33: Imagine this: we're all on a little spaceship called Earth, floating through the vastness of space.
 34: It's a delicate place, full of life, spinning amidst the stars. Now, think of us as crew members on
 35: this ship, responsible for keeping it safe and thriving. That's what the Sustainable Development
 36: Goals (SDGs) are about—a plan to keep our ship afloat and ensure everyone on board is happy.
 37: 
 38: These goals, set by the United Nations in 2015, are like guiding stars, laying the groundwork for a
 39: better future. They're all about making sure people have what they need, taking care of our planet,
 40: ensuring everyone has a chance to succeed, and working together peacefully.
 41: 
 42: ### Connecting Astronomy to Sustainable Development
 43: 
 44: At first glance, the notion of connecting astronomy to sustainable development may seem far-fetched.
 45: However, when we consider the myriad ways in which astronomy permeates our daily lives and drives
 46: advancements in climate monitoring, disaster management, and resource exploration, the connection
 47: becomes palpable.
 48: 
 49: Astronomy reminds us of our place in the cosmos and our interconnectedness with all life on Earth.
 50: When we gaze at the stars and think about the vastness of the universe, we realize how small we are.
 51: Earth is just a tiny speck, a pale blue dot in the vast expanse of space.
 52: 
 53: This thought helps humble us and highlights the fragility of our existence. It shows us that we are
 54: all passengers on this small, delicate spaceship hurtling through the cosmos. Our fates are
 55: intertwined with every living being on Earth. There is no backup planet; this is our one and only
 56: home.
 57: 
 58: This awareness fosters a sense of unity and responsibility, urging us to work together to protect
 59: our planet and ensure its sustainability. If we ignore this, we risk irreparable damage to ourselves
 60: and all life on this precious planet.
 61: 
 62: ### The Cost of Ignoring Our Planet
 63: 
 64: Consider a dystopian scenario where the wealthy escape to safety on a spaceship, leaving the less
 65: fortunate behind to face a dire fate. This hypothetical underscores a harsh truth: that while some
 66: may entertain the notion of fleeing to Mars or seeking refuge on a hypothetical "Planet B," the vast
 67: majority of humanity has no such means for luxury.
 68: 
 69: It prompts us to reflect on the resources and investments poured into space exploration and
 70: colonization. Moreover, the resources utilized in military and war pursuits of the nations can be
 71: redirected.
 72: 
 73: Research shows that for FY 2023, NASA's budget was approximately $25.4 billion. SpaceX's Starship
 74: development, aimed at enabling Mars colonization, is estimated to cost $2-10 billion for the initial
 75: development phase. China, the second-largest military spender, allocated approximately $292 billion
 76: to its military in 2022, whereas India computes to about $76.6 billion.
 77: 
 78: Imagine if those resources were directed towards preserving and nurturing our own planet. By
 79: prioritizing the conservation and sustainable development of Earth, we can ensure a future where
 80: abandonment is never an option.
 81: 
 82: ### Everyday Lives and Astronomical Discoveries
 83: 
 84: Let's think back and reflect on how our everyday lives intersect with astronomical discoveries. For
 85: instance, the precise timing of our daily commute, facilitated by GPS satellites, relies on
 86: technologies developed through space exploration. Accurate weather forecasts, which guide our plans,
 87: depend on data collected from meteorological satellites.
 88: 
 89: Beyond Earth, advancements in climate monitoring, disaster management, and resource exploration are
 90: deeply rooted in astronomical principles. Satellites orbiting our planet provide critical data for
 91: predicting hurricanes and other extreme weather events, enabling timely evacuations and disaster
 92: preparedness.
 93: 
 94: Space-based technologies also play a vital role in sustainable agriculture by monitoring crop health
 95: and water usage. This helps in optimizing resource management and reducing environmental impact.
 96: This synergy between the cosmos and the sustainability of life on Earth underscores the need to
 97: invest in our planet's well-being.
 98: 
 99: Our celestial pursuits, such as observing solar activity to understand its effects on Earth's
100: climate, are intrinsically linked to the health of our home. By advancing our knowledge of
101: astronomy, we not only explore the universe but also enhance our ability to protect and sustain our
102: world.
103: 
104: ### The Role of the Office of Astronomy for Development
105: 
106: From the vast expanse of the cosmos to the intricate workings of our own planet, astronomy offers us
107: a unique perspective—one that reminds us of our place in the universe and our interconnectedness
108: with all life on Earth. It is from this cosmic vantage point that the Office of Astronomy for
109: Development (OAD) operates, harnessing the transformative potential of astronomy to address pressing
110: global challenges.
111: 
112: Through projects spanning education, sustainable development, and social inclusion, the OAD empowers
113: individuals and communities to unlock new opportunities and envision a brighter future. Whether it's
114: fostering scientific literacy among underserved populations or leveraging astrotourism for economic
115: growth, the OAD shows how astronomy can catalyze positive change.
116: 
117: ### Join the Movement
118: 
119: Join us in harnessing the power of astronomy for sustainable development! Whether you're a student,
120: educator, policymaker, or concerned citizen, there are countless ways to get involved and make a
121: difference.
122: 
123: Start by educating yourself and others about the intersection of astronomy and
124: sustainability—explore the wealth of resources available online and share your newfound knowledge
125: with your community. Let's engage in conversations about integrating astronomy into sustainable
126: development efforts, both locally and globally.
127: 
128: Support organizations and initiatives like the OAD that leverage astronomical insights and
129: technologies to address pressing challenges facing our planet. Together, let's work towards a future
130: where the wonders of the cosmos inspire us to create a more sustainable and equitable world for
131: generations to come.
132: 
133: **Join the movement today and be part of the solution!**
```

## File: apps/website/content/policies/1.privacy-policy.md
```markdown
 1: ---
 2: id: 1
 3: title: AstronEra Privacy Policy
 4: published:
 5: updated:
 6: ---
 7: 
 8: ## Introduction
 9: 
10: Welcome to AstronEra, your premier online portal for all things astronomy. This Privacy Policy is
11: designed to inform you about our practices regarding the collection, use, and disclosure of personal
12: information we receive from users of the app. By accessing or using AstronEra, you agree to the
13: collection and use of information in accordance with this policy.
14: 
15: ## Information Collection and Use
16: 
17: ### Account Creation and Profile Management
18: 
19: - **Email and Password**: For users who choose to sign up via Email & Password, we collect email
20:   addresses and encrypted passwords.
21: - **Social Logins (LinkedIn and Twitter OAuth)**: For users opting for social logins, we may receive
22:   your email address, name, and profile picture from these services. Please review their privacy
23:   policies for more details on the information shared with us.
24: - **Profile Information**: Users can provide additional information for profile customization, such
25:   as username, preferences, and interests related to astronomy.
26: - **Notification Settings**: Users can opt-in to receive notifications via email or push
27:   notifications on their devices. Preferences can be managed within the app settings.
28: 
29: ### Usage Data
30: 
31: We collect data on how the application is accessed and used ("Usage Data"). This includes your
32: device's Internet Protocol address (e.g., IP address), browser type, browser version, our app pages
33: that you visit, time and date of your visit, time spent on those pages, unique device identifiers,
34: and other diagnostic data.
35: 
36: ### Tracking & Cookies Data
37: 
38: We use cookies and similar tracking technologies to track activity on our service and store
39: information such as user session details to detect when users return and show they are logged in.
40: Our use of cookies also includes analytics to improve our products, as detailed in our Cookies
41: Policy.
42: 
43: ## Information Storage
44: 
45: We utilize Supabase for secure storage of user data. By creating an account and using our Service,
46: you consent to the storage of your personal and usage data on Supabase, which is subject to their
47: terms and privacy policy.
48: 
49: ## User-Generated Content and AI Summaries
50: 
51: Users may post content on the Service, which we may moderate for compliance with our policies.
52: Additionally, some content on our Service, including summaries, is generated using artificial
53: intelligence (e.g., ChatGPT). While we strive for accuracy, we cannot guarantee the reliability of
54: AI-generated content.
55: 
56: ## Information Sharing and Disclosure
57: 
58: We may share your information with third-party service providers for services such as database
59: management, analytics, and email distribution. These third parties are obligated not to disclose or
60: use your information for any other purpose.
61: 
62: ## Third-Party Websites
63: 
64: Our service may contain links to third-party websites. We are not responsible for the privacy
65: practices of these external sites. We encourage you to review their privacy policies.
66: 
67: ## Security
68: 
69: We strive to use commercially acceptable means to protect your Personal Information, though we
70: cannot guarantee its absolute security.
71: 
72: ## Changes to This Privacy Policy
73: 
74: We reserve the right to update our Privacy Policy and will notify users of any changes. Review this
75: policy periodically for updates.
76: 
77: ## Contact Us
78: 
79: For questions about this Privacy Policy, please contact us.
```

## File: apps/website/content/policies/2.cookies-policy.md
```markdown
 1: ---
 2: id: 2
 3: title: AstronEra Cookies Policy
 4: published:
 5: updated:
 6: ---
 7: 
 8: ## Overview
 9: 
10: AstronEra ("us", "we", or "our") uses cookies on the AstronEra mobile application ("the Service").
11: By using the Service, you consent to the use of cookies. Our Cookies Policy explains what cookies
12: are, how we use cookies, how third-parties we may partner with may use cookies on the Service, your
13: choices regarding cookies, and further information about cookies.
14: 
15: ## What are cookies?
16: 
17: Cookies are small pieces of text sent by your web browser by a website you visit. A cookie file is
18: stored in your web browser and allows the Service or a third-party to recognize you and make your
19: next visit easier and the Service more useful to you. Cookies can be "persistent" or "session"
20: cookies.
21: 
22: ## How AstronEra uses cookies
23: 
24: When you use and access the Service, we may place several cookies files in your web browser. We use
25: cookies for the following purposes:
26: 
27: - **To enable certain functions of the Service**: We use cookies to recognize you when you return to
28:   our Service and to remember your preferences (e.g., login status, language preference).
29: - **To provide analytics**: We use both session and persistent cookies on the Service and we use
30:   different types of cookies to run the Service, including:
31:   - **Essential cookies**: Necessary for the website to function and cannot be switched off. They
32:     are usually only set in response to actions made by you which amount to a request for services,
33:     such as setting your privacy preferences, logging in, or filling in forms.
34:   - **Analytics and Performance cookies**: These allow us to recognize and count the number of
35:     visitors and to see how visitors move around our website when they are using it. This helps us
36:     to improve the way our website works, for example, by ensuring that users are finding what they
37:     are looking for easily.
38: 
39: ## Third-party cookies
40: 
41: In addition to our own cookies, we may also use various third-parties cookies to report usage
42: statistics of the Service, deliver advertisements on and through the Service, and so on.
43: Specifically, we use PostHog for tracking events throughout the application, including timings,
44: navigations, clicks, and other interactions. PostHog may collect anonymized information such as
45: location, browser type, and device type, along with a userId if present, to provide us with
46: necessary analytics to track usage and improve our products.
47: 
48: ## What are your choices regarding cookies?
49: 
50: If you'd like to delete cookies or instruct your web browser to delete or refuse cookies, please
51: visit the help pages of your web browser. Please note, however, that if you delete cookies or refuse
52: to accept them, you might not be able to use all of the features we offer, you may not be able to
53: store your preferences, and some of our pages might not display properly.
54: 
55: - For the Chrome web browser, please visit this page from Google:
56:   [https://support.google.com/accounts/answer/32050](https://support.google.com/accounts/answer/32050)
57: - For the Internet Explorer web browser, please visit this page from Microsoft:
58:   [http://support.microsoft.com/kb/278835](http://support.microsoft.com/kb/278835)
59: - For the Firefox web browser, please visit this page from Mozilla:
60:   [https://support.mozilla.org/en-US/kb/delete-cookies-remove-info-websites-stored](https://support.mozilla.org/en-US/kb/delete-cookies-remove-info-websites-stored)
61: - For the Safari web browser, please visit this page from Apple:
62:   [https://support.apple.com/kb/PH21411](https://support.apple.com/kb/PH21411)
63: - For any other web browser, please visit your web browser's official web pages.
64: 
65: ## More information about cookies
66: 
67: You can learn more about cookies and the following third-party websites:
68: 
69: - AllAboutCookies: [http://www.allaboutcookies.org/](http://www.allaboutcookies.org/)
70: - Network Advertising Initiative:
71:   [http://www.networkadvertising.org/](http://www.networkadvertising.org/)
72: 
73: ## Contact Us
74: 
75: If you have any questions about our Cookies Policy, please contact us.
```

## File: apps/website/content/policies/3.terms-of-use.md
```markdown
 1: ---
 2: id: 3
 3: title: AstronEra Terms of Use
 4: published:
 5: updated:
 6: ---
 7: 
 8: Welcome to AstronEra. By accessing our website, mobile application, or any services provided by us
 9: (collectively, the "Service"), you agree to be bound by these Terms of Use ("Terms"). If you
10: disagree with any part of the terms, then you may not access the Service.
11: 
12: ## 1. Use of Service
13: 
14: AstronEra provides a comprehensive online portal for astronomy, including news, jobs, company
15: profiles, courses, and other related products. Our Service is intended for personal, non-commercial
16: use.
17: 
18: ## 2. Account Registration and Data Storage
19: 
20: To access certain features of the Service, you may be required to create an account. You agree to
21: provide accurate, current, and complete information during the registration process and to update
22: such information to keep it accurate, current, and complete. AstronEra uses Supabase for secure
23: storage of user data. By creating an account, you consent to the storage of your personal and usage
24: data on Supabase, subject to their terms and privacy policy.
25: 
26: ## 3. User-Generated Content
27: 
28: Users may post, link, store, share, and otherwise make available certain information, text,
29: graphics, or other material ("Content"). You are responsible for the Content that you post to the
30: Service, including its legality, reliability, and appropriateness.
31: 
32: AstronEra reserves the right, but not the obligation, to monitor and edit all Content provided by
33: users. Furthermore, we reserve the right to remove any Content deemed inappropriate or offensive, or
34: if it violates any third-party rights, without prior notice.
35: 
36: ## 4. Moderation and Termination
37: 
38: We reserve the right to moderate any user-generated content and to terminate or suspend access to
39: our Service immediately, without prior notice or liability, for any reason, including without
40: limitation if you breach the Terms. Upon termination, your right to use the Service will immediately
41: cease.
42: 
43: ## 5. Accuracy of Content
44: 
45: While we strive to provide accurate and up-to-date information, the content on our Service may be
46: summarized or generated using artificial intelligence, including ChatGPT. Therefore, AstronEra
47: cannot guarantee the accuracy, completeness, or reliability of such summaries or AI-generated
48: content and will not be liable for any inaccuracies or omissions.
49: 
50: ## 6. Intellectual Property
51: 
52: The Service and its original content, features, and functionality are and will remain the exclusive
53: property of AstronEra and its licensors. Our trademarks and trade dress may not be used in
54: connection with any product or service without the prior written consent of AstronEra.
55: 
56: ## 7. Links to Other Web Sites
57: 
58: Our Service may contain links to third-party web sites or services that are not owned or controlled
59: by AstronEra. We have no control over, and assume no responsibility for, the content, privacy
60: policies, or practices of any third-party web sites or services. You further acknowledge and agree
61: that AstronEra shall not be responsible or liable, directly or indirectly, for any damage or loss
62: caused or alleged to be caused by or in connection with the use of or reliance on any such content,
63: goods, or services available on or through any such web sites or services.
64: 
65: ## 8. Changes to Terms
66: 
67: We reserve the right, at our sole discretion, to modify or replace these Terms at any time. If a
68: revision is material, we will provide at least 30 days' notice prior to any new terms taking effect.
69: What constitutes a material change will be determined at our sole discretion.
70: 
71: ## 9. Contact Us
72: 
73: If you have any questions about these Terms, please contact us.
```

## File: apps/website/content/policies/4.refund-policy.md
```markdown
 1: ---
 2: id: 4
 3: title: Refund and Cancellation Policy
 4: published:
 5: updated:
 6: ---
 7: 
 8: # Refund and Cancellation Policy for AstronEra (AEll Pvt LTD)
 9: 
10: ## 1. Subscription Model
11: 
12: AstronEra provides a recurring subscription service granting access to our Astronomy hub. This hub
13: includes the latest news, company profiles, job listings, events, and other content specific to the
14: astronomy and space-tech industry. Subscriptions are available on a monthly or annual basis.
15: 
16: ## 2. Refund Policy
17: 
18: ### 2.1. New Subscriptions
19: 
20: We offer a 7-day refund period from the date of your first purchase. If you are unsatisfied with our
21: service, you may request a full refund within this period.
22: 
23: ### 2.2. Subscription Renewals
24: 
25: For subsequent renewal payments, we offer a 5-day refund period from the date of renewal.
26: 
27: ### 2.3. Refund Process
28: 
29: Approved refunds will be processed to the original payment method used for the purchase. Please
30: allow 5-7 working days for the refunded amount to reflect in your account.
31: 
32: ### 2.4. No Partial Refunds
33: 
34: We do not offer partial refunds for any portion of a subscription period.
35: 
36: ## 3. Cancellation Policy
37: 
38: ### 3.1. Cancellation Terms
39: 
40: Subscribers may cancel their subscription at any time.
41: 
42: ### 3.2. Active Period After Cancellation
43: 
44: Upon cancellation, the subscription will remain active until the end of the current billing cycle.
45: No pro-rata refunds will be issued for the unused portion of the subscription period.
46: 
47: ### 3.3. Cancellation Fees
48: 
49: There are no fees associated with cancellation.
50: 
51: ## 4. How to Request a Refund or Cancellation
52: 
53: To request a refund or cancel your subscription, please contact our support team through one of the
54: following methods:
55: 
56: - **Email**: support@astronera.org
57: - **In-app Support**: Use the contact option within the AstronEra application
58: 
59: ## 5. Payment Processing
60: 
61: AstronEra uses Razorpay to process all payments, including both domestic payments within India and
62: international payments.
63: 
64: ## 6. Policy Application
65: 
66: This refund and cancellation policy applies equally to all subscribers, regardless of their
67: geographical location.
68: 
69: ## 7. Modifications to the Policy
70: 
71: AstronEra reserves the right to modify this policy at any time. Any changes will be communicated to
72: subscribers and posted on our website.
73: 
74: ## 8. Compliance with Indian Laws
75: 
76: AstronEra complies with all relevant Indian laws and regulations, including but not limited to:
77: 
78: ### 8.1. Foreign Exchange Management Act (FEMA)
79: 
80: All international transactions are conducted in accordance with the Foreign Exchange Management Act
81: (FEMA) and relevant guidelines issued by the Reserve Bank of India (RBI).
82: 
83: ### 8.2. Reserve Bank of India (RBI) Guidelines
84: 
85: We use RBI-authorized payment gateways to process international transactions and ensure compliance
86: with RBI's KYC norms and Liberalized Remittance Scheme (LRS) regulations.
87: 
88: ### 8.3. Goods and Services Tax (GST)
89: 
90: We adhere to GST regulations for international transactions, including the correct application and
91: documentation of GST for services provided to international customers.
92: 
93: ### 8.4. Data Protection and Privacy
94: 
95: We comply with the Information Technology Act 2000 and RBI's data localization guidelines to protect
96: and secure payment information.
97: 
98: By subscribing to AstronEra, you acknowledge that you have read, understood, and agree to comply
99: with all applicable Indian laws and regulations related to international payments.
```

## File: apps/website/content/policies/5.service-delivery.md
```markdown
 1: # Service Delivery Policy
 2: 
 3: ## Instant Service Activation
 4: 
 5: AEII Private Limited (operating as AstronEra) provides Software as a Service (SaaS) solutions. Our
 6: services are delivered instantly upon successful purchase and payment confirmation.
 7: 
 8: ## Service Access
 9: 
10: Upon completing your purchase, you will receive:
11: 
12: - An email confirmation of your order
13: - Instructions for accessing your service
14: - Login credentials or a link to set up your account
15: 
16: ## Activation Timeframe
17: 
18: Your service will be activated immediately after we receive confirmation of your payment. In most
19: cases, this process is instantaneous.
20: 
21: ## Customer Support
22: 
23: If you experience any issues accessing your service after purchase, please contact our customer
24: support team at [support email/phone number]. We aim to respond to all inquiries within 48 business
25: hours.
26: 
27: ## Service Interruptions
28: 
29: While we strive for 100% uptime, in the rare event of service interruptions due to maintenance or
30: unforeseen circumstances, we will notify all affected customers via email and/or through our service
31: status page at [status page URL].
32: 
33: ## Refund Policy
34: 
35: For information about refunds, please refer to our Refund Policy at [link to refund policy].
36: 
37: ## Changes to This Policy
38: 
39: We reserve the right to modify this policy at any time. Changes will be communicated to all active
40: customers via email.
41: 
42: Last updated: 8th August 2024
```

## File: apps/website/layouts/default.vue
```vue
 1: <script setup lang="ts">
 2: const route = useRoute()
 3: const noTopNav = ['/contact']
 4: const noFooter = ['/contact']
 5: 
 6: const showFooter = computed(
 7:   () => !noFooter.some((noFooterPath) => route.path.startsWith(noFooterPath)),
 8: )
 9: 
10: const showTopNav = computed(
11:   () => !noTopNav.some((noTopNavPath) => route.path.startsWith(noTopNavPath)),
12: )
13: </script>
14: 
15: <template>
16:   <div class="foreground relative min-h-screen w-full">
17:     <NavTop v-if="showTopNav" />
18:     <AppBackButton
19:       v-else
20:       class="fixed bottom-2 left-2 z-50"
21:     />
22:     <div class="relative">
23:       <div class="relative z-10">
24:         <slot />
25:       </div>
26:       <IBBackground class="left-0 top-0 z-0 hidden opacity-50 lg:fixed lg:block" />
27:     </div>
28: 
29:     <div class="relative w-full">
30:       <FooterWebsite v-if="showFooter" />
31:     </div>
32:   </div>
33: </template>
34: 
35: <style></style>
```

## File: apps/website/pages/blog/category/[category]/page/[page].vue
```vue
  1: <script setup lang="ts">
  2: import { useChangeCase } from '@vueuse/integrations/useChangeCase'
  3: import { useRoute, useRuntimeConfig, useStrapi } from '#imports'
  4: 
  5: const route = useRoute()
  6: const strapi = useStrapi()
  7: 
  8: const validCategories = [
  9:   'all',
 10:   'people-of-space',
 11:   'space-exploration',
 12:   'dark-sky-conservation',
 13:   'sustainable-development',
 14: ] as const
 15: 
 16: type ArticleCategoriesT = (typeof validCategories)[number]
 17: 
 18: const categoryInfo = {
 19:   'all': {
 20:     title: 'AstronEra Blog',
 21:     description: 'Discover all our articles spanning the wonders and advancements of space.',
 22:   },
 23:   'people-of-space': {
 24:     title: 'People of Space',
 25:     description: 'Meet the trailblazers and visionaries propelling humanity into the cosmos.',
 26:   },
 27:   'space-exploration': {
 28:     title: 'Space Exploration',
 29:     description: 'Embark on thrilling journeys through our latest missions and cosmic discoveries.',
 30:   },
 31:   'dark-sky-conservation': {
 32:     title: 'Dark Sky Conservation',
 33:     description: 'Uncover efforts to preserve our celestial vistas and protect night skies.',
 34:   },
 35:   'sustainable-development': {
 36:     title: 'Sustainable Development',
 37:     description: 'Explore innovations for a sustainable future in space and on Earth.',
 38:   },
 39: }
 40: 
 41: const { data: pageData } = await useAsyncData(
 42:   `articles-${route.params.category}-page-${route.params.page}`,
 43:   () =>
 44:     fetchArticlesFromAPI(String(route.params.category).toLowerCase(), Number(route.params.page)),
 45:   { server: false, immediate: true },
 46: )
 47: 
 48: const articles = computed(() => pageData.value?.articles || [])
 49: const totalPages = computed(() => pageData.value?.totalPages || 1)
 50: const categoryParam = computed(() => route.params.category || 'all')
 51: const pageParam = computed(() => pageData.value?.page || 1)
 52: 
 53: // Use the pageData in your component
 54: 
 55: console.log('useRuntimeConfig:', useRuntimeConfig().public, categoryParam.value, pageData)
 56: 
 57: async function fetchArticlesFromAPI(category: string, page: number) {
 58:   console.log('Fetching articles:', category, page)
 59:   const params: any = {
 60:     populate: {
 61:       author: {
 62:         populate: true,
 63:       },
 64:       cover: {
 65:         populate: true,
 66:       },
 67:       category: {
 68:         populate: true,
 69:       },
 70:     },
 71:   }
 72: 
 73:   if (category !== 'all') {
 74:     params.filters = {
 75:       slug: {
 76:         $eq: category,
 77:       },
 78:     }
 79:   }
 80: 
 81:   const response = await strapi.find<any>('articles', params)
 82: 
 83:   // If you need categories and authors separately
 84:   // const categories = await strapi.find<any>('categories');
 85: 
 86:   console.log('Response:', response)
 87: 
 88:   return {
 89:     articles: response.data,
 90:     totalPages: response.meta.pagination.pageCount,
 91:     category,
 92:     page,
 93:   }
 94: }
 95: 
 96: // old
 97: // SEO
 98: // if (categoryParam.value) {
 99: //   useSeoMeta({
100: //     title: categoryInfo[categoryParam.value].title,
101: //     ogTitle: categoryInfo[categoryParam.value].title,
102: //     description: categoryInfo[categoryParam.value].description,
103: //     ogDescription: categoryInfo[categoryParam.value].description,
104: //     ogImage: '/images/icons/blog-icon.svg',
105: //     twitterCard: 'summary_large_image',
106: //     twitterTitle: categoryInfo[categoryParam.value].title,
107: //     twitterDescription: categoryInfo[categoryParam.value].description,
108: //     twitterImage: `${websiteUrl}/images/icons/blog-icon.svg`,
109: //   })
110: 
111: //   defineOgImageComponent('OgImageDefault', {
112: //     title: `${categoryParam.value} Articles`,
113: //     description: categoryInfo[categoryParam.value]?.description,
114: //     image: './',
115: //   })
116: // }
117: 
118: const heroImage = computed(() => {
119:   let src = `images/blog/${categoryParam.value}/`
120: 
121:   switch (categoryParam.value) {
122:     case 'people-of-space':
123:       return (src += '1.20-people-who-influenced-the-space-industry.webp')
124:     case 'space-exploration':
125:       return (src += '1.starship-lands-on-mars.webp')
126:     case 'dark-sky-conservation':
127:       return (src += '1.landscape-painting-of-dark-skies-and-mountains.webp')
128:     case 'sustainable-development':
129:       return (src += '1.sustainable-global-space-development.webp')
130:     default:
131:       return (src += 'isro-rocket-launch.png')
132:   }
133: })
134: </script>
135: 
136: <template>
137:   <div>
138:     <CommonHero
139:       v-if="categoryParam && categoryInfo[categoryParam as ArticleCategoriesT]"
140:       :img="{
141:         src: heroImage,
142:         alt: `AstronEra ${useChangeCase(categoryParam, 'capitalCase').value} Hero Image`,
143:         width: 1080,
144:         height: 720,
145:       }"
146:       :title="{
147:         main: categoryInfo[categoryParam].title,
148:         subtitle: categoryInfo[categoryParam].description,
149:       }"
150:       position="center"
151:       invert
152:     />
153:     <div class="wrapper p-4 xl:p-8">
154:       <BlogFilter />
155:     </div>
156:     <div
157:       class="wrapper relative grid w-full grid-cols-1 items-start md:gap-4 md:px-4 lg:grid-cols-[0.5fr_1fr] lg:gap-8 lg:px-8"
158:     >
159:       <BlogAdFloat />
160: 
161:       <div
162:         v-show="articles.length"
163:         class="grid h-full grid-cols-1 md:grid-cols-2 md:gap-4 lg:gap-8"
164:       >
165:         <BlogCard
166:           v-for="article in articles"
167:           :key="`astronera-${categoryParam}-article-${article.id}`"
168:           :article="article"
169:         />
170:         <div
171:           v-if="!articles.length"
172:           class="background flex w-full items-center justify-center border border-primary-500 p-8 md:rounded-md"
173:         >
174:           <p class="foreground px-2"> No articles found... </p>
175:         </div>
176:         <!-- <template>
177:           <BlogCardSkeleton />
178:           <BlogCardSkeleton />
179:           <BlogCardSkeleton />
180:         </template> -->
181:       </div>
182:     </div>
183: 
184:     <!-- Pagination Component -->
185:     <Pagination
186:       :current-page="pageParam"
187:       :total-pages="totalPages"
188:       :base-url="`/blog/category/${categoryParam}`"
189:     />
190:   </div>
191: </template>
```

## File: apps/website/pages/blog/[title].vue
```vue
 1: <script setup lang="ts">
 2: import qs from 'qs'
 3: import { computed } from 'vue'
 4: import { useRoute, useStrapi } from '#imports'
 5: 
 6: const route = useRoute()
 7: const strapi = useStrapi()
 8: 
 9: const slug = computed(() => String(route.params.title))
10: 
11: const { data, pending, error } = await useAsyncData(
12:   `article-${slug.value}`,
13:   async () => {
14:     try {
15:       const params: any = {
16:         filters: {
17:           slug: {
18:             $eq: slug.value,
19:           },
20:         },
21:         populate: {
22:           cover: {
23:             populate: true,
24:           },
25:           category: {
26:             populate: true,
27:           },
28:           blocks: true,
29:           author: {
30:             fields: ['name', 'bio'],
31:             populate: {
32:               avatar: {
33:                 populate: true,
34:               },
35:             },
36:           },
37:         },
38:       }
39: 
40:       const response = await strapi.find<any>('articles', params)
41: 
42:       if (!response || !response.data || response.data.length === 0) {
43:         console.error({ statusCode: 404, message: 'Article not found' })
44:       }
45: 
46:       const article = response.data[0]
47: 
48:       return article
49:     } catch (e) {
50:       console.error('Error fetching article:', e)
51:     }
52:   },
53:   { server: true },
54: )
55: 
56: const article = computed(() => data.value)
57: 
58: console.log('Article:', article.value)
59: </script>
60: 
61: <template>
62:   <div>
63:     <div v-if="pending">Loading...</div>
64:     <div v-else-if="error">{{ error.message }}</div>
65:     <BlogArticle
66:       v-else-if="article"
67:       class="background"
68:       :article="article"
69:     />
70:     <div v-else>No article found</div>
71:   </div>
72: </template>
```

## File: apps/website/pages/blog/index.vue
```vue
 1: <script setup lang="ts"></script>
 2: 
 3: <template>
 4:   <div>
 5:     <CommonHero
 6:       :img="{
 7:         src: 'images/blog/all/isro-rocket-launch.png',
 8:         alt: `AstronEra blog icon`,
 9:         width: 1080,
10:         height: 720,
11:       }"
12:       :title="{
13:         main: 'ASTRONERA BLOG',
14:         subtitle: 'Space for all...',
15:       }"
16:       position="center"
17:       invert
18:     />
19:     <div class="space-y-10 wrapper py-16 padded-x">
20:       <BlogShowcase article-category="all">
21:         <template #title>
22:           <CommonTitle
23:             :title="{
24:               main: 'Latest Blog Posts',
25:               subtitle: 'Keep up to date with the latest AstronEra posts',
26:             }"
27:           />
28:         </template>
29:         <NuxtLink to="/blog/all">
30:           <PrimeButton to="/blog/all"> All Articles </PrimeButton>
31:         </NuxtLink>
32:       </BlogShowcase>
33:       <!-- <BlogNews :news-category="'all'" /> -->
34:     </div>
35:   </div>
36: </template>
37: 
38: <style scoped></style>
```

## File: apps/website/pages/policies/[name].vue
```vue
 1: <script setup lang="ts">
 2: const route = useRoute()
 3: const name = computed(() => String(route.params.name))
 4: 
 5: const { error, data: policy } = await useAsyncData(`policies-${name.value}`, () =>
 6:   queryContent('/policies').where({ _path: route.fullPath }).findOne(),
 7: )
 8: 
 9: if (error.value) {
10:   console.error(error.value)
11: }
12: </script>
13: 
14: <template>
15:   <div
16:     class="grid grid-cols-[minmax(300px,700px)] mx-auto xl:grid-cols-[minmax(240px,1fr)_minmax(660px,740px)_minmax(240px,1fr)] xl:gap-8 justify-center prose lg:prose-xl prose-stone prose-invert pt-32"
17:   >
18:     <div class="xl:col-start-2">
19:       <h1>{{ policy.title }}</h1>
20:       <ContentRenderer :value="policy">
21:         <div class="pb-12">
22:           <div class="mx-auto space-y-8">
23:             <ContentRendererMarkdown :value="policy.body">
24:               {{ policy.body }}
25:             </ContentRendererMarkdown>
26:           </div>
27:         </div>
28:       </ContentRenderer>
29:     </div>
30:   </div>
31: </template>
32: 
33: <style scoped></style>
```

## File: apps/website/pages/projects/dark-sky-conference-2023.vue
```vue
  1: <script setup lang="ts">
  2: definePageMeta({
  3:   name: 'Conference',
  4: })
  5: 
  6: // !todo: low priority - reduce the amount of text at the beginning of the page
  7: // !todo: low priority - fix the styling of the conference schedule
  8: // consider: creating a 20-30 second video of the conference to use as the Hero Section
  9: </script>
 10: 
 11: <template>
 12:   <div>
 13:     <CommonHero
 14:       :img="{
 15:         src: 'conference/photos/IDSPAC23-ruchira-huchgol.jpg',
 16:         alt: 'Featured image for the Dark Sky Conservation India Conference',
 17:       }"
 18:       :title="{
 19:         centered: false,
 20:         main: 'Dark Sky Conservation India Conference',
 21:         subtitle: '24th-26th November 2023',
 22:       }"
 23:       position="object-top"
 24:     >
 25:       <IBImage
 26:         :img="{
 27:           width: '160px',
 28:           height: '160px',
 29:           src: 'conference/conference-logo.png',
 30:           alt: 'Conference logo',
 31:         }"
 32:         class="overflow-hidden rounded-full"
 33:       />
 34:       <IBImage
 35:         :img="{
 36:           src: 'images/trusted/dst.png',
 37:         }"
 38:         class="mx-auto h-16 lg:h-20"
 39:       />
 40:     </CommonHero>
 41:     <div class="wrapper padded-x flex flex-col gap-6 py-6 xl:gap-12 xl:py-12">
 42:       <ConferenceAbout />
 43:       <div class="flex flex-col gap-6 xl:gap-12">
 44:         <div class="flex flex-col items-start gap-6 lg:flex-row xl:gap-12">
 45:           <div class="space-y-4">
 46:             <p class="text-sm font-bold uppercase text-primary-700">
 47:               Conference Summary
 48:             </p>
 49:             <p>
 50:               The conference effectively laid the groundwork for substantive discussions concerning
 51:               the preservation of dark skies and the promotion of astro-tourism in India,
 52:               successfully achieving its stated goals and objectives. In light of the insights
 53:               garnered from this conference, the subsequent steps entail the organization of an
 54:               in-person workshop spanning 2-3 days, aimed at convening stakeholders, government
 55:               officials, engineers, architects, and space policy representatives.
 56:             </p>
 57:             <p>
 58:               This workshop will be instrumental in addressing the issue of light pollution and
 59:               formulating actionable solutions, thereby taking a significant stride toward
 60:               preserving dark and tranquil skies.
 61:             </p>
 62:           </div>
 63:           <div class="space-y-4">
 64:             <p>
 65:               Additionally, plans are underway to convene an online summit to synthesize the
 66:               discussions held and distill key themes for consideration in future in-person
 67:               conferences.
 68:             </p>
 69:             <p>
 70:               Moreover, a collaborative endeavor is ongoing to host a dedicated in-person conference
 71:               focusing on "Preserving the Night Sky for Astronomy and Sustainable Development,"
 72:               which will bring together government officials and industry experts to engage in
 73:               substantive discussions and collectively devise pragmatic solutions. Subsequent
 74:               initiatives will include the dissemination of research findings through the
 75:               publication of articles, reports, and papers across various platforms, including the
 76:               CAP conference, IAU publications, and esteemed scientific journals.
 77:             </p>
 78:           </div>
 79:         </div>
 80:         <div>
 81:           <IBImage
 82:             :img="{
 83:               src: 'conference/photos/IDSPAC23-group-photo.jpg',
 84:               alt: 'Manu Allaya resort at night with the milky way in the background',
 85:               width: '900',
 86:               height: '460',
 87:             }"
 88:             class="mx-auto w-full rounded-md"
 89:           />
 90:           <p class="w-full p-4 text-center"> Thank you to everyone who made this possible! ❤️ </p>
 91:           <div class="flex items-center justify-center">
 92:             <a
 93:               href="/conference/full-conference-report.pdf"
 94:               target="_blank"
 95:             >
 96:               <PrimeButton> View Full Conference Report </PrimeButton>
 97:             </a>
 98:           </div>
 99:         </div>
100:       </div>
101:     </div>
102:     <div class="wrapper padded-x flex flex-col gap-6 py-6 xl:gap-12 xl:py-12">
103:       <ConferenceVenue class="py-16" />
104:       <ConferenceScheduleTabs />
105:       <ConferenceSpeakers />
106:     </div>
107:   </div>
108: </template>
```

## File: apps/website/pages/team/[name].vue
```vue
 1: <template>
 2:   <div
 3:     v-if="user"
 4:     class="relative"
 5:   >
 6:     <IBImageHero
 7:       :img="{
 8:         src: 'images/team/cartoon_of_adult_astronomers_with_a_telescope.jpg',
 9:         alt: 'AstronEra team page hero image, cartoon of astronomers looking at the stars',
10:       }"
11:       :title="{
12:         main: user.name,
13:         subtitle: `${user.position.title} at AstronEra`,
14:       }"
15:     />
16: 
17:     <div class="wrapper padded-x flex flex-wrap items-start justify-center xl:pb-12">
18:       <div
19:         class="background border-color easy-in-out w-full transform rounded-b-md border backdrop-blur-lg backdrop-filter duration-200"
20:       >
21:         <div class="-mt-16 flex items-center justify-start lg:-mt-24">
22:           <IBImage
23:             :img="{
24:               src: user.avatar,
25:               alt: user.name,
26:             }"
27:             class="background h-32 w-32 rounded-full p-2 lg:h-48 lg:w-48"
28:           />
29:         </div>
30:         <div class="grid grid-cols-1 gap-20 p-4 lg:grid-cols-2 xl:p-8">
31:           <div class="flex flex-col gap-3">
32:             <h3 class="mb-4 text-2xl font-semibold"> About {{ user.given_name }} </h3>
33:             <p
34:               v-for="(section, i) in user.bio"
35:               :key="i"
36:               :class="i === 0 ? 'text-xl' : 'text-base'"
37:             >
38:               {{ section }}
39:             </p>
40:           </div>
41:           <!-- <div v-if="user.achievements.length > 0">
42:             <h4 class="mb-4 text-xl font-semibold">Achievements</h4>
43:             <div
44:               v-for="(achievement, i) in user?.achievements"
45:               :key="i"
46:               class="space-y-2"
47:             >
48:               <p class="font-semibold text-base">{{ achievement.title }}</p>
49:               <p class="text-sm">{{ achievement.body }}</p>
50:             </div>
51:           </div> -->
52:           <div>
53:             <h4 class="mb-4 text-xl font-semibold"> Connect with {{ user.given_name }} </h4>
54:             <AppSocialBlock
55:               :socials="user.socials"
56:               :has-title="false"
57:               position="justify-start"
58:             />
59:           </div>
60:         </div>
61:       </div>
62:     </div>
63:   </div>
64: </template>
65: 
66: <script setup lang="ts">
67: import team from '@/data/home/team.json'
68: 
69: const { name } = useRoute().params
70: const user = computed(() =>
71:   team.find((user) => user.name.toLowerCase().replaceAll(' ', '-') === name),
72: )
73: 
74: definePageMeta({
75:   name: 'TeamIndividual',
76: })
77: </script>
78: 
79: <style scoped></style>
```

## File: apps/website/pages/team/index.vue
```vue
 1: <script setup lang="ts">
 2: import teamMembers from '@/data/home/team.json'
 3: 
 4: definePageMeta({
 5:   name: 'Team',
 6: })
 7: </script>
 8: 
 9: <template>
10:   <div>
11:     <IBImageHero
12:       :img="{
13:         src: 'images/team/cartoon_of_adult_astronomers_with_a_telescope.jpg',
14:         alt: 'AstronEra team page hero image, cartoon of astronomers looking at the stars',
15:       }"
16:       :title="{
17:         main: 'The AstronEra Team',
18:       }"
19:       fit="cover"
20:       object-position="object-top"
21:     />
22: 
23:     <div class="flex flex-col max-w-6xl gap-12 padded-x mx-auto lg:gap-24 lg:py-24 wrapper">
24:       <div class="flex flex-col space-y-4">
25:         <p class="max-w-sm text-base leading-normal">
26:           AstronEra thrives thanks to its dedicated team. Passionate about astronomy and education?
27:         </p>
28:         <p class="max-w-md text-base leading-normal font-bold">
29:           Contact Shweta or Mac to join us.
30:         </p>
31:       </div>
32:       <div
33:         class="grid w-full grid-cols-1 gap-6 md:grid-cols-3 lg:grid-cols-4 md:gap-8 lg:gap-12 pb-6"
34:       >
35:         <LazyTeamCard
36:           v-for="member in teamMembers"
37:           :key="`astronera-team-member-${member.id}`"
38:           :member="member"
39:         />
40:       </div>
41:     </div>
42:   </div>
43: </template>
```

## File: apps/website/pages/[...404].vue
```vue
 1: <!-- pages/[...404].vue -->
 2: <template>
 3:   <div class="flex flex-col items-center justify-center min-h-screen">
 4:     <PrimeCard>
 5:       <h1 class="text-9xl font-bold text-gray-800 dark:text-gray-200 mb-4">404</h1>
 6:       <h2 class="text-2xl text-gray-600 dark:text-gray-400 mb-8">Page Not Found</h2>
 7:       <PrimeButton
 8:         class="p-button-lg"
 9:         @click="goHome"
10:       >
11:         Go Home
12:         <Icon
13:           name="mdi:home"
14:           class="ml-2"
15:         />
16:       </PrimeButton>
17:     </PrimeCard>
18:   </div>
19: </template>
20: 
21: <script setup lang="ts">
22: import { useRouter } from 'vue-router'
23: 
24: const router = useRouter()
25: 
26: const goHome = () => {
27:   router.push('/')
28: }
29: 
30: useHead({
31:   title: '404 - Page Not Found',
32:   meta: [{ name: 'robots', content: 'noindex, nofollow' }],
33: })
34: </script>
```

## File: apps/website/pages/403.vue
```vue
 1: <template>
 2:   <div class="flex items-center justify-center min-h-screen">
 3:     <PrimeCard class="w-full max-w-md">
 4:       <template #title>
 5:         <div class="flex items-center justify-center text-2xl font-bold">
 6:           <Icon
 7:             name="mdi:alert-circle"
 8:             class="mr-2"
 9:           />
10:           <span>403 Forbidden</span>
11:         </div>
12:       </template>
13:       <template #content>
14:         <div class="text-center">
15:           <p class="mb-6">
16:             Access to this resource is forbidden. If you believe this is an error, please contact
17:             the site administrator.
18:           </p>
19:           <PrimeButton
20:             label="Go to Homepage"
21:             class="w-full"
22:             @click="goHome"
23:           >
24:             <template #icon>
25:               <Icon name="mdi:home" />
26:             </template>
27:           </PrimeButton>
28:         </div>
29:       </template>
30:     </PrimeCard>
31:   </div>
32: </template>
33: 
34: <script setup lang="ts">
35: import { useRouter } from 'vue-router'
36: 
37: const router = useRouter()
38: 
39: const goHome = (): void => {
40:   router.push('/')
41: }
42: 
43: useHead({
44:   title: '403 Forbidden',
45:   meta: [{ name: 'robots', content: 'noindex, nofollow' }],
46: })
47: </script>
```

## File: apps/website/pages/about.vue
```vue
 1: <template>
 2:   <div>
 3:     <IBImageHero
 4:       :img="about.images[0]"
 5:       :title="{
 6:         main: 'The AstronEra Journey',
 7:       }"
 8:       fit="cover"
 9:       object-position="object-top"
10:     />
11:     <div class="container mx-auto flex flex-col gap-12 xl:gap-24 xl:py-24">
12:       <div class="grid grid-cols-1 items-start gap-8 lg:grid-cols-2 lg:gap-12">
13:         <LandingGlass>
14:           <h3 class="pb-4 text-2xl font-bold leading-7"> The Mission </h3>
15:           <p class="pb-3 text-base font-normal">
16:             {{ about.mission }}
17:           </p>
18:         </LandingGlass>
19:         <LandingGlass>
20:           <h3 class="pb-4 text-2xl font-bold leading-7"> The Vision </h3>
21:           <p class="pb-3 text-base font-normal">
22:             {{ about.vision }}
23:           </p>
24:         </LandingGlass>
25:         <div class="flex flex-col gap-8">
26:           <div
27:             v-for="section in about.sections"
28:             :key="section.title"
29:             class="w-full text-left leading-6"
30:           >
31:             <h3 class="pb-4 text-2xl font-bold leading-7 xl:pb-8">
32:               {{ section.title }}
33:             </h3>
34:             <p
35:               v-for="item in section.paragraphs"
36:               :key="item"
37:               class="pb-3 text-base font-normal"
38:             >
39:               {{ item }}
40:             </p>
41:           </div>
42:         </div>
43: 
44:         <div class="h-auto w-full">
45:           <h3 class="pb-4 text-2xl font-bold leading-7"> Timeline </h3>
46:           <AboutTimeline :timeline="about.timeline" />
47:         </div>
48:       </div>
49:     </div>
50:   </div>
51: </template>
52: 
53: <script setup lang="ts">
54: import about from '@/data/home/about.json'
55: 
56: definePageMeta({
57:   name: 'About',
58: })
59: </script>
```

## File: apps/website/pages/contact.vue
```vue
 1: <template>
 2:   <div class="mx-auto w-full">
 3:     <div class="relative flex flex-col overflow-hidden md:block">
 4:       <div>
 5:         <div
 6:           class="right-0 z-30 gap-4 flex min-h-full w-full flex-col items-start from-transparent p-4 text-left md:absolute md:w-2/5 md:items-end md:justify-center md:bg-gradient-to-r md:text-right lg:gap-10 lg:px-8 lg:py-12 via-zinc-900 to-zinc-900"
 7:         >
 8:           <div class="md:w-96">
 9:             <h1 class="pb-2 text-2xl font-bold leading-10 sm:text-4xl md:text-5xl"> LET’S TALK </h1>
10:             <p class="py-4 text-base leading-normal md:mt-2">
11:               We'll happily answer any questions <br />you have about AstronEra
12:             </p>
13:           </div>
14:           <div class="flex flex-col gap-3 md:max-w-48">
15:             <div class="space-y-1">
16:               <h3 class="text-xl font-semibold"> Email </h3>
17:               <NuxtLink
18:                 to="mailto:connectus@astronera.org"
19:                 target="_blank"
20:               >
21:                 connectus@astronera.org
22:               </NuxtLink>
23:             </div>
24:             <div class="space-y-1">
25:               <h3 class="text-xl font-semibold"> Phone </h3>
26:               <NuxtLink
27:                 to="tel: +91-880-610-7510"
28:                 target="_blank"
29:               >
30:                 +91 880 610 7510
31:               </NuxtLink>
32:             </div>
33:             <div class="space-y-1">
34:               <h3 class="text-xl font-semibold"> Address </h3>
35:               <p>
36:                 Prachi, 392/6B, Atreya Soc., Deep Bangla Chowk, Model Colony, Pune, Maharashtra
37:                 411016
38:               </p>
39:             </div>
40:           </div>
41:           <AppSocialBlock
42:             :socials="socials"
43:             :icon-size="30"
44:           />
45:         </div>
46:       </div>
47:       <iframe
48:         id="iframe"
49:         :style="
50:           color.value === 'dark' ? { filter: ' grayscale(100%) invert(92%) contrast(83%)' } : {}
51:         "
52:         class="right-0 top-0 block min-h-[600px] w-full md:min-h-screen"
53:         src="https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d15132.046394090614!2d73.831345!3d18.528378!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3bc2bf781273177b%3A0x748518923253f332!2sAstron%20Era!5e0!3m2!1sen!2sin!4v1687445031830!5m2!1sen!2sin"
54:         style="border: 0"
55:         referrerpolicy="no-referrer-when-downgrade"
56:       />
57:     </div>
58:   </div>
59: </template>
60: 
61: <script setup lang="ts">
62: import socials from '@/data/home/socials.json'
63: 
64: const color = useColorMode()
65: 
66: const contactData = {
67:   Email: '',
68:   Phone: '',
69:   Location: '',
70: }
71: 
72: definePageMeta({
73:   name: 'Contact',
74: })
75: </script>
76: 
77: <style scoped>
78: @media (max-width: 768px) {
79:   #iframe {
80:     height: 50vh !important;
81:   }
82: }
83: </style>
```

## File: apps/website/pages/index.vue
```vue
  1: <script setup lang="ts">
  2: definePageMeta({
  3:   name: 'Home',
  4: })
  5: // !todo:low look into subtle black and white images or patterns to give the background some flair
  6: 
  7: const features = [
  8:   {
  9:     icon: 'mdi:comment-text-outline',
 10:     title: 'Comments',
 11:     description: 'Highlight comments on the screen, & engage with your audience in real-time.',
 12:     link: '#',
 13:     linkText: 'Explore More',
 14:   },
 15:   {
 16:     icon: 'mdi:chat-outline',
 17:     title: 'Unlimited Chat',
 18:     description:
 19:       'Drive interaction among your users with live messaging features on your video streams.',
 20:     link: '#',
 21:     linkText: 'Explore more',
 22:   },
 23:   {
 24:     icon: 'mdi:share-variant',
 25:     title: 'Share Media',
 26:     description: 'Enhance user collaboration with exchange of images, videos, gifs & documents.',
 27:     link: '#',
 28:     linkText: 'Explore More',
 29:   },
 30:   {
 31:     icon: 'mdi:comment-text-outline',
 32:     title: 'Comments',
 33:     description: 'Highlight comments on the screen, & engage with your audience in real-time.',
 34:     link: '#',
 35:     linkText: 'Explore More',
 36:   },
 37:   {
 38:     icon: 'mdi:chat-outline',
 39:     title: 'Unlimited Chat',
 40:     description:
 41:       'Drive interaction among your users with live messaging features on your video streams.',
 42:     link: '#',
 43:     linkText: 'Explore more',
 44:   },
 45:   {
 46:     icon: 'mdi:share-variant',
 47:     title: 'Share Media',
 48:     description: 'Enhance user collaboration with exchange of images, videos, gifs & documents.',
 49:     link: '#',
 50:     linkText: 'Explore More',
 51:   },
 52:   {
 53:     icon: 'mdi:comment-text-outline',
 54:     title: 'Comments',
 55:     description: 'Highlight comments on the screen, & engage with your audience in real-time.',
 56:     link: '#',
 57:     linkText: 'Explore More',
 58:   },
 59:   {
 60:     icon: 'mdi:chat-outline',
 61:     title: 'Unlimited Chat',
 62:     description:
 63:       'Drive interaction among your users with live messaging features on your video streams.',
 64:     link: '#',
 65:     linkText: 'Explore more',
 66:   },
 67:   {
 68:     icon: 'mdi:share-variant',
 69:     title: 'Share Media',
 70:     description: 'Enhance user collaboration with exchange of images, videos, gifs & documents.',
 71:     link: '#',
 72:     linkText: 'Explore More',
 73:   },
 74:   {
 75:     icon: 'mdi:share-variant',
 76:     title: 'Share Media',
 77:     description: 'Enhance user collaboration with exchange of images, videos, gifs & documents.',
 78:     link: '#',
 79:     linkText: 'Explore More',
 80:   },
 81:   {
 82:     icon: 'mdi:share-variant',
 83:     title: 'Share Media',
 84:     description: 'Enhance user collaboration with exchange of images, videos, gifs & documents.',
 85:     link: '#',
 86:     linkText: 'Explore More',
 87:   },
 88:   {
 89:     icon: 'mdi:share-variant',
 90:     title: 'Share Media',
 91:     description: 'Enhance user collaboration with exchange of images, videos, gifs & documents.',
 92:     link: '#',
 93:     linkText: 'Explore More',
 94:   },
 95: ]
 96: </script>
 97: 
 98: <template>
 99:   <div class="relative z-0">
100:     <HomeHero />
101:     <div class="wrapper padded-x">
102:       <HomeTrusted />
103:       <LazyHomeFeatures class="py-16 md:py-24" />
104:       <LazyHomeHeading
105:         heading="That's not all..."
106:         subheading="We Have Some Big Plans!"
107:         class="pb-16 md:pb-24"
108:       />
109:       <!-- <HomeFeatureGroup
110:         title="Supercharge Live Streams With On-brand Features"
111:         description="OnTheFly gives you all the tools to engage your audience with captivating streams."
112:         :features="features"
113:       />
114:       -->
115: 
116:       <!-- <LazyHomeFeatureTabs class="pb-16 md:pb-24" /> -->
117:     </div>
118:     <div class="wrapper padded-x mx-auto flex flex-col py-16 md:py-24">
119:       <LazyHomeTestimonial class="pb-6 xl:pb-12" />
120:     </div>
121:   </div>
122: </template>
123: 
124: <style scoped></style>
```

## File: apps/website/pages/landing.vue
```vue
 1: <script setup lang="ts">
 2: // No GSAP-related code here anymore
 3: </script>
 4: 
 5: <template>
 6:   <div>
 7:     <LandingHero />
 8: 
 9:     <main class="space-y-48 py-24 overflow-hidden max-w-full">
10:       <LazyLandingFeatures class="container" />
11:       <LazyLandingProductSteps class="container" />
12:       <LazyLandingTestimonials class="max-w-full w-full" />
13:       <LandingTrusted class="container" />
14:       <LazyLandingFuture class="container" />
15:       <LazyLandingPricing class="container" />
16:       <LazyLandingWebSeries class="container" />
17:     </main>
18:   </div>
19: </template>
```

## File: apps/website/pages/too-deep.vue
```vue
 1: <!-- pages/too-deep.vue -->
 2: <template>
 3:   <div class="flex flex-col items-center justify-center min-h-screen p-4">
 4:     <PrimeCard>
 5:       <template #title>
 6:         <h1 class="text-4xl font-bold mb-4">Path Too Deep</h1>
 7:       </template>
 8:       <template #content>
 9:         <p class="text-xl mb-8">
10:           The requested URL contains too many nested paths. <br />
11:           Please try a shorter URL or navigate from our homepage.
12:         </p>
13:         <PrimeButton
14:             class="w-full"
15:           @click="goHome"
16:         >
17:           Go Home
18:           <Icon
19:             name="mdi:home"
20:             class="ml-2"
21:           />
22:         </PrimeButton>
23:       </template>
24:     </PrimeCard>
25:   </div>
26: </template>
27: 
28: <script setup lang="ts">
29: import { useRouter } from 'vue-router'
30: 
31: const router = useRouter()
32: 
33: const goHome = () => {
34:   router.push('/')
35: }
36: 
37: useHead({
38:   title: 'Path Too Deep',
39:   meta: [{ name: 'robots', content: 'noindex, nofollow' }],
40: })
41: </script>
```

## File: apps/website/server/middleware/anomaly-detection.ts
```typescript
 1: import { defineEventHandler, type H3Event } from 'h3'
 2: import { useLogger } from '@ib/logger'
 3: 
 4: const logger = useLogger()
 5: // Load thresholds from environment variables or use default values
 6: const THRESHOLD_REQUESTS_PER_MINUTE = Number(process.env.THRESHOLD_REQUESTS_PER_MINUTE ?? 100)
 7: const THRESHOLD_UNIQUE_PATHS_PER_MINUTE = Number(
 8:   process.env.THRESHOLD_UNIQUE_PATHS_PER_MINUTE ?? 50,
 9: )
10: const THRESHOLD_DEPTH = Number(process.env.THRESHOLD_DEPTH ?? 6)
11: 
12: // Initialize counters
13: let requestCount = 0
14: const uniquePaths = new Set<string>()
15: let lastResetTime = Date.now()
16: 
17: // Function to reset counters
18: function resetCounters() {
19:   requestCount = 0
20:   uniquePaths.clear()
21:   lastResetTime = Date.now()
22: }
23: 
24: // Function to check for anomalies
25: function checkAnomalies(path: string): string[] {
26:   const now = Date.now()
27: 
28:   // Reset counters if more than a minute has passed
29:   if (now - lastResetTime > 60000) {
30:     resetCounters()
31:   }
32: 
33:   requestCount++
34:   uniquePaths.add(path)
35: 
36:   const pathDepth = path.split('/').filter(Boolean).length
37: 
38:   const anomalies: string[] = []
39: 
40:   if (requestCount > THRESHOLD_REQUESTS_PER_MINUTE) {
41:     anomalies.push(`High request rate: ${requestCount} requests/minute`)
42:   }
43: 
44:   if (uniquePaths.size > THRESHOLD_UNIQUE_PATHS_PER_MINUTE) {
45:     anomalies.push(`High number of unique paths accessed: ${uniquePaths.size} in the last minute`)
46:   }
47: 
48:   if (pathDepth > THRESHOLD_DEPTH) {
49:     anomalies.push(`Unusually deep path accessed: ${path} (depth: ${pathDepth})`)
50:   }
51: 
52:   return anomalies
53: }
54: 
55: function notifyAnomalies(anomalies: string[]) {
56:   logger.error('Anomalies detected:', anomalies)
57:   // Future implementation: Send notifications to monitoring services
58: }
59: 
60: // Define the middleware event handler
61: export default defineEventHandler((event: H3Event) => {
62:   const url = event.node.req.url || '/'
63:   const host = event.node.req.headers.host || 'localhost'
64:   const path = new URL(url, `http://${host}`).pathname
65: 
66:   if (import.meta.prerender) {
67:     logger.info('crawlerGuard: Skipping middleware during prerender (build phase)')
68:     return
69:   }
70: 
71:   const anomalies = checkAnomalies(path)
72:   if (anomalies.length > 0) {
73:     notifyAnomalies(anomalies)
74:   }
75: 
76:   // Continue processing the request
77: })
```

## File: apps/website/server/middleware/crawler-guard.ts
```typescript
  1: import dns from 'dns/promises'
  2: import { defineEventHandler, getHeaders, setResponseStatus, send } from 'h3'
  3: import { useLogger } from '@ib/logger'
  4: 
  5: const logger = useLogger()
  6: 
  7: const ALLOWED_CRAWLER_PATTERNS: RegExp[] = [
  8:   /googlebot/i,
  9:   /bingbot/i,
 10:   /yandexbot/i,
 11:   /duckduckbot/i,
 12:   /baiduspider/i,
 13:   /facebookexternalhit/i,
 14:   /twitterbot/i,
 15:   /rogerbot/i,
 16:   /linkedinbot/i,
 17:   /embedly/i,
 18:   /quora link preview/i,
 19:   /showyoubot/i,
 20:   /outbrain/i,
 21:   /pinterest/i,
 22:   /slackbot/i,
 23:   /vkShare/i,
 24:   /applebot/i,
 25:   /Exabot/i,
 26:   /Sogou Spider/i,
 27:   /SemrushBot/i,
 28:   /AhrefsBot/i,
 29:   /MJ12bot/i,
 30:   /DotBot/i,
 31:   /redditbot/i,
 32:   /Discordbot/i,
 33:   /BLEXBot/i,
 34: ]
 35: 
 36: const HOSTNAME_PATTERNS: { [key: string]: RegExp[] } = {
 37:   googlebot: [/\.googlebot\.com$/i, /\.google\.com$/i],
 38:   bingbot: [/\.search\.msn\.com$/i],
 39:   yandexbot: [/\.yandex\.ru$/i],
 40:   duckduckbot: [/\.duckduckgo\.com$/i],
 41:   baiduspider: [/\.baidu\.com$/i],
 42:   facebookexternalhit: [/\.facebook\.com$/i],
 43:   twitterbot: [/\.twitter\.com$/i],
 44:   linkedinbot: [/\.linkedin\.com$/i],
 45:   pinterest: [/\.pinterest\.com$/i],
 46:   redditbot: [/\.reddit\.com$/i],
 47:   // Add patterns for other crawlers as needed
 48: }
 49: 
 50: const MAX_PATH_DEPTH = 6
 51: 
 52: // Simple in-memory cache for reverse DNS results
 53: const rdnsCache = new Map<string, { hostnames: string[]; expiresAt: number }>()
 54: const RDNS_CACHE_TTL = 60 * 60 * 1000 // 1 hour in milliseconds
 55: 
 56: export default defineEventHandler(async (event) => {
 57:   if (import.meta.prerender) {
 58:     logger.info('crawlerGuard: Skipping middleware during prerender (build phase)')
 59:     return
 60:   }
 61: 
 62:   const url = new URL(event.node.req.url || '/', `http://${event.node.req.headers.host}`)
 63: 
 64:   const internalPaths = ['/_ipx/', '/api/', '/_nuxt/', '/favicon.ico']
 65:   if (internalPaths.some((prefix) => url.pathname.startsWith(prefix))) {
 66:     // Skip middleware processing for internal routes
 67:     return
 68:   }
 69: 
 70:   const headers = getHeaders(event)
 71:   const userAgent = headers['user-agent'] || ''
 72:   const clientIP =
 73:     event.node.req.socket.remoteAddress || headers['x-forwarded-for'] || headers['x-real-ip'] || ''
 74: 
 75:   // Detect if the request is from a crawler
 76:   const isCrawler = /bot|crawler|spider|crawling/i.test(userAgent)
 77:   const matchedPattern = ALLOWED_CRAWLER_PATTERNS.find((pattern) => pattern.test(userAgent))
 78:   const isAllowedCrawler = !!matchedPattern
 79: 
 80:   // Calculate path depth
 81:   const path = url.pathname
 82:   const pathDepth = path.split('/').filter(Boolean).length
 83: 
 84:   if (isCrawler) {
 85:     const cacheEntry = rdnsCache.get(clientIP)
 86:     let hostnames: string[] = []
 87: 
 88:     const currentTime = Date.now()
 89:     if (cacheEntry && cacheEntry.expiresAt > currentTime) {
 90:       hostnames = cacheEntry.hostnames
 91:     } else {
 92:       try {
 93:         hostnames = await dns.reverse(clientIP)
 94:         rdnsCache.set(clientIP, { hostnames, expiresAt: currentTime + RDNS_CACHE_TTL })
 95:       } catch (err: any) {
 96:         logger.warn(`Reverse DNS Lookup Failed for IP: ${clientIP} | Error: ${err.message}`)
 97:         hostnames = []
 98:       }
 99:     }
100: 
101:     logger.info({
102:       event: 'crawler_access',
103:       userAgent,
104:       clientIP,
105:       hostnames,
106:     })
107: 
108:     // Hostname Verification
109:     const crawlerName = matchedPattern?.source.toLowerCase()
110:     if (crawlerName && HOSTNAME_PATTERNS[crawlerName]) {
111:       const patterns = HOSTNAME_PATTERNS[crawlerName]
112:       const isValidHostname = hostnames.some((hostname) =>
113:         patterns.some((pattern) => pattern.test(hostname)),
114:       )
115: 
116:       if (!isValidHostname) {
117:         logger.warn(`Hostname verification failed for crawler: ${userAgent} | IP: ${clientIP}`)
118:         setResponseStatus(event, 403)
119:         send(event, '403 Forbidden')
120:         return
121:       }
122:     }
123:   }
124: 
125:   // Access Control Logic
126:   if (isCrawler && !isAllowedCrawler) {
127:     logger.warn(`Unrecognized crawler detected: ${userAgent} | IP: ${clientIP}`)
128:     setResponseStatus(event, 403)
129:     send(event, '403 Forbidden')
130:     return
131:   }
132: 
133:   if (pathDepth > MAX_PATH_DEPTH) {
134:     logger.warn(`Accessing deep path: ${path} | IP: ${clientIP}`)
135:     setResponseStatus(event, 403)
136:     send(event, '403 Forbidden')
137:     return
138:   }
139: 
140:   // Continue processing the request
141: })
```

## File: apps/website/types/articles.ts
```typescript
  1: import { z } from 'zod'
  2: 
  3: export const articleStatusSchema = z.enum(['published', 'draft', 'unpublished', 'archived'])
  4: export const dateSchema = z.string().datetime()
  5: 
  6: const isUUID = (value: string): boolean => {
  7:   const regex = /^[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i
  8:   return regex.test(value)
  9: }
 10: 
 11: // Custom Zod validation
 12: const UUIDSchema = z.string().refine(isUUID, {
 13:   message: 'String must be a valid UUID',
 14: })
 15: 
 16: // ARTICLE CATEGORIES
 17: export const articleCategorySchema = z.enum([
 18:   'all',
 19:   'people-of-space',
 20:   'space-exploration',
 21:   'dark-sky-conservation',
 22:   'sustainable-development',
 23: ])
 24: export type ArticleCategoriesT = z.infer<typeof articleCategorySchema>
 25: export const CATEGORIES: ArticleCategoriesT[] = [
 26:   'all',
 27:   'people-of-space',
 28:   'space-exploration',
 29:   'dark-sky-conservation',
 30:   'sustainable-development',
 31: ]
 32: 
 33: // ARTICLE TAGS
 34: export const articleTagSchema = z.enum([
 35:   'solar system',
 36:   'black holes',
 37:   'galaxies',
 38:   'nebulae',
 39:   'stars',
 40:   'planets',
 41:   'moons',
 42:   'comets',
 43:   'asteroids',
 44:   'telescopes',
 45:   'radio telescopes',
 46:   'space probes',
 47:   'exoplanets',
 48:   'dark matter',
 49:   'dark energy',
 50:   'astrophotography',
 51:   'space missions',
 52:   'big bang',
 53:   'supernovae',
 54:   'astronomy events',
 55:   'astrobiology',
 56:   'astrochemistry',
 57:   'cosmic rays',
 58:   'space weather',
 59:   'astronomy history',
 60:   'astrology',
 61:   'alien life',
 62:   'space travel',
 63:   'gravitational waves',
 64:   'interstellar medium',
 65:   'orion',
 66:   'hubble space telescope',
 67:   'james webb space telescope',
 68:   'nasa',
 69:   'esa',
 70:   'spacex',
 71:   'milky way',
 72:   'andromeda',
 73:   'event horizon telescope',
 74:   'astroinformatics',
 75:   'multiverse',
 76:   'space station',
 77:   'astronomy software',
 78:   'binary stars',
 79:   'mars rover',
 80:   'blue moon',
 81:   'solar eclipse',
 82:   'lunar eclipse',
 83:   'satellites',
 84:   'international space station',
 85:   'sky map apps',
 86:   'astro tourism',
 87: ])
 88: export type ArticleTagsT = z.infer<typeof articleTagSchema>
 89: export const TAGS: ArticleTagsT[] = [
 90:   'solar system',
 91:   'black holes',
 92:   'galaxies',
 93:   'nebulae',
 94:   'stars',
 95:   'planets',
 96:   'moons',
 97:   'comets',
 98:   'asteroids',
 99:   'telescopes',
100:   'radio telescopes',
101:   'space probes',
102:   'exoplanets',
103:   'dark matter',
104:   'dark energy',
105:   'astrophotography',
106:   'space missions',
107:   'big bang',
108:   'supernovae',
109:   'astronomy events',
110:   'astrobiology',
111:   'astrochemistry',
112:   'cosmic rays',
113:   'space weather',
114:   'astronomy history',
115:   'astrology',
116:   'alien life',
117:   'space travel',
118:   'gravitational waves',
119:   'interstellar medium',
120:   'orion',
121:   'hubble space telescope',
122:   'james webb space telescope',
123:   'nasa',
124:   'esa',
125:   'spacex',
126:   'milky way',
127:   'andromeda',
128:   'event horizon telescope',
129:   'astroinformatics',
130:   'multiverse',
131:   'space station',
132:   'astronomy software',
133:   'binary stars',
134:   'mars rover',
135:   'blue moon',
136:   'solar eclipse',
137:   'lunar eclipse',
138:   'satellites',
139:   'international space station',
140:   'sky map apps',
141:   'astro tourism',
142: ]
143: 
144: // ARTICLE CARD
145: export const articleCardSchema = z.object({
146:   id: UUIDSchema,
147:   authorIds: z.array(z.number()),
148:   title: z
149:     .string()
150:     .min(2, 'Title must be at least 1 char long')
151:     .max(70, 'Title has a max length of 70 char'),
152:   description: z
153:     .string()
154:     .min(2, 'Description must be at least 160 char long')
155:     .max(280, 'Description has a max length of 280 char'),
156:   category: articleCategorySchema,
157:   keywords: z.object({
158:     primary: z.string(),
159:     secondary: z.array(z.string()).optional(),
160:   }),
161:   tags: z
162:     .array(articleTagSchema)
163:     .min(1, 'Minimum of 1 tag allowed')
164:     .max(3, 'Maximum of 3 tags allowed'),
165:   status: articleStatusSchema,
166:   featured_image: z.string(),
167:   publishedAt: dateSchema,
168:   updatedAt: dateSchema,
169:   isSSR: z.boolean().optional(),
170:   _path: z.string(),
171: })
172: export type ArticleCardT = z.infer<typeof articleCardSchema>
173: export const ARTICLE_CARD_PROPERTIES = [
174:   'id',
175:   'authorIds',
176:   'title',
177:   'description',
178:   'category',
179:   'tags',
180:   'status',
181:   'keywords',
182:   'featured_image',
183:   'publishedAt',
184:   'updatedAt',
185:   '_path',
186: ]
187: 
188: const authorSchema = z.object({
189:   name: z.object({
190:     given: z.string(),
191:     surname: z.string(),
192:     full: z.string(),
193:     title: z.string().optional(),
194:   }),
195:   avatar: z.string(),
196:   bio: z.object({
197:     short: z.string(),
198:     full: z.string(),
199:   }),
200:   socials: z.object({
201:     twitter: z.string().optional(),
202:     github: z.string().optional(),
203:     linkedin: z.string().optional(),
204:     facebook: z.string().optional(),
205:     instagram: z.string().optional(),
206:     youtube: z.string().optional(),
207:   }),
208:   sponsorLink: z.string().optional(),
209: })
210: 
211: export type AuthorT = z.infer<typeof authorSchema>
212: 
213: // ARTICLE FULL ARTICLE
214: export const articleFullSchema = articleCardSchema.extend({
215:   body: z.object({}).passthrough(), // passthrough allows any structure within the object
216:   version: z.number(),
217:   _id: z.string(),
218: })
219: export type ArticleFullT = z.infer<typeof articleFullSchema>
220: export const ARTICLE_FULL_PROPERTIES = [...ARTICLE_CARD_PROPERTIES, 'body', '_id', 'version']
```

## File: apps/website/types/authors.ts
```typescript
 1: import { z } from 'zod'
 2: 
 3: const AuthorSchema = z.object({
 4:   id: z.number().optional(),
 5:   name: z.string().nullable(),
 6:   link: z.string().nullable(),
 7:   image: z.string().nullable(),
 8: })
 9: 
10: export type AuthorType = z.infer<typeof AuthorSchema>
```

## File: apps/website/types/categories.ts
```typescript
1: import { z } from 'zod'
2: 
3: const CategorySchema = z.object({
4:   id: z.number().optional(),
5:   name: z.string(),
6: })
7: 
8: export type CategoryType = z.infer<typeof CategorySchema>
```

## File: apps/website/types/conference.ts
```typescript
 1: import { z } from 'zod'
 2: 
 3: const abstract = z
 4:   .object({
 5:     title: z.string(),
 6:     description: z.string(),
 7:   })
 8:   .optional()
 9: 
10: const speakerSchema = z.object({
11:   title: z.string().optional(),
12:   given_name: z.string(),
13:   surname: z.string(),
14:   professional_title: z.string(),
15:   bio: z.string(),
16:   abstract,
17:   avatar: z.string(),
18:   inPerson: z.boolean().optional(),
19:   featured: z.boolean().optional(),
20: })
21: 
22: export type SpeakerType = z.infer<typeof speakerSchema>
```

## File: apps/website/types/pages.ts
```typescript
 1: import { z } from 'zod'
 2: 
 3: export const PageSchema = z.object({
 4:   id: z.number(),
 5:   label: z.string(),
 6:   icon: z.string(),
 7:   slug: z.string(),
 8:   children: z
 9:     .array(
10:       z.object({
11:         id: z.number(),
12:         label: z.string(),
13:         icon: z.string(),
14:         slug: z.string(),
15:       }),
16:     )
17:     .optional(),
18: })
19: 
20: export type PageType = z.infer<typeof PageSchema>
```

## File: apps/website/types/roles.ts
```typescript
 1: import { z } from 'zod'
 2: 
 3: export const RoleSchema = z.object({
 4:   id: z.number(),
 5:   created_at: z.string().optional(),
 6:   name: z.string(),
 7:   body: z.string().optional(),
 8: })
 9: 
10: export type RoleType = z.infer<typeof RoleSchema>
```

## File: apps/website/types/tags.ts
```typescript
1: import { z } from 'zod'
2: 
3: const TagSchema = z.object({
4:   id: z.number().optional(),
5:   name: z.string(),
6: })
7: 
8: export type TagType = z.infer<typeof TagSchema>
```

## File: apps/website/types/team.ts
```typescript
 1: import { z } from 'zod'
 2: 
 3: export const PositionSchema = z.object({
 4:   title: z.string(),
 5:   description: z.string(),
 6:   joining: z.string(),
 7: })
 8: 
 9: export const SocialSchema = z.object({
10:   id: z.number(),
11:   platform: z.string(),
12:   url: z.string(),
13:   username: z.string(),
14: })
15: 
16: export const AchievementSchema = z.object({
17:   id: z.number(),
18:   title: z.string(),
19:   body: z.string(),
20:   url: z.string().optional(),
21: })
22: 
23: export const PublicitySchema = z.object({
24:   id: z.number(),
25:   title: z.string(),
26:   body: z.string(),
27:   url: z.string().optional(),
28: })
29: 
30: export const TeamMemberSchema = z.object({
31:   id: z.number(),
32:   name: z.string(),
33:   position: PositionSchema,
34:   avatar: z.string(),
35:   bio: z.string(),
36:   socials: z.array(SocialSchema),
37:   achievements: z.array(AchievementSchema),
38:   publicity: z.array(PublicitySchema),
39: })
40: 
41: export const TeamSchema = z.array(TeamMemberSchema)
42: 
43: // Infer types
44: export type PositionType = z.infer<typeof PositionSchema>
45: export type SocialType = z.infer<typeof SocialSchema>
46: export type AchievementType = z.infer<typeof AchievementSchema>
47: export type PublicityType = z.infer<typeof PublicitySchema>
48: export type TeamMemberType = z.infer<typeof TeamMemberSchema>
49: export type TeamType = z.infer<typeof TeamSchema>
```

## File: apps/website/types/types.d.ts
```typescript
1: import type * as BaseTypes from '../../layers/base/types'
2: 
3: declare global {
4:   export type { BaseTypes }
5: }
```

## File: apps/website/app.vue
```vue
 1: <template>
 2:   <div class="h-full w-full">
 3:     <NuxtLoadingIndicator />
 4:     <NuxtLayout>
 5:       <NuxtPage />
 6:     </NuxtLayout>
 7:     <!-- <PrimeToast position="bottom-right" /> -->
 8:   </div>
 9: </template>
10: 
11: <style>
12: html {
13:   margin: 0;
14:   padding: 0;
15: }
16: 
17: #__nuxt {
18:   width: 100%;
19:   height: 100%;
20:   padding: 0;
21:   margin: 0;
22: }
23: 
24: .layout-enter-active,
25: .layout-leave-active {
26:   transition: all 0.4s;
27: }
28: 
29: .layout-enter-from,
30: .layout-leave-to {
31:   opacity: 0;
32:   filter: blur(1rem);
33: }
34: </style>
```

## File: apps/website/error.vue
```vue
 1: <template>
 2:   <div class="flex h-auto items-center justify-center bg-gray-100">
 3:     <div class="max-w-md rounded-lg p-8 shadow-lg">
 4:       <h1 class="mb-4 text-3xl font-bold text-red-600"> An error occurred </h1>
 5:       <p class="text-lg mb-4">
 6:         {{ error.message }}
 7:       </p>
 8:       <p class="mb-2 text-sm text-gray-600"> Error ID: {{ error.errorId }} </p>
 9:       <p
10:         v-if="error.stack"
11:         class="mb-4 overflow-auto text-xs text-gray-500"
12:       >
13:         <strong>Stack trace:</strong><br />
14:         {{ error.stack }}
15:       </p>
16:       <div class="flex justify-between">
17:         <button
18:           v-if="error.retryAction"
19:           class="rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600"
20:           @click="retryAction"
21:         >
22:           Retry
23:         </button>
24:         <button
25:           class="rounded bg-gray-300 px-4 py-2 text-gray-800 hover:bg-gray-400"
26:           @click="goHome"
27:         >
28:           Go to Home
29:         </button>
30:       </div>
31:     </div>
32:   </div>
33: </template>
34: 
35: <script setup lang="ts">
36: const props = defineProps({
37:   error: Object,
38: })
39: 
40: const retryAction = () => {
41:   if (props.error.retryAction) {
42:     props.error.retryAction()
43:   }
44: }
45: 
46: const goHome = () => {
47:   clearError({ redirect: '/' })
48: }
49: </script>
```

## File: apps/website/generate-routes.ts
```typescript
 1: import fs from 'fs'
 2: import fetch from 'node-fetch'
 3: 
 4: async function generateRoutes() {
 5:   const strapiBaseUrl = process.env.NUXT_PUBLIC_STRAPI_URL
 6: 
 7:   if (!strapiBaseUrl) {
 8:     throw new Error('NUXT_PUBLIC_STRAPI_URL is not defined')
 9:   }
10: 
11:   console.log('Generating routes...', strapiBaseUrl)
12: 
13:   const categories = [
14:     'all',
15:     'people-of-space',
16:     'space-exploration',
17:     'dark-sky-conservation',
18:     'sustainable-development',
19:   ]
20:   const routes = ['/', '/about', '/contact', '/team', '/projects/dark-sky-conference-2023']
21:   const pageSize = 10
22: 
23:   for (const category of categories) {
24:     let countQuery = '?pagination[pageSize]=0'
25:     if (category !== 'all') {
26:       countQuery += `&filters[category][slug][$eq]=${category}`
27:     }
28:     const countRes = await fetch(`${strapiBaseUrl}/api/articles${countQuery}`, {
29:       headers: { 'Content-Type': 'application/json' },
30:     })
31:     const countData = await countRes.json()
32:     const totalCount = countData.meta.pagination.total
33:     const totalPages = Math.ceil(totalCount / pageSize)
34: 
35:     for (let page = 1; page <= totalPages; page++) {
36:       routes.push(`/blog/category/${category}/page/${page}`)
37:     }
38:   }
39: 
40:   fs.writeFileSync('prerender-routes.json', JSON.stringify(routes, null, 2))
41: }
42: 
43: generateRoutes().catch((error) => {
44:   console.error(error)
45:   process.exit(1)
46: })
```

## File: apps/website/nuxt.config.ts
```typescript
  1: import { fileURLToPath } from 'url'
  2: import { dirname, join, resolve } from 'path'
  3: import { defineNuxtConfig } from 'nuxt/config'
  4: import sharedRuntimeConfig from '../../shared-runtime.config'
  5: import prerenderRoutes from './prerender-routes.json'
  6: 
  7: const currentDir = dirname(fileURLToPath(import.meta.url))
  8: 
  9: function generateLocalUrls(start = 3000, end = 3009) {
 10:   return Array.from({ length: end - start + 1 }, (_, i) => `http://localhost:${start + i}`)
 11: }
 12: 
 13: const localUrls = generateLocalUrls()
 14: 
 15: const og = {
 16:   title: 'AstronEra: Your Gateway to the Stars',
 17:   description:
 18:     'Connect, learn, and unravel the cosmos with astronomers and space enthusiasts from around the globe',
 19:   image: '/astronera-logo-with-text.jpg',
 20:   url: 'https://www.astronera.org',
 21: }
 22: 
 23: export default defineNuxtConfig({
 24:   workspaceDir: '../../',
 25:   srcDir: '.',
 26: 
 27:   ssr: true,
 28: 
 29:   modules: [
 30:     '@nuxtjs/mdc',
 31:     'nuxt-security',
 32:     '@nuxtjs/seo',
 33:     '@nuxt/devtools',
 34:     '@vueuse/nuxt',
 35:     '@nuxt/image',
 36:     '@pinia/nuxt',
 37:     '@nuxt/icon',
 38:     '@nuxt/eslint',
 39:     '@nuxt/fonts',
 40:     '@nuxtjs/tailwindcss',
 41:     '@primevue/nuxt-module',
 42:     '@nuxt/content',
 43:   ],
 44: 
 45:   extends: ['../../layers/base'],
 46: 
 47:   build: {
 48:     transpile: [
 49:       // '../../layers/base',
 50:       'embla-carousel-vue',
 51:       'embla-carousel-autoplay',
 52:       'embla-carousel-auto-scroll',
 53:       'gsap',
 54:     ],
 55:   },
 56: 
 57:   // routeRules: {
 58:   //   '/': { prerender: true },
 59:   //   '/about': { prerender: true },
 60:   //   '/contact': { prerender: true },
 61:   //   '/team/**': { prerender: true },
 62:   //   '/projects/**': { prerender: true },
 63:   //   '/policies/**': { prerender: true },
 64:   //   '/blog': { isr: true },
 65:   //   '/blog/**': { isr: 60 }, // Revalidate every 60 seconds
 66:   // },
 67: 
 68:   content: {
 69:     highlight: {
 70:       theme: {
 71:         default: 'github-dark',
 72:         light: 'github-light',
 73:         dark: 'github-dark',
 74:       },
 75:     },
 76:   },
 77: 
 78:   security: {
 79:     headers: {
 80:       contentSecurityPolicy: {
 81:         'worker-src': ["'self'", 'blob:'],
 82:         'default-src': [
 83:           "'self'",
 84:           ...localUrls,
 85:           'http://localhost:3000',
 86:           'http://localhost:54321',
 87:           'https://www.astronera.org',
 88:           'https://*.up.railway.app',
 89:           'https://*.supabase.co',
 90:           'https://*.posthog.com',
 91:         ],
 92:         'connect-src': [
 93:           "'self'",
 94:           ...localUrls,
 95:           'http://localhost:3000',
 96:           'http://localhost:8080',
 97:           'http://host.docker.internal:8080',
 98:           'http://localhost:54321',
 99:           'https://o1175094.ingest.sentry.io',
100:           'https://api.iconify.design',
101:           'https://api.unisvg.com',
102:           'https://api.simplesvg.com',
103:           'https://*.supabase.co',
104:           'https://*.up.railway.app',
105:           'http://*.railway.internal',
106:           'http://scrapers.railway.internal:8080',
107:           'https://*.razorpay.com',
108:           'https://*.posthog.com',
109:           'https://us.i.posthog.com',
110:           'ws://localhost:4000',
111:           'wss://localhost:4000',
112:           'ws://localhost:4001', // Add this line
113:           'wss://localhost:4001',
114:           'https://picsum.photos',
115:           'https://cms.astronera.org',
116:           'https://astronera.org',
117:           'https://*.astronera.org',
118:           'http://localhost:1337/',
119:         ],
120:         'img-src': [
121:           "'self'",
122:           'data:',
123:           'http://localhost:54321',
124:           'http://localhost:3000',
125:           'http://localhost:1337/',
126:           'https://*.up.railway.app',
127:           'https://www.nasa.gov',
128:           'https://science.nasa.gov',
129:           'https://www.youtube.com',
130:           'https://s.ytimg.com',
131:           'https://pbs.twimg.com',
132:           'https://media.licdn.com',
133:           'https://*.supabase.co',
134:           'https://*.posthog.com',
135:           'https://us.i.posthog.com',
136:           'http://*.railway.internal',
137:           'https://picsum.photos',
138:           'https://fastly.picsum.photos/',
139:           'https://img.youtube.com',
140:           'https://cms.astronera.org',
141:           'https://*.astronera.org',
142:         ],
143:         'script-src': [
144:           "'self'",
145:           "'unsafe-inline'",
146:           "'wasm-unsafe-eval'",
147:           'http://localhost:3000',
148:           'http://localhost:54321',
149:           'https://www.youtube.com',
150:           'https://s.ytimg.com',
151:           'https://www.google.com/maps',
152:           'https://*.betterstack.com',
153:           'https://*.razorpay.com',
154:           'https://*.posthog.com',
155:           'https://us.i.posthog.com',
156:         ],
157:         'script-src-attr': ["'unsafe-inline'"],
158:         'style-src': [
159:           "'self'",
160:           "'unsafe-inline'",
161:           'https://fonts.googleapis.com',
162:           'https://*.posthog.com',
163:         ],
164:         'frame-src': [
165:           "'self'",
166:           'https://www.youtube.com',
167:           'https://us.i.posthog.com',
168:           'https://*.posthog.com',
169:           'https://www.google.com',
170:           'https://*.astronera.org',
171:           'https://*.betterstack.com',
172:           'https://*.razorpay.com',
173:         ],
174:         'child-src': ["'self'", 'https://us.i.posthog.com', 'https://*.posthog.com'],
175:       },
176:       xFrameOptions: 'DENY', // Prevents clickjacking
177:       crossOriginResourcePolicy: 'cross-origin', // Ensures resources are allowed
178:       crossOriginOpenerPolicy: 'same-origin',
179:       crossOriginEmbedderPolicy: 'unsafe-none',
180:     },
181:     requestSizeLimiter: {
182:       maxUploadFileRequestInBytes: 2000000, // 2 MB
183:       throwError: true,
184:       maxRequestSizeInBytes: 2000000, // 2 MB
185:     },
186:     xssValidator: false,
187:     corsHandler: {
188:       origin: [
189:         ...localUrls,
190:         'http://localhost:8080',
191:         'http://host.docker.internal:8080',
192:         'http://*.railway.internal',
193:         'http://scrapers.railway.internal:8080',
194:         'http://localhost:54321',
195:         'https://*.supabase.co',
196:         'https://us.i.posthog.com',
197:         'https://*.posthog.com',
198:       ],
199:       methods: ['GET', 'HEAD', 'PUT', 'PATCH', 'POST', 'DELETE'],
200:       allowHeaders: [
201:         'Content-Type',
202:         'Authorization',
203:         'X-Requested-With',
204:         'x-client-info',
205:         'apikey',
206:       ],
207:       exposeHeaders: ['Content-Length', 'X-Kuma-Revision'],
208:       credentials: true,
209:       maxAge: '86400', // 24 hours in seconds
210:       preflight: {
211:         statusCode: 204,
212:       },
213:     },
214:     allowedMethodsRestricter: false,
215:     hidePoweredBy: false,
216:     basicAuth: false,
217:     csrf: false,
218:     nonce: false,
219:     removeLoggers: false,
220:     ssg: false,
221:     sri: false,
222:   },
223: 
224:   nitro: {
225:     debug: true,
226:     logLevel: 'debug',
227:     prerender: {
228:       crawlLinks: true,
229:       routes: prerenderRoutes,
230:     },
231:   },
232: 
233:   image: {
234:     format: ['webp', 'jpg', 'png'],
235:     quality: 80,
236:     dir: 'public',
237:     domains: ['astronera.org', 'cms.astronera.org', 'staging.cms.astronera.org', 'localhost'],
238:     fallback: '/defaults/fallback.jpg',
239: 
240:     // Strapi provider configuration
241:     strapi: {
242:       baseURL: `${process.env.NUXT_PUBLIC_STRAPI_URL}/uploads/`, // Adjust this URL to match your Strapi setup
243:     },
244: 
245:     // You can keep the ipx provider as a fallback or for local development
246:     ipx: {
247:       maxAge: 60 * 60 * 24 * 365, // 1 year (in seconds)
248:     },
249:   },
250: 
251:   experimental: {
252:     inlineRouteRules: true,
253:     asyncContext: true,
254:   },
255: 
256:   tailwindcss: {
257:     configPath: `${currentDir}/tailwind.config.ts`,
258:     cssPath: [`${currentDir}/assets/css/tailwind.css`, { injectPosition: 0 }],
259:     exposeConfig: true,
260:     viewer: true,
261:   },
262: 
263:   primevue: {
264:     importPT: { from: resolve(currentDir, '../../theme/index.js') },
265:     autoImport: true,
266:     components: {
267:       prefix: 'Prime',
268:       include: '*',
269:       exclude: ['Editor'],
270:     },
271: 
272:     composables: {
273:       include: '*',
274:     },
275: 
276:     options: {
277:       ripple: true,
278:       unstyled: true,
279:       theme: {
280:         options: {
281:           cssLayer: {
282:             name: 'primevue',
283:             order: 'tailwind-base, primevue, tailwind-utilities',
284:           },
285:         },
286:       },
287:     },
288:   },
289:   site: {
290:     url: og.url,
291:     name: 'AstronEra',
292:     description: 'Astronomy Hub',
293:     defaultLocale: 'en',
294:   },
295: 
296:   // seo: {
297:   //   redirectToCanonicalSiteUrl: true,
298:   // },
299: 
300:   // ogImage: {
301:   //   componentOptions: {
302:   //     global: true,
303:   //   },
304:   // },
305: 
306:   fonts: {
307:     families: [
308:       { name: 'Orbitron', provider: 'google' },
309:       { name: 'Source Code Pro', provider: 'google' },
310:     ],
311:   },
312: 
313:   app: {
314:     layoutTransition: { name: 'layout', mode: 'out-in' },
315:     head: {
316:       link: [{ rel: 'icon', href: '/favicon.ico', sizes: 'any' }],
317:       htmlAttrs: {
318:         lang: 'en',
319:       },
320:       meta: [
321:         { property: 'title', content: og.description },
322:         { property: 'description', content: og.description },
323:         { property: 'og:title', content: og.title },
324:         { property: 'og:type', content: 'website' },
325:         { property: 'og:image', content: og.image },
326:         { property: 'og:description', content: og.description },
327:         { property: 'og:url', content: og.url },
328:         { name: 'twitter:card', content: 'Twitter Card' },
329:         { name: 'twitter:title', content: og.title },
330:         { name: 'twitter:description', content: og.description },
331:         { name: 'twitter:image', content: og.image },
332:       ],
333:       script: [
334:         // Insert your Google Tag Manager Script here
335:         // { src: 'https://browser.sentry-cdn.com/7.28.1/bundle.min.js', async: true, type: 'text/partytown' },
336:         {
337:           src: 'https://www.youtube.com/iframe_api',
338:           async: true,
339:         },
340:       ],
341:     },
342:   },
343: 
344:   compatibilityDate: '2024-09-22',
345: 
346:   runtimeConfig: {
347:     public: {
348:       ...sharedRuntimeConfig.runtimeConfig.public,
349:     },
350:   },
351: })
```

## File: apps/website/robots.config.ts
```typescript
1: export default [
2:   { UserAgent: '*' },
3:   { Allow: '/' },
4:   { BlankLine: true },
5:   { Comment: 'Allow crawling of all pages' },
6:   { Sitemap: (req) => `https://${req.headers.host}/sitemap.xml` },
7: ]
```

## File: apps/website/tailwind.config.ts
```typescript
 1: import { fileURLToPath } from 'url'
 2: import { dirname, resolve } from 'path'
 3: import type { Config } from 'tailwindcss'
 4: import baseConfig from '../../tailwind.config.base'
 5: 
 6: const currentDir = dirname(fileURLToPath(import.meta.url))
 7: 
 8: const config: Partial<Config> = {
 9:   presets: [baseConfig],
10:   theme: {
11:     extend: {
12:       fontFamily: {
13:         space: ['Orbitron', 'sans-serif'],
14:         typed: ['Railway', 'sans-serif'],
15:       },
16:       fontSize: {
17:         '6xl': '4rem', // 64px
18:         '7xl': '5rem', // 80px
19:         '8xl': '6rem', // 96px
20:       },
21:     },
22:   },
23:   content: [resolve(currentDir, '**/*.{js,vue,ts}'), '../../theme/**/*.{js,css}'],
24: }
25: 
26: export default config
```

## File: layers/advert/.playground/app.config.ts
```typescript
1: export default defineAppConfig({
2:   myLayer: {
3:     name: 'My amazing Nuxt layer (overwritten)'
4:   }
5: })
```

## File: layers/advert/.playground/nuxt.config.ts
```typescript
1: export default defineNuxtConfig({
2:   extends: ['..'],
3:   modules: ['@nuxt/eslint']
4: })
```

## File: layers/advert/components/Advertisement.vue
```vue
  1: <script setup lang="ts">
  2: import { useStorage } from '@vueuse/core'
  3: import advertisements from '../assets/advertisements.json'
  4: 
  5: const showAds = ref(false)
  6: const userShowAds = useStorage('userShowAds', true)
  7: 
  8: interface Advertisement {
  9:   id: number
 10:   title: string
 11:   description: string
 12:   imageUrl: string
 13:   link: string
 14:   active: boolean
 15: }
 16: 
 17: interface AdMetric {
 18:   adId: number
 19:   impressions: number
 20:   clicks: number
 21:   uniqueViews: number // Changed to number
 22:   deviceType: string
 23:   viewTimes: number[]
 24: }
 25: 
 26: const activeAds = ref<Advertisement[]>([])
 27: const adMetrics = useStorage<Record<number, AdMetric>>('adMetrics', {})
 28: const viewedAds = useStorage<Set<number>>('viewedAds', new Set())
 29: const sendInterval = 10000 // 10 seconds
 30: 
 31: const loadActiveAds = () => {
 32:   activeAds.value = advertisements.filter((ad) => ad.active).slice(0, 3)
 33: }
 34: 
 35: const getDeviceType = () => {
 36:   const userAgent = navigator.userAgent
 37:   if (/mobile/i.test(userAgent)) return 'Mobile'
 38:   if (/tablet/i.test(userAgent)) return 'Tablet'
 39:   return 'Desktop'
 40: }
 41: 
 42: const trackImpression = (adId: number) => {
 43:   if (!adMetrics.value[adId]) {
 44:     adMetrics.value[adId] = {
 45:       adId,
 46:       impressions: 0,
 47:       clicks: 0,
 48:       uniqueViews: 0,
 49:       deviceType: getDeviceType(),
 50:       viewTimes: [],
 51:     }
 52:   }
 53:   adMetrics.value[adId].impressions++
 54:   adMetrics.value[adId].viewTimes.push(Date.now())
 55: 
 56:   // Increment uniqueViews only if it's the first time this ad is viewed
 57:   if (!viewedAds.value.has(adId)) {
 58:     adMetrics.value[adId].uniqueViews++
 59:     viewedAds.value.add(adId)
 60:   }
 61: }
 62: 
 63: const trackInteraction = (adId: number) => {
 64:   if (adMetrics.value[adId]) {
 65:     adMetrics.value[adId].clicks++
 66:   }
 67: }
 68: 
 69: const sendMetrics = async () => {
 70:   const metricsToSend = JSON.parse(JSON.stringify(adMetrics.value))
 71: 
 72:   try {
 73:     // Send metrics to admin server (not implemented)
 74:     await $fetch('/api/advertisement/metrics', {
 75:       method: 'POST',
 76:       body: { metrics: metricsToSend },
 77:     })
 78: 
 79:     console.log('Metrics sent successfully')
 80:     // Clear the local metrics after successful send
 81:     adMetrics.value = {}
 82:   } catch (error) {
 83:     console.error('Failed to send metrics:', error)
 84:   }
 85: }
 86: 
 87: const intervalId = ref(null as NodeJS.Timeout | null)
 88: onMounted(() => {
 89:   intervalId.value = setInterval(sendMetrics, sendInterval)
 90:   loadActiveAds()
 91:   activeAds.value.forEach((ad) => trackImpression(ad.id))
 92: })
 93: 
 94: watch(
 95:   activeAds,
 96:   (newAds) => {
 97:     newAds.forEach((ad) => trackImpression(ad.id))
 98:   },
 99:   { deep: true },
100: )
101: 
102: onUnmounted(() => {
103:   clearInterval(intervalId.value!)
104:   sendMetrics() // Send any remaining metrics before unmounting
105: })
106: </script>
107: 
108: <template>
109:   <aside class="mx-auto min-h-72 w-72 space-y-4 p-4">
110:     <div class="mb-4 flex items-center justify-between">
111:       <label
112:         for="show-ads-toggle"
113:         class="pr-2 text-sm"
114:       >
115:         Toggle Ads
116:       </label>
117:       <PrimeToggleSwitch
118:         v-model="showAds"
119:         input-id="show-ads-toggle"
120:       />
121:     </div>
122:     <div
123:       v-for="ad in activeAds"
124:       :key="ad.id"
125:       class="border-color overflow-hidden rounded-lg"
126:       :class="!showAds ? '' : 'border'"
127:     >
128:       <a
129:         :href="showAds ? ad.link : undefined"
130:         target="_blank"
131:         rel="noopener noreferrer"
132:         class="block h-full w-full"
133:         :class="{ invisible: !showAds }"
134:         @click="trackInteraction(ad.id)"
135:       >
136:         <div class="max-h-72 w-full">
137:           <NuxtImg
138:             v-if="showAds"
139:             :src="ad.imageUrl"
140:             :alt="ad.title"
141:             class="w-full object-cover"
142:           />
143:         </div>
144:         <div class="p-4">
145:           <h3
146:             v-if="showAds"
147:             class="text-lg font-semibold"
148:           >
149:             {{ ad.title }}
150:           </h3>
151:           <p
152:             v-if="showAds"
153:             class="text-sm"
154:           >
155:             {{ ad.description }}
156:           </p>
157:         </div>
158:       </a>
159:     </div>
160:   </aside>
161: </template>
```

## File: layers/advert/plugins/error-handler.ts
```typescript
 1: import { useErrorHandler } from '@ib/logger'
 2: 
 3: export default defineNuxtPlugin((nuxtApp) => {
 4:   const { handleError } = useErrorHandler()
 5: 
 6:   // Set up global error handlers
 7:   if (import.meta.client) {
 8:     window.addEventListener('error', (event) => {
 9:       handleError(event.error, 'Uncaught Exception')
10:     })
11: 
12:     window.addEventListener('unhandledrejection', (event) => {
13:       handleError(event.reason, 'Unhandled Promise Rejection')
14:     })
15:   }
16: })
```

## File: layers/advert/plugins/sentry.server.ts
```typescript
1: export default defineNuxtPlugin(() => {
2:   const environment = useRuntimeConfig().public.nodeEnv
3: })
```

## File: layers/advert/server/api/advertisement/metrics.get.ts
```typescript
 1: import { promises as fs } from 'fs'
 2: import { resolve } from 'path'
 3: import { defineEventHandler } from 'h3'
 4: 
 5: interface AdMetric {
 6:   adId: number
 7:   impressions: number
 8:   clicks: number
 9:   uniqueViews: number
10:   deviceType: string
11:   viewTimes: number[]
12: }
13: 
14: const adMetricsFilePath = resolve(process.cwd(), 'data', 'advertising', 'metrics.json')
15: 
16: export default defineEventHandler(async (event) => {
17:   try {
18:     const data = await fs.readFile(adMetricsFilePath, 'utf-8')
19:     const metrics: AdMetric[] = JSON.parse(data)
20: 
21:     // Calculate additional metrics
22:     const processedMetrics = Object.values(metrics).map((metric: AdMetric) => {
23:       const ctr = metric.impressions > 0 ? (metric.clicks / metric.impressions) * 100 : 0
24:       const frequency = metric.impressions / metric.uniqueViews
25:       const timeOfDay = metric.viewTimes.map((time) => new Date(time).getHours())
26: 
27:       return {
28:         ...metric,
29:         ctr: ctr.toFixed(2) + '%',
30:         frequency: frequency.toFixed(2),
31:         timeOfDay: timeOfDay.reduce(
32:           (acc, hour) => {
33:             acc[hour] = (acc[hour] || 0) + 1
34:             return acc
35:           },
36:           {} as Record<number, number>,
37:         ),
38:       }
39:     })
40: 
41:     return processedMetrics
42:   } catch (error) {
43:     console.error('Error reading ad metrics:', error)
44:     throw createError({
45:       statusCode: 500,
46:       statusMessage: 'Failed to read ad metrics',
47:     })
48:   }
49: })
```

## File: layers/advert/server/api/advertisement/metrics.post.ts
```typescript
 1: import { promises as fs } from 'fs'
 2: import { resolve } from 'path'
 3: import { defineEventHandler, readBody } from 'h3'
 4: 
 5: const adMetricsFilePath = resolve(process.cwd(), 'data', 'advertising', 'metrics.json')
 6: 
 7: interface AdMetric {
 8:   adId: number
 9:   impressions: number
10:   clicks: number
11:   uniqueViews: number
12:   deviceType: string
13:   viewTimes: number[]
14: }
15: 
16: let batchedMetrics: Record<number, AdMetric> = {}
17: let lastWriteTime = Date.now()
18: const WRITE_INTERVAL = 60000 // 1 minute
19: 
20: const writeMetricsToFile = async () => {
21:   try {
22:     let existingMetrics: Record<number, AdMetric> = {}
23:     try {
24:       const data = await fs.readFile(adMetricsFilePath, 'utf-8')
25:       existingMetrics = JSON.parse(data)
26:     } catch (error) {
27:       console.warn('No existing ad metrics found:', error)
28:       // File doesn't exist yet, start with empty object
29:     }
30: 
31:     // Merge batched metrics with existing metrics
32:     for (const [adId, metric] of Object.entries(batchedMetrics)) {
33:       if (!existingMetrics[adId]) {
34:         existingMetrics[adId] = metric
35:       } else {
36:         existingMetrics[adId].impressions += metric.impressions
37:         existingMetrics[adId].clicks += metric.clicks
38:         existingMetrics[adId].uniqueViews += metric.uniqueViews
39:         existingMetrics[adId].viewTimes.push(...metric.viewTimes)
40:       }
41:     }
42: 
43:     await fs.writeFile(adMetricsFilePath, JSON.stringify(existingMetrics, null, 2), 'utf-8')
44:     batchedMetrics = {} // Clear batched metrics after writing
45:     lastWriteTime = Date.now()
46:   } catch (error) {
47:     console.error('Error writing ad metrics:', error)
48:   }
49: }
50: 
51: export default defineEventHandler(async (event) => {
52:   const body = await readBody(event)
53:   const { metrics } = body as { metrics: Record<number, AdMetric> }
54: 
55:   if (!metrics) {
56:     return { success: false, message: 'No ad metrics received' }
57:   }
58: 
59:   console.log('Received ad metrics:', metrics)
60:   // Merge incoming metrics with batched metrics
61:   for (const [adId, metric] of Object.entries(metrics)) {
62:     if (!batchedMetrics[adId]) {
63:       batchedMetrics[adId] = metric
64:     } else {
65:       batchedMetrics[adId].impressions += metric.impressions
66:       batchedMetrics[adId].clicks += metric.clicks
67:       batchedMetrics[adId].uniqueViews += metric.uniqueViews
68:       batchedMetrics[adId].viewTimes.push(...metric.viewTimes)
69:     }
70:   }
71: 
72:   // Check if it's time to write to file
73:   if (Date.now() - lastWriteTime > WRITE_INTERVAL) {
74:     await writeMetricsToFile()
75:   }
76: 
77:   return { success: true, message: 'Ad metrics received and batched' }
78: })
```

## File: layers/advert/nuxt.config.ts
```typescript
1: import { defineNuxtConfig } from 'nuxt/config'
2: 
3: export default defineNuxtConfig({
4:   workspaceDir: '../../',
5:   srcDir: '.',
6: })
```

## File: layers/auth/.playground/app.config.ts
```typescript
1: export default defineAppConfig({
2:   myLayer: {
3:     name: 'My amazing Nuxt layer (overwritten)'
4:   }
5: })
```

## File: layers/auth/.playground/nuxt.config.ts
```typescript
1: export default defineNuxtConfig({
2:   extends: ['..'],
3:   modules: ['@nuxt/eslint']
4: })
```

## File: layers/auth/composables/user.current.store.ts
```typescript
  1: import { useLogger } from '@ib/logger'
  2: 
  3: const DOMAIN_KEY = 'currentUser'
  4: 
  5: export const useCurrentUser = defineStore(DOMAIN_KEY, () => {
  6:   const authUrl = useRuntimeConfig().public.aeAuthUrl
  7:   const logger = useLogger(DOMAIN_KEY)
  8:   const errors = useBaseError()
  9:   const loading = useLoadingStore()
 10:   const { fetch } = useBaseFetch()
 11:   const userId = useCookie('userId')
 12:   const user = useSupabaseUser()
 13: 
 14:   // check:critical - user should only be able to fetch their own full profile
 15:   // check:critical - user should only be able to update their own profile
 16:   // todo:high - allow user to update their profile info
 17:   // todo:med - merge currentUser and profile into one, store all required data everything in their session
 18:   // assign Posthog identify
 19: 
 20:   console.log('user', user.value)
 21: 
 22:   const profile = computed(() => ({
 23:     id: user.value?.id,
 24:     given_name: user.value?.user_metadata?.given_name,
 25:     email_confirmed_at: user.value?.email_confirmed_at,
 26:     confirmation_sent_at: user.value?.confirmation_sent_at,
 27:     confirmed_at: user.value?.confirmed_at,
 28:     created_at: user.value?.created_at,
 29:     surname: user.value?.user_metadata?.surname,
 30:     last_sign_in_at: user.value?.last_sign_in_at,
 31:     email: user.value?.email,
 32:     providers: user.value?.app_metadata.providers,
 33:     avatar: user.value?.user_metadata.avatar || user.value?.user_metadata.avatar_url,
 34:     provider: user.value?.provider,
 35:     user_role: user.value?.app_metadata?.role,
 36:     user_plan: user.value?.app_metadata?.plan,
 37:   }))
 38: 
 39:   // extract as util func
 40:   function hasValueChanged(newValue: any, currentValue: any): boolean {
 41:     console.log('hasValueChanged', newValue, currentValue)
 42:     if (
 43:       typeof newValue === 'string' ||
 44:       typeof newValue === 'boolean' ||
 45:       typeof newValue === 'number'
 46:     ) {
 47:       return newValue !== currentValue
 48:     } else if (Array.isArray(newValue)) {
 49:       return JSON.stringify(newValue) !== JSON.stringify(currentValue)
 50:     } else if (typeof newValue === 'object' && newValue !== null) {
 51:       return JSON.stringify(newValue) !== JSON.stringify(currentValue)
 52:     } else {
 53:       return newValue !== currentValue
 54:     }
 55:   }
 56: 
 57:   function cleanDataForUpdate(newData: any, previousData: any) {
 58:     const updatedData: any = {}
 59:     for (const key in newData) {
 60:       if (
 61:         Object.hasOwnProperty.call(newData, key) &&
 62:         hasValueChanged(newData[key], previousData[key])
 63:       ) {
 64:         updatedData[key] = newData[key]
 65:       }
 66:     }
 67: 
 68:     return { data: updatedData, noDataUpdated: Object.keys(updatedData).length === 0 }
 69:   }
 70: 
 71:   async function updateProfile(newData: any, isMock: boolean = false) {
 72:     logger.info('Starting updateProfile function', { newData, isMock })
 73:     const updatedData: any = {}
 74:     const toast = useNotification()
 75: 
 76:     logger.debug('Cleaning data for update')
 77:     // Compare newData with fullProfile and only include changed values
 78:     const { noDataUpdated, data } = cleanDataForUpdate(newData, profile.value)
 79: 
 80:     if (noDataUpdated) {
 81:       logger.info('No changes detected, no update necessary')
 82:       return
 83:     }
 84: 
 85:     logger.debug('Changes detected', { changedData: data })
 86: 
 87:     try {
 88:       logger.info('Sending update request to server')
 89:       let response
 90:       if (isMock) {
 91:         logger.info('Using mock API call')
 92:         // response = await mockApiCall(data)
 93:       } else {
 94:         response = await $fetch('/api/users/update', {
 95:           method: 'POST',
 96:           body: JSON.stringify(data),
 97:         })
 98:       }
 99:       logger.debug('Received response from server', { response })
100: 
101:       const validData = errors.server({
102:         response,
103:         devOnly: false,
104:         devMessage: 'Error updating user profile',
105:         userMessage: 'There was an error updating your profile after action',
106:       })
107: 
108:       if (response.error) {
109:         toast.error({ summary: 'Could not update profile', message: response.error.message })
110:         return
111:       } else {
112:         toast.success({
113:           summary: 'Profile updated successfully',
114:           message: 'Your profile was updated',
115:         })
116:       }
117: 
118:       logger.info('Successfully validated server response', { validData })
119: 
120:       // update state
121:       logger.debug('Updating user profile state')
122:       for (const key in data) {
123:         if (Object.hasOwnProperty.call(data, key)) {
124:           profile.value[key] = data[key]
125:           logger.debug(`Updating profile field: ${key}`, {
126:             newValue: data[key],
127:           })
128:         }
129:       }
130:       logger.info('Profile update completed successfully')
131:     } catch (error) {
132:       logger.error('Error occurred during profile update', { error })
133:       throw error // Re-throw the error for the caller to handle
134:     }
135:   }
136: 
137:   // Test function
138:   async function testUpdateProfile() {
139:     const testCases = [
140:       { name: 'John Doe', email: 'john@example.com' },
141:       { name: 'Jane Doe', email: 'error@example.com' }, // This will trigger an error
142:       {}, // This should result in no update
143:     ]
144: 
145:     for (const testCase of testCases) {
146:       try {
147:         console.log('Testing with data:', testCase)
148:         await updateProfile(testCase, true) // Use mock API
149:         console.log('Test passed successfully')
150:       } catch (error) {
151:         console.error('Test failed:', error.message)
152:       }
153:       console.log('---')
154:     }
155:   }
156: 
157:   type FileType = 'avatar'
158:   async function uploadImage(fileType: FileType, blob: Blob) {
159:     // currentFileName is the current file name in the database eg. avatar-drew-macgibbon.jpg
160:     const formData = new FormData()
161:     formData.append('file', blob)
162: 
163:     const response = await $fetch('/api/users/insert/image', {
164:       method: 'POST',
165:       body: formData,
166:       params: {
167:         fileType,
168:         userId: userId.value,
169:       },
170:     })
171: 
172:     console.log('fileName', response)
173: 
174:     const fileName = errors.server({
175:       response,
176:       devOnly: false,
177:       devMessage: `Error uploading ${fileType} image`,
178:       userMessage: `There was an error uploading your ${fileType}`,
179:     })
180: 
181:     let newData = {}
182: 
183:     console.log('fileName', fileName)
184: 
185:     if (fileType === 'avatar') {
186:       newData = {
187:         avatar: fileName,
188:       }
189:     }
190: 
191:     updateProfile(newData)
192:   }
193: 
194:   // first check if the user has an avatar in their profile
195:   // if not, check if the user has an avatar in their identities
196:   // cycle through identities check identities_data for picture
197: 
198:   return {
199:     haveUserSession: computed(() => !!profile.value),
200:     isAdmin: computed(
201:       () => profile.value?.user_role === 'admin' || profile.value?.user_role === 'super_admin',
202:     ),
203:     registeredWithProvider: computed(() => profile.value?.provider),
204:     profile,
205:     uploadImage,
206:     updateProfile,
207:     testUpdateProfile,
208:   }
209: })
210: 
211: if (import.meta.hot) {
212:   import.meta.hot.accept(acceptHMRUpdate(useCurrentUser, import.meta.hot))
213: }
```

## File: layers/auth/server/middleware/cors.ts
```typescript
 1: import { defineEventHandler, getRequestHeader, setResponseHeaders } from 'h3'
 2: 
 3: export default defineEventHandler((event) => {
 4:   const allowedDomains = ['astronera.org', 'up.railway.app', 'rlwy.net', 'localhost']
 5: 
 6:   const origin = getRequestHeader(event, 'origin') || ''
 7: 
 8:   const isAllowedOrigin = allowedDomains.some(
 9:     (domain) =>
10:       origin.startsWith('http://localhost:') || // Allow any localhost port
11:       origin.endsWith(`.${domain}`) || // Allow all subdomains
12:       origin === `https://${domain}`, // Allow apex domain
13:   )
14: 
15:   if (isAllowedOrigin || process.env.NODE_ENV !== 'production') {
16:     setResponseHeaders(event, {
17:       'Access-Control-Allow-Methods': 'GET,HEAD,PUT,PATCH,POST,DELETE',
18:       'Access-Control-Allow-Origin': origin,
19:       'Access-Control-Allow-Credentials': 'true',
20:       'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Requested-With',
21:       'Access-Control-Expose-Headers': 'Content-Length, X-JSON',
22:     })
23:   }
24: 
25:   console.log('CORS', origin, isAllowedOrigin)
26: 
27:   if (event.method === 'OPTIONS') {
28:     event.node.res.statusCode = 204
29:     event.node.res.statusMessage = 'No Content.'
30:     return 'OK'
31:   }
32: })
```

## File: layers/auth/nuxt.config.ts
```typescript
 1: import { fileURLToPath } from 'url'
 2: import { dirname, join, resolve } from 'path'
 3: import { defineNuxtConfig } from 'nuxt/config'
 4: import tsconfigPaths from 'vite-tsconfig-paths'
 5: 
 6: const currentDir = dirname(fileURLToPath(import.meta.url))
 7: 
 8: console.log('Node Env:', process.env.NODE_ENV)
 9: 
10: export default defineNuxtConfig({
11:   workspaceDir: '../../',
12:   srcDir: '.',
13: 
14:   modules: ['@nuxtjs/supabase'],
15: 
16:   supabase: {
17:     redirect: false,
18:     clientOptions: {
19:       auth: {
20:         flowType: 'pkce',
21:         detectSessionInUrl: true,
22:         persistSession: true,
23:         autoRefreshToken: true,
24:       },
25:     },
26:     cookieOptions: {
27:       domain:
28:         process.env.NODE_ENV === 'production'
29:           ? 'astronera.org' // This will work for all subdomains
30:           : 'localhost',
31:       maxAge: 60 * 60 * 8,
32:       path: '/',
33:       sameSite: 'lax',
34:       secure: process.env.NODE_ENV === 'production' ? true : false,
35:     },
36:     cookieName: 'sb',
37:   },
38: })
```

## File: layers/base/.playground/app.config.ts
```typescript
1: export default defineAppConfig({
2:   myLayer: {
3:     name: 'My amazing Nuxt layer (overwritten)',
4:   },
5: })
```

## File: layers/base/.playground/nuxt.config.ts
```typescript
1: export default defineNuxtConfig({
2:   extends: ['..'],
3:   modules: ['@nuxt/eslint'],
4: })
```

## File: layers/base/components/image/ImageHero.vue
```vue
 1: <script setup lang="ts">
 2: import type { TitleType, ImageType } from '../../types/content'
 3: 
 4: defineProps({
 5:   fit: {
 6:     type: String,
 7:     default: 'cover',
 8:   },
 9:   objectPosition: {
10:     type: String,
11:     default: 'center',
12:   },
13:   title: {
14:     type: Object as () => TitleType,
15:     required: true,
16:   },
17:   img: {
18:     type: Object as () => ImageType,
19:     required: true,
20:   },
21: })
22: 
23: // consider turning the images into short videos using AI
24: // consider using mix-blend-mode for cool text effect with video
25: </script>
26: 
27: <template>
28:   <div class="relative flex items-center justify-center">
29:     <IBImage
30:       :img="{
31:         src: img.src,
32:         alt: img.alt,
33:         width: img.width,
34:         height: img.height,
35:       }"
36:       :class="`w-full object-${fit} ${objectPosition} h-screen`"
37:     />
38:     <div
39:       class="absolute z-10 flex flex-col items-center justify-center gap-8 px-4 text-white lg:flex-row lg:gap-16 xl:px-8"
40:     >
41:       <slot />
42:       <div class="flex flex-col gap-4">
43:         <h2
44:           :class="`rounded-md bg-black/30 px-4 py-1 text-3xl font-bold shadow-xl lg:text-5xl xl:px-8 text-${title.centered ? 'center' : 'left'}`"
45:         >
46:           {{ title.main }}
47:         </h2>
48:         <p
49:           v-if="title.subtitle"
50:           :class="`inline-block w-auto max-w-2xl rounded-sm px-4 pb-4 text-xl font-semibold lg:text-3xl xl:px-8 text-${title.centered ? 'center' : 'left'}`"
51:         >
52:           {{ title.subtitle }}
53:         </p>
54:       </div>
55:     </div>
56:     <div class="absolute left-0 top-0 h-full w-full bg-black/50" />
57:   </div>
58: </template>
59: 
60: <style scoped></style>
```

## File: layers/base/components/image/ImageWithFallback.vue
```vue
 1: <script setup lang="ts">
 2: interface Image {
 3:   src: string
 4:   alt: string | null
 5:   caption: string | null
 6:   credit: string | null
 7: }
 8: 
 9: interface Options {
10:   width: number
11:   height: number
12:   sizes: string | undefined | null
13:   quality: number | undefined | null
14: }
15: 
16: defineProps({
17:   image: {
18:     type: Object as () => Image | undefined,
19:     default: undefined,
20:   },
21:   options: {
22:     type: Object as () => Options | undefined,
23:     default: () => ({
24:       width: 50,
25:       height: 50,
26:       sizes: null,
27:       quality: 80,
28:     }),
29:   },
30: })
31: </script>
32: 
33: <template>
34:   <div class="relative h-full w-full overflow-hidden rounded-md object-cover">
35:     <IBImage
36:       :img="{
37:         src: image?.src || 'hero-image.jpg',
38:         alt: image?.alt || 'this is a default fallback for when an image is not present',
39:         width: options?.width || 60,
40:         height: options?.height || 37,
41:         quality: options?.quality || 80,
42:       }"
43:       class="h-full w-full object-cover"
44:     />
45:     <div
46:       v-if="!image?.src"
47:       class="absolute left-0 top-0 z-50 flex h-full w-full items-center justify-center bg-black/40"
48:     >
49:       <h3 class="foreground rounded-lg px-3 py-1 text-base"> NO IMAGE </h3>
50:     </div>
51:   </div>
52: </template>
```

## File: layers/base/components/Background.vue
```vue
 1: <template>
 2:   <canvas
 3:     ref="canvas"
 4:     class="w-full h-full"
 5:   />
 6: </template>
 7: 
 8: <script setup lang="ts">
 9: const CANVAS_WIDTH = computed(() => (window ? window.innerWidth : 0))
10: const CANVAS_HEIGHT = computed(() => (window ? window.innerHeight + 800 : 0))
11: const STAR_COUNT = 300 // Number of stars
12: const COLORS = ['#ffffff', '#ffcccb', '#add8e6'] // White, red, blue
13: 
14: // Refs
15: const canvas = ref<HTMLCanvasElement | null>(null)
16: let ctx: CanvasRenderingContext2D | null = null
17: let animationFrameId: number
18: 
19: // Utility function to get random number within a range
20: function getRandom(min: number, max: number): number {
21:   return Math.random() * (max - min) + min
22: }
23: 
24: // Create stars array
25: const stars = Array.from({ length: STAR_COUNT }, () => ({
26:   x: getRandom(0, CANVAS_WIDTH.value),
27:   y: getRandom(0, CANVAS_HEIGHT.value),
28:   radius: getRandom(0.5, 2),
29:   color: COLORS[Math.floor(Math.random() * COLORS.length)],
30:   speed: 0.01, // Speed of movement
31:   initialX: 0,
32:   initialY: 0,
33: }))
34: 
35: // Initialize star positions
36: stars.forEach((star) => {
37:   star.initialX = star.x
38:   star.initialY = star.y
39: })
40: 
41: // Draw stars on canvas
42: function drawStars() {
43:   if (!ctx) {
44:     return
45:   }
46: 
47:   ctx.clearRect(0, 0, CANVAS_WIDTH.value, CANVAS_HEIGHT.value)
48: 
49:   stars.forEach((star) => {
50:     ctx.beginPath()
51:     ctx.arc(star.x, star.y, star.radius, 0, 2 * Math.PI, false)
52:     ctx.fillStyle = star.color
53:     ctx.shadowColor = star.color
54:     ctx.shadowBlur = 8
55:     ctx.fill()
56:     ctx.closePath()
57: 
58:     // Update star position to follow an inverted arc path
59:     star.x -= star.speed
60:     star.y =
61:       star.initialY - Math.sin((star.x / CANVAS_WIDTH.value) * Math.PI) * (CANVAS_HEIGHT.value / 4)
62: 
63:     // Wrap stars around edges
64:     if (star.x < 0) {
65:       star.x = CANVAS_WIDTH.value
66:       star.initialY = getRandom(0, CANVAS_HEIGHT.value)
67:     }
68:   })
69: 
70:   // Request next animation frame
71:   animationFrameId = requestAnimationFrame(drawStars)
72: }
73: 
74: // Set up canvas and start animation
75: onMounted(() => {
76:   if (canvas.value) {
77:     canvas.value.width = CANVAS_WIDTH.value
78:     canvas.value.height = CANVAS_HEIGHT.value
79:     ctx = canvas.value.getContext('2d')
80:     if (ctx) {
81:       ctx.fillStyle = 'black'
82:       ctx.fillRect(0, 0, CANVAS_WIDTH.value, CANVAS_HEIGHT.value)
83:       drawStars()
84:     }
85:   }
86: })
87: 
88: // Clean up animation on component unmount
89: onBeforeUnmount(() => {
90:   cancelAnimationFrame(animationFrameId)
91: })
92: </script>
93: 
94: <style scoped>
95: canvas {
96:   width: 100vw;
97:   height: 120vh;
98: }
99: </style>
```

## File: layers/base/components/Breadcrumbs.vue
```vue
 1: <script lang="ts" setup>
 2: const route = useRoute()
 3: 
 4: const generateBreadcrumbs = (path: string) => {
 5:   const pathParts = path.split('/').filter(Boolean)
 6:   let currentPath = ''
 7:   return pathParts.map((part) => {
 8:     currentPath += `/${part}`
 9:     return {
10:       to: currentPath,
11:       label: part.charAt(0).toUpperCase() + part.slice(1),
12:       ariaLabel: part.charAt(0).toUpperCase() + part.slice(1),
13:     }
14:   })
15: }
16: 
17: const links = computed(() => generateBreadcrumbs(route.path))
18: 
19: // Prepare links by filtering and adjusting labels
20: const formattedLinks = computed(() => {
21:   if (!links.value) return []
22:   console.log('Formatting links', links.value)
23:   return links.value
24:     .map((link) => {
25:       if (!link) return null // Skip if link is undefined or null
26: 
27:       // Filter out the home link if in app route
28:       if (link.to === '/') {
29:         console.log('Filtering out home link', link)
30:         return null
31:       }
32: 
33:       // Special handling for the 'astrotribe' path
34:       if (link.to === '/') {
35:         return { ...link, label: 'Home', ariaLabel: 'Home' }
36:       }
37: 
38:       if (link.to === '/ask') {
39:         return { ...link, label: 'Q&A', ariaLabel: 'Q&A' }
40:       }
41: 
42:       return link // Return unmodified link
43:     })
44:     .filter(Boolean) // Remove null entries
45: })
46: </script>
47: 
48: <template>
49:   <PrimeBreadcrumb
50:     v-if="formattedLinks.length"
51:     :model="formattedLinks"
52:     :pt="{
53:       root: 'foreground p-0 flex items-center justify-start',
54:       menu: '!mb-0',
55:     }"
56:   >
57:     <template #item="{ item }">
58:       <NuxtLink :to="item.to">
59:         <span
60:           class="text-primary font-semibold"
61:           :class="item.current ? 'link-active' : ''"
62:         >
63:           {{ item.label }}
64:         </span>
65:       </NuxtLink>
66:     </template>
67:   </PrimeBreadcrumb>
68: </template>
69: 
70: <style></style>
```

## File: layers/base/components/Glass.vue
```vue
  1: <script setup lang="ts">
  2: const uniqueId = useId()
  3: 
  4: const tailwindColors = [
  5:   'slate',
  6:   'gray',
  7:   'zinc',
  8:   'neutral',
  9:   'stone',
 10:   'red',
 11:   'orange',
 12:   'amber',
 13:   'yellow',
 14:   'lime',
 15:   'green',
 16:   'emerald',
 17:   'teal',
 18:   'cyan',
 19:   'sky',
 20:   'blue',
 21:   'indigo',
 22:   'violet',
 23:   'purple',
 24:   'fuchsia',
 25:   'pink',
 26:   'rose',
 27:   'primary', // Assuming you have a custom 'primary' color
 28: ] as const
 29: 
 30: type TailwindColor = (typeof tailwindColors)[number]
 31: 
 32: const props = defineProps({
 33:   color: { type: String as PropType<TailwindColor>, default: 'slate' },
 34:   bgOpacity: { type: Number, default: 20 },
 35:   gradientOpacity: { type: Number, default: 10 },
 36:   blurIntensity: { type: String, default: 'md' },
 37:   disableHover: { type: Boolean, default: false },
 38:   padding: { type: String, default: '6' },
 39:   loading: { type: Boolean, default: false },
 40:   ariaLabel: { type: String, default: 'Glass card' },
 41: })
 42: 
 43: const cardRef = ref<HTMLElement | null>(null)
 44: const gravityAreaRef = ref<HTMLElement | null>(null)
 45: 
 46: const {
 47:   handleMouseMove,
 48:   handleMouseLeave,
 49:   cardStyle,
 50:   spotlightStyle,
 51:   bgClasses,
 52:   borderClasses,
 53:   textClasses,
 54:   gradientClasses,
 55:   hoverClasses,
 56: } = useGlassCard(props, uniqueId)
 57: </script>
 58: 
 59: <template>
 60:   <div
 61:     :id="uniqueId"
 62:     class="relative"
 63:   >
 64:     <div
 65:       ref="gravityAreaRef"
 66:       class="pointer-events-none absolute -inset-[30%] z-0"
 67:     ></div>
 68:     <div
 69:       ref="cardRef"
 70:       :class="[
 71:         'glass-card relative overflow-hidden rounded-md shadow-xl',
 72:         'ring-2 ring-inset ring-white/10',
 73:         `backdrop-blur-${blurIntensity}`,
 74:         `p-${padding}`,
 75:         bgClasses,
 76:         borderClasses,
 77:         textClasses,
 78:         ...hoverClasses,
 79:       ]"
 80:       :style="cardStyle"
 81:       role="region"
 82:       :aria-label="ariaLabel"
 83:       @mousemove="(e) => handleMouseMove(e)"
 84:       @mouseleave="handleMouseLeave"
 85:     >
 86:       <div class="glass-card-content relative z-20">
 87:         <slot name="header"></slot>
 88:         <slot></slot>
 89:       </div>
 90:       <div
 91:         :class="['absolute inset-0 z-10 h-full w-full bg-gradient-to-br', gradientClasses]"
 92:       ></div>
 93:       <div
 94:         class="glass-effect"
 95:         :style="spotlightStyle"
 96:       ></div>
 97:       <div
 98:         v-if="loading"
 99:         class="animate-shimmer absolute inset-0 bg-gradient-to-r from-transparent via-white/10 to-transparent"
100:       ></div>
101:     </div>
102:   </div>
103: </template>
104: 
105: <style scoped>
106: .glass-card {
107:   transition: all 0.3s ease;
108: }
109: 
110: .glass-effect {
111:   position: absolute;
112:   inset: 0;
113:   pointer-events: none;
114:   transition: opacity 0.2s;
115: }
116: 
117: .glass-card-content {
118:   transition: transform 0.3s ease;
119: }
120: 
121: .glass-card:hover .glass-card-content {
122:   transform: translateY(-5px);
123: }
124: 
125: @keyframes shimmer {
126:   0% {
127:     transform: translateX(-100%);
128:   }
129:   100% {
130:     transform: translateX(100%);
131:   }
132: }
133: 
134: .animate-shimmer {
135:   animation: shimmer 1.5s infinite;
136: }
137: 
138: .spotlight {
139:   backdrop-filter: blur(2px) contrast(1.2);
140:   mix-blend-mode: overlay;
141: }
142: </style>
```

## File: layers/base/components/GlobalTimer.vue
```vue
  1: <script setup lang="ts">
  2: const isVisible = ref(true)
  3: const isTracking = ref(false)
  4: const elapsedTime = ref(0)
  5: const currentTask = ref('')
  6: let timer: NodeJS.Timeout | null = null
  7: let startTime: number
  8: let pausedTime = 0
  9: 
 10: function startTimer() {
 11:   if (!import.meta.client) return
 12: 
 13:   if (!isTracking.value) {
 14:     isTracking.value = true
 15:     startTime = Date.now() - pausedTime
 16:     timer = setInterval(() => {
 17:       elapsedTime.value = Math.floor((Date.now() - startTime) / 1000)
 18:     }, 1000)
 19:   }
 20: }
 21: 
 22: function pauseTimer() {
 23:   if (isTracking.value) {
 24:     isTracking.value = false
 25:     if (timer) {
 26:       clearInterval(timer)
 27:       timer = null
 28:     }
 29:     pausedTime = Date.now() - startTime
 30:   }
 31: }
 32: 
 33: function stopTimer() {
 34:   isTracking.value = false
 35:   isVisible.value = false
 36:   if (timer) {
 37:     clearInterval(timer)
 38:     timer = null
 39:   }
 40:   elapsedTime.value = 0
 41:   pausedTime = 0
 42:   currentTask.value = ''
 43: }
 44: 
 45: function showTimer(taskTitle: string) {
 46:   currentTask.value = taskTitle
 47:   isVisible.value = true
 48:   startTimer()
 49: }
 50: 
 51: function formatTime(seconds: number) {
 52:   const hours = Math.floor(seconds / 3600)
 53:   const minutes = Math.floor((seconds % 3600) / 60)
 54:   const secs = seconds % 60
 55:   return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`
 56: }
 57: 
 58: onUnmounted(() => {
 59:   if (timer) clearInterval(timer)
 60: })
 61: 
 62: defineExpose({
 63:   showTimer,
 64:   stopTimer,
 65: })
 66: </script>
 67: 
 68: <template>
 69:   <div
 70:     v-if="isVisible"
 71:     class="flex items-center gap-2 rounded-lg bg-gray-800 p-2 text-white shadow-lg"
 72:   >
 73:     <div class="text-sm font-bold">
 74:       {{ currentTask }}
 75:     </div>
 76:     <div class="text-xl"> ⏱️ {{ formatTime(elapsedTime) }} </div>
 77:     <div class="flex space-x-2">
 78:       <PrimeButton
 79:         v-if="!isTracking"
 80:         size="small"
 81:         class="rounded-full bg-green-500 p-2 hover:bg-green-600"
 82:         @click="startTimer"
 83:       >
 84:         <Icon
 85:           name="mdi:play"
 86:           size="24px"
 87:         />
 88:       </PrimeButton>
 89:       <PrimeButton
 90:         v-else
 91:         size="small"
 92:         class="rounded-full bg-yellow-500 p-2 hover:bg-yellow-600"
 93:         @click="pauseTimer"
 94:       >
 95:         <Icon
 96:           name="mdi:pause"
 97:           size="24px"
 98:         />
 99:       </PrimeButton>
100:       <PrimeButton
101:         size="small"
102:         class="rounded-full bg-red-500 p-2 hover:bg-red-600"
103:         @click="stopTimer"
104:       >
105:         <Icon
106:           name="mdi:stop"
107:           size="24px"
108:         />
109:       </PrimeButton>
110:     </div>
111:   </div>
112: </template>
```

## File: layers/base/components/Grid.vue
```vue
1: <script setup lang="ts"></script>
2: 
3: <template>
4:   <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 md:gap-4 xl:gap-8">
5:     <slot />
6:   </div>
7: </template>
8: 
9: <style scoped></style>
```

## File: layers/base/components/HelloWorld.vue
```vue
 1: <script setup lang="ts">
 2: const { myLayer } = useAppConfig()
 3: </script>
 4: 
 5: <template>
 6:   <div>
 7:     <h1>Hello World!</h1>
 8:     <pre>{{ myLayer }}</pre>
 9:   </div>
10: </template>
```

## File: layers/base/components/HoverCard.vue
```vue
 1: <script setup lang="ts">
 2: const enableHoverEffect = ref(false)
 3: const hoverPosition = ref(null as null | 'up' | 'down') // 'up', 'center', or 'down'
 4: 
 5: function checkHoverPosition(event) {
 6:   if (!enableHoverEffect.value) {
 7:     return // Do nothing if hover effects are disabled
 8:   }
 9:   const rect = event.target.getBoundingClientRect()
10:   const halfScreen = window.innerHeight / 2
11:   if (rect.top < halfScreen) {
12:     console.log('top')
13:     // If the card is in the top third, expand downwards
14:     hoverPosition.value = 'down'
15:   } else {
16:     console.log('bottom')
17:     // If the card is in the bottom third, expand upwards
18:     hoverPosition.value = 'up'
19:   }
20: }
21: 
22: const checkScreenSize = () => {
23:   enableHoverEffect.value = window.innerWidth >= 1024 // Tailwind's 'lg' breakpoint
24: }
25: 
26: const paddingSize = computed(() => (window.innerWidth >= 1280 ? 32 : 16))
27: 
28: onMounted(() => {
29:   window.addEventListener('resize', checkScreenSize)
30:   checkScreenSize()
31:   return () => window.removeEventListener('resize', checkScreenSize)
32: })
33: 
34: // ui:med:easy:1 - if there is only one card in the grid row, we need to set min h of 100% to prevent the card from collapsing
35: </script>
36: 
37: <template>
38:   <div
39:     class="group relative hover:z-50"
40:     @mouseenter="checkHoverPosition"
41:     @mouseleave="hoverPosition = null"
42:   >
43:     <div
44:       :class="[
45:         'transition-all duration-300 delay-200 p-4 border-b-2 md:border border-color overflow-hidden background',
46:         'flex flex-col gap-4 w-full h-full md:rounded-md md:shadow-md',
47:         {
48:           'lg:group-hover:absolute': enableHoverEffect && !!hoverPosition,
49:           'top-0': enableHoverEffect && hoverPosition === 'down',
50:           'bottom-0': enableHoverEffect && hoverPosition === 'up',
51:         },
52:       ]"
53:       :style="{
54:         height: enableHoverEffect && !!hoverPosition ? `calc(200% + ${paddingSize}px)` : '100%',
55:       }"
56:     >
57:       <slot></slot>
58:     </div>
59:   </div>
60: </template>
61: 
62: <style scoped>
63: /* Extra styles if needed */
64: </style>
```

## File: layers/base/components/Image.vue
```vue
 1: <script lang="ts" setup>
 2: const uuid = useId()
 3: 
 4: const props = defineProps({
 5:   img: {
 6:     type: Object,
 7:     required: true,
 8:   },
 9:   noShrink: {
10:     type: Boolean,
11:     default: false,
12:   },
13: })
14: 
15: const imageUrl = ref(null)
16: 
17: watch(
18:   () => props.img.src,
19:   (newVal) => {
20:     imageUrl.value = newVal
21:   },
22:   { immediate: true },
23: )
24: 
25: function loadFallbackImage(error: Error) {
26:   console.error('Image loading error:', error)
27:   imageUrl.value = `images/defaults/${props.img.type ?? 'fallback'}.jpg`
28: }
29: </script>
30: 
31: <template>
32:   <NuxtImg
33:     v-if="imageUrl"
34:     :key="`image-${uuid}`"
35:     v-bind="$attrs"
36:     :src="imageUrl"
37:     :alt="img.alt"
38:     :width="img.width"
39:     :height="img.height"
40:     :format="img.format"
41:     :quality="img.quality"
42:     :loading="img.loading"
43:     crossorigin="anonymous"
44:     :class="{ 'flex shrink-0': !noShrink }"
45:     @error="loadFallbackImage"
46:   />
47: </template>
```

## File: layers/base/components/InfiniteScroll.vue
```vue
 1: <script setup lang="ts">
 2: const emit = defineEmits(['update:scrollEnd'])
 3: const scrollContainer = ref<HTMLElement | null>(null)
 4: const observer = ref<IntersectionObserver | null>(null)
 5: 
 6: onMounted(() => {
 7:   if ('IntersectionObserver' in window) {
 8:     observer.value = new IntersectionObserver(
 9:       (entries) => {
10:         if (entries[0].isIntersecting) {
11:           emit('update:scrollEnd')
12:         }
13:       },
14:       {
15:         root: null,
16:         rootMargin: '200px', // Load more content when within 200px of the bottom
17:         threshold: 0.1, // Trigger when at least 10% of the target is visible
18:       },
19:     )
20: 
21:     if (scrollContainer.value) {
22:       observer.value.observe(scrollContainer.value)
23:     }
24:   } else {
25:     // Fallback for browsers that don't support IntersectionObserver
26:     window.addEventListener('scroll', handleScroll)
27:   }
28: })
29: 
30: onUnmounted(() => {
31:   if (observer.value && scrollContainer.value) {
32:     observer.value.unobserve(scrollContainer.value)
33:   }
34:   window.removeEventListener('scroll', handleScroll)
35: })
36: 
37: const handleScroll = () => {
38:   if (scrollContainer.value) {
39:     const rect = scrollContainer.value.getBoundingClientRect()
40:     if (rect.top <= window.innerHeight) {
41:       emit('update:scrollEnd')
42:     }
43:   }
44: }
45: </script>
46: 
47: <template>
48:   <div>
49:     <slot />
50:     <div
51:       ref="scrollContainer"
52:       class="h-10 bg-transparent"
53:       aria-hidden="true"
54:     />
55:   </div>
56: </template>
```

## File: layers/base/components/Loader.vue
```vue
 1: <script setup lang="ts">
 2: const loaderWidth = ref('100%')
 3: const loaderHeight = ref('100%')
 4: 
 5: defineProps({
 6:   width: {
 7:     type: String,
 8:     default: '100%',
 9:   },
10:   height: {
11:     type: String,
12:     default: '100%',
13:   },
14: })
15: </script>
16: 
17: <template>
18:   <div
19:     class="skeleton-loader"
20:     :style="{ width: loaderWidth, height: loaderHeight }"
21:   ></div>
22: </template>
23: 
24: <style scoped>
25: .skeleton-loader {
26:   background-color: #f3f3f3;
27:   animation: skeleton-loading 1s infinite linear;
28: }
29: 
30: @keyframes skeleton-loading {
31:   0% {
32:     background-position: -200px 0;
33:   }
34:   100% {
35:     background-position: 200px 0;
36:   }
37: }
38: </style>
```

## File: layers/base/components/Modal.vue
```vue
 1: <script setup lang="ts">
 2: const isOpen = ref(false)
 3: 
 4: const toggleModalOpen = () => {
 5:   isOpen.value = !isOpen.value
 6: }
 7: 
 8: const options = ref({
 9:   isOpen,
10:   toggleModalOpen,
11: })
12: </script>
13: 
14: <template>
15:   <div>
16:     <slot
17:       name="button"
18:       v-bind="options"
19:     />
20:     <PrimeDialog
21:       v-model:visible="isOpen"
22:       modal
23:       :pt="{
24:         root: 'max-w-2xl w-full',
25:         content: 'w-full aspect-square',
26:       }"
27:       :pt-options="{ mergeProps: true, mergeSections: true }"
28:     >
29:       <template #header>
30:         <slot name="modal:header" />
31:       </template>
32:       <slot name="modal:default" />
33:       <template #footer>
34:         <slot
35:           name="modal:footer"
36:           v-bind="options"
37:         />
38:       </template>
39:     </PrimeDialog>
40:   </div>
41: </template>
42: 
43: <style scoped></style>
```

## File: layers/base/components/NavHamburger.vue
```vue
 1: <!-- components/nav/NavHamburger.vue -->
 2: <template>
 3:   <button
 4:     class="md:hidden p-2 hover:bg-gray-800 rounded-lg transition-colors flex"
 5:     @click="toggleMobileNav"
 6:   >
 7:     <Icon
 8:       :name="isMobileSidebarOpen ? 'mdi:close' : 'mdi:menu'"
 9:       size="24px"
10:     />
11:   </button>
12: </template>
13: 
14: <script setup lang="ts">
15: const { isMobileSidebarOpen } = useNavigation()
16: 
17: const toggleMobileNav = () => {
18:   isMobileSidebarOpen.value = !isMobileSidebarOpen.value
19: }
20: </script>
```

## File: layers/base/components/NewLabel.vue
```vue
 1: <script setup lang="ts">
 2: const props = defineProps({
 3:   date: {
 4:     type: String,
 5:     required: true,
 6:   },
 7:   maxAge: {
 8:     type: Number,
 9:     required: true,
10:   },
11: })
12: 
13: const isWithinNumberOfDays = computed(() => {
14:   const currentDate = new Date()
15:   const itemDate = new Date(props.date)
16:   const differenceInDays = Math.floor(
17:     (currentDate.getTime() - itemDate.getTime()) / (1000 * 3600 * 24),
18:   )
19:   return differenceInDays <= props.maxAge
20: })
21: </script>
22: 
23: <template>
24:   <PrimeTag
25:     v-if="isWithinNumberOfDays"
26:     severity="success"
27:     value="NEW"
28:   />
29: </template>
```

## File: layers/base/components/Pagination.vue
```vue
 1: <script setup>
 2: import { onMounted, ref } from 'vue'
 3: import { useRoute } from 'vue-router'
 4: 
 5: // todo:high:1 - implement and test on component
 6: 
 7: const route = useRoute()
 8: const slug = route.params.slug // Dynamic slug based on the current route
 9: const items = ref([])
10: const currentPage = ref(1)
11: 
12: // Store and restore pagination state using session storage
13: const sessionStorageKey = `pagination-${slug}`
14: 
15: function restoreState() {
16:   const savedState = sessionStorage.getItem(sessionStorageKey)
17:   if (savedState) {
18:     const state = JSON.parse(savedState)
19:     currentPage.value = state.currentPage
20:     items.value = state.items
21:   }
22: }
23: 
24: function storeState() {
25:   const state = {
26:     currentPage: currentPage.value,
27:     items: items.value,
28:   }
29:   sessionStorage.setItem(sessionStorageKey, JSON.stringify(state))
30: }
31: 
32: async function fetchItems() {
33:   // Placeholder function to simulate fetching items
34:   const newItems = [{ id: Date.now(), content: `Item ${currentPage.value}` }]
35:   items.value.push(...newItems)
36:   currentPage.value += 1
37:   storeState()
38: }
39: 
40: function loadMore() {
41:   fetchItems()
42: }
43: 
44: onMounted(() => {
45:   restoreState()
46:   if (items.value.length === 0) {
47:     fetchItems()
48:   }
49: })
50: </script>
51: 
52: <template>
53:   <div>
54:     <ul v-if="items.length">
55:       <li
56:         v-for="item in items"
57:         :key="item.id"
58:       >
59:         {{ item.content }}
60:       </li>
61:     </ul>
62:     <button @click="loadMore"> Load More </button>
63:   </div>
64: </template>
```

## File: layers/base/components/Popover.vue
```vue
 1: <script setup lang="ts">
 2: const props = defineProps({
 3:   buttonLabel: { type: String, required: true },
 4: })
 5: 
 6: const popover = ref(null)
 7: 
 8: const toggle = (event) => {
 9:   popover.value?.toggle(event)
10: }
11: </script>
12: 
13: <template>
14:   <div>
15:     <PrimeButton
16:       type="button"
17:       size="small"
18:       severity="secondary"
19:       :label="buttonLabel"
20:       @click="toggle"
21:     />
22:     <PrimePopover ref="popover">
23:       <slot></slot>
24:     </PrimePopover>
25:   </div>
26: </template>
27: 
28: <style scoped></style>
```

## File: layers/base/components/Resizable.vue
```vue
 1: <script lang="ts" setup>
 2: const props = defineProps<{
 3:   slots: Record<string, string>
 4: }>()
 5: 
 6: const container = ref<HTMLElement | null>(null)
 7: const resizer = ref<HTMLElement | null>(null)
 8: const sizes = ref<number[]>([1, 1])
 9: 
10: const startResize = (e: MouseEvent) => {
11:   e.preventDefault()
12:   window.addEventListener('mousemove', resize)
13:   window.addEventListener('mouseup', stopResize)
14: }
15: 
16: const resize = (e: MouseEvent) => {
17:   if (!container.value) return
18:   const containerRect = container.value.getBoundingClientRect()
19:   const newLeftWidth = e.clientX - containerRect.left
20:   const containerWidth = containerRect.width
21: 
22:   sizes.value = [newLeftWidth / containerWidth, 1 - newLeftWidth / containerWidth]
23: }
24: 
25: const stopResize = () => {
26:   window.removeEventListener('mousemove', resize)
27:   window.removeEventListener('mouseup', stopResize)
28: }
29: 
30: onMounted(() => {
31:   if (resizer.value) {
32:     resizer.value.addEventListener('mousedown', startResize)
33:   }
34: })
35: 
36: onUnmounted(() => {
37:   if (resizer.value) {
38:     resizer.value.removeEventListener('mousedown', startResize)
39:   }
40:   window.removeEventListener('mousemove', resize)
41:   window.removeEventListener('mouseup', stopResize)
42: })
43: </script>
44: 
45: <template>
46:   <div
47:     ref="container"
48:     class="relative flex h-full w-full"
49:   >
50:     <div
51:       v-for="(componentId, index) in Object.values(slots)"
52:       :key="componentId"
53:       :class="['overflow-auto', index === 0 ? 'pr-4' : 'pl-4']"
54:       :style="{ flex: sizes[index] }"
55:     >
56:       <slot :name="componentId"></slot>
57:     </div>
58:     <div
59:       ref="resizer"
60:       class="w-2 cursor-col-resize bg-gray-200 hover:bg-gray-300"
61:       @mousedown="startResize"
62:     ></div>
63:   </div>
64: </template>
65: 
66: <style scoped>
67: /* Add any additional styles here */
68: </style>
```

## File: layers/base/components/Sidebar.vue
```vue
 1: <script setup lang="ts">
 2: const isSideVisible = ref(true)
 3: </script>
 4: 
 5: <template>
 6:   <div class="top-0 space-y-4 p-8 md:sticky">
 7:     <div class="flex flex-col justify-center md:justify-start">
 8:       <div class="flex gap-4">
 9:         <!-- <PrimeToggleButton
10:           v-model="isSideVisible"
11:           on-label="Hide"
12:           off-label="Show"
13:         >
14:           <Icon :name="isSideVisible ? 'mdi:eye' : 'mdi:sun'" />
15:         </PrimeToggleButton> -->
16:         <!-- <Transition name="slide-fade">
17:           <PrimeMessage
18:             v-show="isSideVisible"
19:             severity="info"
20:             :pt="{ root: '', text: 'text-sm text-left' }"
21:           >
22:             Filters Coming Soon
23:           </PrimeMessage>
24:         </Transition> -->
25:       </div>
26:     </div>
27:   </div>
28: </template>
29: 
30: <style scoped>
31: /*
32:   Enter and leave animations can use different
33:   durations and timing functions.
34: */
35: .slide-fade-enter-active {
36:   transition: all 0.3s ease-out;
37: }
38: 
39: .slide-fade-leave-active {
40:   transition: all 0.8s cubic-bezier(1, 0.5, 0.8, 1);
41: }
42: 
43: .slide-fade-enter-from,
44: .slide-fade-leave-to {
45:   transform: translateX(-20px);
46:   opacity: 0;
47: }
48: 
49: .slide-top-enter-active {
50:   transition: all 0.3s ease-out;
51: }
52: 
53: .slide-top-leave-active {
54:   transition: all 0.8s cubic-bezier(1, 0.5, 0.8, 1);
55: }
56: 
57: .slide-top-enter-from,
58: .slide-top-leave-to {
59:   transform: translateY(-20px);
60:   opacity: 0;
61: }
62: </style>
```

## File: layers/base/components/SideNav.vue
```vue
  1: <script setup lang="ts">
  2: const props = defineProps({
  3:   categories: {
  4:     type: Array,
  5:     required: true,
  6:   },
  7:   showDevHelpers: {
  8:     type: Boolean,
  9:     default: false,
 10:   },
 11:   isMobile: {
 12:     type: Boolean,
 13:     default: false,
 14:   },
 15:   isSidebarOpen: {
 16:     type: Boolean,
 17:     required: true,
 18:   },
 19:   isMobileSidebarOpen: {
 20:     type: Boolean,
 21:     required: true,
 22:   },
 23: })
 24: 
 25: const route = useRoute()
 26: const emit = defineEmits(['update:isSidebarOpen', 'update:isMobileSidebarOpen'])
 27: // Handle navigation - close mobile nav when navigating
 28: const handleNavigation = () => {
 29:   if (props.isMobile) {
 30:     emit('update:isMobileSidebarOpen', false)
 31:   }
 32: }
 33: 
 34: // Watch route changes to close mobile nav
 35: watch(
 36:   () => route.path,
 37:   () => {
 38:     if (props.isMobile) {
 39:       emit('update:isMobileSidebarOpen', false)
 40:     }
 41:   },
 42: )
 43: </script>
 44: 
 45: <template>
 46:   <div class="relative z-50">
 47:     <!-- Mobile Overlay -->
 48:     <div
 49:       v-if="isMobile"
 50:       class="fixed inset-0 z-[90] bg-black/50 transition-opacity duration-300"
 51:       :class="
 52:         isMobileSidebarOpen ? 'opacity-100 pointer-events-auto' : 'opacity-0 pointer-events-none'
 53:       "
 54:       @click="$emit('update:isMobileSidebarOpen', false)"
 55:     />
 56:     <div
 57:       class="flex flex-col background text-gray-300 shadow-lg transition-all duration-300 group"
 58:       :class="[
 59:         // Shared styles
 60:         'h-full',
 61: 
 62:         // Mobile styles
 63:         isMobile && [
 64:           'fixed left-0 top-0 bottom-0 z-[100]',
 65:           'w-[70vw]',
 66:           isMobileSidebarOpen ? 'translate-x-0' : '-translate-x-full',
 67:         ],
 68: 
 69:         // Desktop styles
 70:         !isMobile && ['relative', 'md:translate-x-0', isSidebarOpen ? 'md:w-60' : 'md:w-14'],
 71:       ]"
 72:     >
 73:       <!-- Toggle button (desktop only) -->
 74:       <button
 75:         v-if="!isMobile"
 76:         class="absolute !z-[1000] -right-3 top-24 hidden h-6 w-6 -translate-y-1/2 items-center justify-center rounded-full bg-primary-600 text-gray-300 transition-opacity duration-300 hover:bg-primary-400 group-hover:opacity-100 md:flex"
 77:         :class="[
 78:           'z-[110]', // Ensure button is above other elements
 79:           isSidebarOpen ? 'opacity-0' : 'opacity-100',
 80:         ]"
 81:         :title="isSidebarOpen ? 'Collapse sidebar' : 'Expand sidebar'"
 82:         @click="$emit('update:isSidebarOpen', !isSidebarOpen)"
 83:       >
 84:         <Icon
 85:           :name="isSidebarOpen ? 'mdi:chevron-left' : 'mdi:chevron-right'"
 86:           size="12px"
 87:         />
 88:       </button>
 89: 
 90:       <div class="flex h-full flex-col overflow-hidden">
 91:         <!-- Logo -->
 92:         <div
 93:           class="flex items-center px-4 py-3 transition-all duration-300"
 94:           :class="isMobile || isSidebarOpen ? 'gap-3' : 'justify-center'"
 95:         >
 96:           <div
 97:             class="flex items-center justify-center rounded-md border bg-white transition-all duration-300 delay-150"
 98:             :class="isMobile || isSidebarOpen ? 'h-10 w-10' : 'h-6 w-6'"
 99:           >
100:             <NuxtLink
101:               to="/"
102:               class="flex h-full w-full items-center justify-center"
103:             >
104:               <IBImage
105:                 :img="{ src: '/astronera-logo.jpg', width: 36, height: 36 }"
106:                 class="h-full w-full transition-all duration-300"
107:                 :class="isMobile || isSidebarOpen ? 'p-0.5' : 'p-1'"
108:                 no-shrink
109:               />
110:             </NuxtLink>
111:           </div>
112:           <Transition
113:             enter-active-class="transition-all duration-150 ease-out"
114:             leave-active-class="transition-all duration-150 ease-in"
115:             enter-from-class="opacity-0 -translate-x-4"
116:             leave-to-class="opacity-0 -translate-x-4"
117:           >
118:             <div
119:               v-if="isMobile || isSidebarOpen"
120:               class="flex cursor-pointer flex-col items-start justify-center text-sm font-bold uppercase leading-none tracking-normal"
121:             >
122:               Astron
123:               <strong class="font-extrabold text-primary-400">Era</strong>
124:             </div>
125:           </Transition>
126:         </div>
127: 
128:         <!-- Navigation Categories - always expanded on mobile -->
129:         <nav class="flex-1 space-y-4 px-2 py-4">
130:           <div
131:             v-for="category in categories"
132:             :key="category.id"
133:             class="space-y-1"
134:           >
135:             <div
136:               v-if="isMobile || isSidebarOpen"
137:               class="px-2 text-xs font-semibold uppercase text-gray-400"
138:             >
139:               {{ category.label }}
140:             </div>
141:             <ul>
142:               <li
143:                 v-for="item in category.items"
144:                 :key="item.slug"
145:               >
146:                 <NuxtLink
147:                   :to="item.slug"
148:                   class="flex items-center rounded-lg px-2 py-2 text-sm font-medium hover:bg-primary-700"
149:                   :class="{ 'bg-primary-800': route.path === item.slug }"
150:                   @click="handleNavigation"
151:                 >
152:                   <Icon
153:                     :name="item.icon"
154:                     size="20px"
155:                     class="mr-3 flex-shrink-0"
156:                   />
157:                   <span v-if="isMobile || isSidebarOpen">{{ item.label }}</span>
158:                 </NuxtLink>
159:               </li>
160:             </ul>
161:           </div>
162:         </nav>
163:       </div>
164:     </div>
165:   </div>
166: </template>
167: 
168: <style>
169: .transition-transform {
170:   transition-property: transform, width, height;
171: }
172: </style>
```

## File: layers/base/components/SocialBlock.vue
```vue
 1: <script setup lang="ts">
 2: interface Socials {
 3:   [key: string]: string
 4: }
 5: 
 6: const props = defineProps({
 7:   socials: {
 8:     type: Object as PropType<Socials>,
 9:     required: true,
10:   },
11:   size: {
12:     type: String,
13:     default: '24px',
14:   },
15: })
16: 
17: const socialIcon = (platform: string) => {
18:   switch (platform) {
19:     case 'linkedin':
20:       return 'mdi:linkedin'
21:     case 'youtube':
22:       return 'mdi:youtube'
23:     case 'instagram':
24:       return 'mdi:instagram'
25:     case 'facebook':
26:       return 'mdi:facebook'
27:     case 'twitter':
28:       return 'mdi:twitter'
29:     default:
30:       return ''
31:   }
32: }
33: 
34: const formattedSocials = computed(() => {
35:   if (!props.socials) return []
36:   return Object.entries(props.socials).map(([platform, url]) => {
37:     return {
38:       platform: platform.split('_')[0],
39:       url,
40:       icon: socialIcon(platform.split('_')[0]),
41:     }
42:   })
43: })
44: </script>
45: 
46: <template>
47:   <div
48:     v-if="formattedSocials.length > 0"
49:     class="flex gap-2"
50:   >
51:     <a
52:       v-for="social in formattedSocials"
53:       :key="`${social.platform}-icon`"
54:       class="flex cursor-pointer items-center"
55:       target="_blank"
56:       :href="social.url"
57:     >
58:       <Icon
59:         :name="social.icon"
60:         :size="size"
61:       />
62:     </a>
63:   </div>
64: </template>
65: 
66: <style scoped></style>
```

## File: layers/base/components/TabView.vue
```vue
 1: <script setup lang="ts">
 2: interface Tab {
 3:   title: string
 4:   slotName: string
 5:   value: string
 6: }
 7: 
 8: defineProps<{
 9:   tabs: Tab[]
10: }>()
11: </script>
12: 
13: <template>
14:   <PrimeTabs
15:     value="0"
16:     class="h-full"
17:     scrollable
18:     :pt="{
19:       root: 'w-full h-full',
20:     }"
21:     :pt-options="{ mergeSections: true }"
22:   >
23:     <PrimeTabList
24:       :pt="{
25:         root: 'gap-4 sticky top-0 left-0 z-50 flex text-nowrap flex-grow w-full overflow-scroll bg-black no-scrollbar border-b border-color',
26:       }"
27:       :pt-options="{ mergeSections: true, mergeProps: true }"
28:     >
29:       <PrimeTab
30:         v-for="tab in tabs"
31:         :key="tab.title"
32:         :value="tab.value"
33:         :pt="{
34:           root: ({ context }) => ({
35:             class: [
36:               'text-nowrap px-6 py-4 border-x border-color h-full',
37:               { 'bg-primary-900': context.active },
38:             ],
39:           }),
40:         }"
41:         :pt-options="{ mergeSections: true, mergeProps: true }"
42:       >
43:         {{ tab.title }}
44:       </PrimeTab>
45:     </PrimeTabList>
46:     <PrimeTabPanel
47:       v-for="tab in tabs"
48:       :key="`tab-index-${tab.title}`"
49:       :value="tab.value"
50:       :pt="{
51:         root: 'overflow-scroll h-full',
52:       }"
53:       :pt-options="{ mergeProps: true, mergeSections: true }"
54:     >
55:       <slot :name="tab.slotName" />
56:     </PrimeTabPanel>
57:   </PrimeTabs>
58: </template>
59: 
60: <style></style>
```

## File: layers/base/components/YT.client.vue
```vue
 1: <template>
 2:   <div id="player"></div>
 3: </template>
 4: 
 5: <script setup lang="ts">
 6: const player = ref(null)
 7: 
 8: onMounted(() => {
 9:   // Load the YouTube IFrame API dynamically if it's not already loaded
10:   if (!window.YT) {
11:     // Check if YT object is already present
12:     const tag = document.createElement('script')
13:     tag.src = 'https://www.youtube.com/iframe_api'
14:     const firstScriptTag = document.getElementsByTagName('script')[0]
15:     firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)
16: 
17:     // Define the callback globally to initialize player when API is ready
18:     window.onYouTubeIframeAPIReady = initializePlayer
19:   } else {
20:     // Initialize the player immediately if YT is already loaded
21:     initializePlayer()
22:   }
23: })
24: 
25: function initializePlayer() {
26:   // Make sure the YT object and YT.Player are defined
27:   if (typeof YT !== 'undefined' && YT.Player) {
28:     player.value = new YT.Player('player', {
29:       // Ensure the element ID matches your template
30:       height: '390',
31:       width: '640',
32:       listType: 'user_uploads',
33:       list: 'Fireship', // Make sure 'Fireship' is a correct videoId or replace it with a valid one
34:       events: {
35:         onReady: onPlayerReady,
36:       },
37:     })
38:   }
39: }
40: 
41: function onPlayerReady(event) {
42:   event.target.playVideo()
43: }
44: 
45: onBeforeUnmount(() => {
46:   if (player.value) {
47:     player.value.destroy()
48:   }
49: })
50: </script>
```

## File: layers/base/composables/utils/arrays.ts
```typescript
1: export const removeDuplicates = <T>(arr: T[]): T[] => [...new Set(arr)]
2: 
3: export const sortBy = <T, K extends keyof T>(arr: T[], key: K): T[] =>
4:   arr.sort((a, b) => (a[key] > b[key] ? 1 : a[key] < b[key] ? -1 : 0))
```

## File: layers/base/composables/utils/hasValueChanged.ts
```typescript
 1: export function deepEqual(obj1: any, obj2: any): boolean {
 2:   if (obj1 === obj2) {
 3:     return true
 4:   }
 5: 
 6:   if (typeof obj1 !== 'object' || typeof obj2 !== 'object' || obj1 === null || obj2 === null) {
 7:     return false
 8:   }
 9: 
10:   if (Array.isArray(obj1) && Array.isArray(obj2)) {
11:     if (obj1.length !== obj2.length) {
12:       return false
13:     }
14:     for (let i = 0; i < obj1.length; i++) {
15:       if (!deepEqual(obj1[i], obj2[i])) {
16:         return false
17:       }
18:     }
19:     return true
20:   }
21: 
22:   if (Array.isArray(obj1) || Array.isArray(obj2)) {
23:     return false // One is an array, the other is not
24:   }
25: 
26:   const keys1 = Object.keys(obj1)
27:   const keys2 = Object.keys(obj2)
28: 
29:   if (keys1.length !== keys2.length) {
30:     return false
31:   }
32: 
33:   for (const key of keys1) {
34:     if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {
35:       return false
36:     }
37:   }
38: 
39:   return true
40: }
41: 
42: export function hasValueChanged(newValue: any, currentValue: any): boolean {
43:   if (
44:     typeof newValue === 'string'
45:     || typeof newValue === 'boolean'
46:     || typeof newValue === 'number'
47:     || newValue === null
48:   ) {
49:     return newValue !== currentValue
50:   }
51: 
52:   if (Array.isArray(newValue) || typeof newValue === 'object') {
53:     return !deepEqual(newValue, currentValue)
54:   }
55: 
56:   return newValue !== currentValue
57: }
58: 
59: interface UpdateData {
60:   [key: string]: any
61: }
62: 
63: interface CleanDataResult {
64:   data: UpdateData
65:   noDataUpdated: boolean
66: }
67: 
68: export function wasRowDataUpdated(newData: UpdateData, previousData: UpdateData): CleanDataResult {
69:   const updatedData: UpdateData = {}
70: 
71:   Object.entries(newData).forEach(([key, value]) => {
72:     if (hasValueChanged(value, previousData[key])) {
73:       updatedData[key] = value
74:     }
75:   })
76: 
77:   return { data: updatedData, noDataUpdated: Object.keys(updatedData).length === 0 }
78: }
```

## File: layers/base/composables/utils/objects.ts
```typescript
1: export const pluck = <T, K extends keyof T>(objs: T[], key: K): T[K][] =>
2:   objs.map((obj) => obj[key])
```

## File: layers/base/composables/utils/strings.ts
```typescript
 1: export const slugify = (str: string): string => {
 2:   str = str.replace(/^\s+|\s+$/g, '')
 3:   str = str.toLowerCase()
 4: 
 5:   const from
 6:     = 'ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;'
 7:   const to
 8:     = 'AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------'
 9:   for (let i = 0, l = from.length; i < l; i++) {
10:     str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i))
11:   }
12: 
13:   str = str
14:     .replace(/[^a-z0-9 -]/g, '')
15:     .replace(/\s+/g, '-')
16:     .replace(/-+/g, '-')
17:   return str
18: }
19: 
20: export function upperCaseFirstLetter(str: string): string {
21:   const firstLetter = str.slice(0, 1)
22:   return firstLetter.toUpperCase() + str.substring(1)
23: }
24: 
25: export const stringIsNull = (value: any): boolean =>
26:   value === null || value === undefined || value === '' || value.length === 0
```

## File: layers/base/composables/utils/time.ts
```typescript
 1: export function toDateObject(inputDate = '2022-03-01T10:30:00-05:00') {
 2:   // !todo - add support for internationalization
 3:   // !todo - add support for dynamic length
 4:   const length = 'short'
 5:   // convert date to local time
 6:   const date = new Date(inputDate.toLocaleString())
 7: 
 8:   const formattedDate = new Intl.DateTimeFormat('en-US', {
 9:     weekday: length,
10:     year: 'numeric',
11:     month: length,
12:     day: 'numeric',
13:     hour: 'numeric',
14:     minute: 'numeric',
15:     timeZoneName: length,
16:   }).format(date)
17: 
18:   const dateArray = formattedDate.split(', ')
19: 
20:   return {
21:     weekday: dateArray[0],
22:     month: dateArray[1].split(' ')[0],
23:     day: dateArray[1].split(' ')[1],
24:     time: dateArray[3].split(' ')[0],
25:     ampm: dateArray[3].split(' ')[1],
26:     timezone: dateArray[3].split(' ')[2],
27:     year: dateArray[2],
28:   }
29: }
30: 
31: export function lastSeen(lastSeenTimestamp: string): string {
32:   const now = new Date()
33:   const lastSeen = new Date(lastSeenTimestamp)
34:   const secondsSinceLastSeen = Math.round((now.getTime() - lastSeen.getTime()) / 1000)
35: 
36:   if (secondsSinceLastSeen < 60) {
37:     return `${secondsSinceLastSeen} second${secondsSinceLastSeen === 1 ? '' : 's'} ago`
38:   }
39: 
40:   const minutesSinceLastSeen = Math.round(secondsSinceLastSeen / 60)
41: 
42:   if (minutesSinceLastSeen < 60) {
43:     return `${minutesSinceLastSeen} minute${minutesSinceLastSeen === 1 ? '' : 's'} ago`
44:   }
45: 
46:   const hoursSinceLastSeen = Math.round(minutesSinceLastSeen / 60)
47: 
48:   if (hoursSinceLastSeen < 24) {
49:     return `${hoursSinceLastSeen} hour${hoursSinceLastSeen === 1 ? '' : 's'} ago`
50:   }
51: 
52:   const daysSinceLastSeen = Math.round(hoursSinceLastSeen / 24)
53:   return `${daysSinceLastSeen} day${daysSinceLastSeen === 1 ? '' : 's'} ago`
54: }
```

## File: layers/base/composables/ab-test.ts
```typescript
 1: import type { DefineComponent } from 'vue'
 2: 
 3: export enum TestGoal {
 4:   SignUp = 'sign_up',
 5:   Purchase = 'purchase',
 6:   FeatureUsage = 'feature_usage',
 7:   TimeOnPage = 'time_on_page',
 8:   ClickThroughRate = 'click_through_rate',
 9: }
10: 
11: interface ABTestVariant<T> {
12:   name: string
13:   value: T
14: }
15: 
16: interface ABTestConfig<T> {
17:   experimentName: string
18:   variants: ABTestVariant<T>[]
19:   defaultVariant: ABTestVariant<T>
20:   goals: TestGoal[]
21: }
22: 
23: export function useABTest<T>({ experimentName, variants, defaultVariant, goals }: ABTestConfig<T>) {
24:   const { $posthog } = useNuxtApp()
25: 
26:   const selectedVariant = ref<ABTestVariant<T>>(defaultVariant)
27: 
28:   // Use PostHog's experiment feature to get the variant
29:   const variantName = $posthog.getFeatureFlag(experimentName)
30:   selectedVariant.value = variants.find((v) => v.name === variantName) || defaultVariant
31: 
32:   // Capture experiment exposure
33:   $posthog.capture('$experiment_started', {
34:     experiment: experimentName,
35:     variant: selectedVariant.value.name,
36:     goals: goals,
37:   })
38: 
39:   const value = computed(() => selectedVariant.value.value)
40: 
41:   // Function to track goal completion
42:   const trackGoal = (goal: TestGoal, properties: Record<string, any> = {}) => {
43:     $posthog.capture(goal, {
44:       ...properties,
45:       $experiment_name: experimentName,
46:       $variant: selectedVariant.value.name,
47:     })
48:   }
49: 
50:   return {
51:     variant: selectedVariant,
52:     value,
53:     trackGoal,
54:   }
55: }
56: 
57: // Helper function for component-based A/B tests
58: type ComponentVariant = ABTestVariant<DefineComponent<any, any, any>>
59: 
60: export function useComponentABTest(config: ABTestConfig<DefineComponent<any, any, any>>) {
61:   const { variant, trackGoal } = useABTest(config)
62: 
63:   const TestComponent = computed(() => ({
64:     render() {
65:       return h(variant.value.value.component)
66:     },
67:   }))
68: 
69:   return {
70:     TestComponent,
71:     trackGoal,
72:   }
73: }
```

## File: layers/base/composables/analytics.ts
```typescript
  1: import { ref, onMounted, onUnmounted } from 'vue'
  2: import { useRoute } from 'vue-router'
  3: 
  4: export enum UserAcquisitionMetric {
  5:   SignUpConversion = 'sign_up_conversion',
  6:   DemoRequest = 'demo_request',
  7:   ContactFormSubmission = 'contact_form_submission',
  8:   FeaturePageEngagement = 'feature_page_engagement',
  9:   BlogTraffic = 'blog_traffic',
 10: }
 11: 
 12: export enum OnboardingMetric {
 13:   StartRate = 'start_rate',
 14:   StepCompletion = 'step_completion',
 15:   DropOff = 'drop_off',
 16:   CompletionTime = 'completion_time',
 17: }
 18: 
 19: export enum UserEngagementMetric {
 20:   SessionDuration = 'session_duration',
 21:   ActionsPerSession = 'actions_per_session',
 22:   VisitFrequency = 'visit_frequency',
 23:   FeatureAdoption = 'feature_adoption',
 24: }
 25: 
 26: export enum ContentPerformanceMetric {
 27:   ArticleView = 'article_view',
 28:   ReadTime = 'read_time',
 29:   Share = 'share',
 30:   Like = 'like',
 31:   Comment = 'comment',
 32: }
 33: 
 34: export enum JobMarketMetric {
 35:   JobListing = 'job_listing',
 36:   JobView = 'job_view',
 37:   JobApplication = 'job_application',
 38:   CompanyProfileCreation = 'company_profile_creation',
 39:   CompanyFollow = 'company_follow',
 40: }
 41: 
 42: export enum TechnicalPerformanceMetric {
 43:   PageLoadTime = 'page_load_time',
 44:   APIResponseTime = 'api_response_time',
 45:   ErrorRate = 'error_rate',
 46:   Uptime = 'uptime',
 47: }
 48: 
 49: export type ContentType = 'blog_post' | 'news_article' | 'company_profile' | 'job_listing'
 50: 
 51: export type ErrorType = 'javascript_error' | 'api_error' | '404_error'
 52: 
 53: export interface AnalyticsEventProperties {
 54:   [key: string]: any
 55: }
 56: 
 57: export function useAnalytics() {
 58:   const { $posthog } = useNuxtApp()
 59:   const route = useRoute()
 60:   const pageEnterTime = ref(Date.now())
 61: 
 62:   const trackEvent = (eventName: string, properties?: AnalyticsEventProperties) => {
 63:     $posthog.capture(eventName, properties)
 64:   }
 65: 
 66:   const trackPageView = (properties?: AnalyticsEventProperties) => {
 67:     const timeSpent = Date.now() - pageEnterTime.value
 68:     $posthog.capture('$pageview', {
 69:       path: route.path,
 70:       title: document.title,
 71:       timeSpent,
 72:       ...properties,
 73:     })
 74:     pageEnterTime.value = Date.now()
 75:   }
 76: 
 77:   const identifyUser = (userId: string, properties?: AnalyticsEventProperties) => {
 78:     $posthog.identify(userId, properties)
 79:   }
 80: 
 81:   const trackError = (errorType: ErrorType, errorDetails: string, componentName?: string) => {
 82:     $posthog.capture('Error Occurred', {
 83:       errorType,
 84:       errorDetails,
 85:       componentName,
 86:     })
 87:   }
 88: 
 89:   const trackUserAcquisition = (
 90:     metric: UserAcquisitionMetric,
 91:     properties?: AnalyticsEventProperties,
 92:   ) => {
 93:     $posthog.capture(`User Acquisition - ${metric}`, properties)
 94:   }
 95: 
 96:   const trackOnboarding = (metric: OnboardingMetric, properties?: AnalyticsEventProperties) => {
 97:     $posthog.capture(`Onboarding - ${metric}`, properties)
 98:   }
 99: 
100:   const trackUserEngagement = (
101:     metric: UserEngagementMetric,
102:     properties?: AnalyticsEventProperties,
103:   ) => {
104:     $posthog.capture(`User Engagement - ${metric}`, properties)
105:   }
106: 
107:   const trackContentPerformance = (
108:     metric: ContentPerformanceMetric,
109:     contentType: ContentType,
110:     properties?: AnalyticsEventProperties,
111:   ) => {
112:     $posthog.capture(`Content Performance - ${contentType} - ${metric}`, properties)
113:   }
114: 
115:   const trackJobMarketActivity = (
116:     metric: JobMarketMetric,
117:     properties?: AnalyticsEventProperties,
118:   ) => {
119:     $posthog.capture(`Job Market - ${metric}`, properties)
120:   }
121: 
122:   const trackTechnicalPerformance = (
123:     metric: TechnicalPerformanceMetric,
124:     value: number,
125:     properties?: AnalyticsEventProperties,
126:   ) => {
127:     $posthog.capture(`Technical Performance - ${metric}`, { value, ...properties })
128:   }
129: 
130:   // Session tracking
131:   onMounted(() => {
132:     trackPageView()
133:     $posthog.capture('Session Started')
134:   })
135: 
136:   onUnmounted(() => {
137:     trackPageView()
138:     $posthog.capture('Session Ended', {
139:       sessionDuration: Date.now() - pageEnterTime.value,
140:     })
141:   })
142: 
143:   return {
144:     trackEvent,
145:     trackPageView,
146:     identifyUser,
147:     trackUserAcquisition,
148:     trackOnboarding,
149:     trackUserEngagement,
150:     trackContentPerformance,
151:     trackJobMarketActivity,
152:     trackTechnicalPerformance,
153:     trackError,
154:   }
155: }
156: 
157: // import {
158: //   UserAcquisitionMetric,
159: //   OnboardingMetric,
160: //   UserEngagementMetric,
161: //   ContentPerformanceMetric,
162: //   JobMarketMetric,
163: //   TechnicalPerformanceMetric,
164: //   ContentType,
165: //   ErrorType
166: // } from '~/types/analytics'
167: 
168: // const {
169: //   trackUserAcquisition,
170: //   trackOnboarding,
171: //   trackUserEngagement,
172: //   trackContentPerformance,
173: //   trackJobMarketActivity,
174: //   trackTechnicalPerformance,
175: //   trackError
176: // } = useAnalytics()
177: 
178: // // Track a sign-up conversion
179: // trackUserAcquisition(UserAcquisitionMetric.SignUpConversion, { source: 'organic' })
180: 
181: // // Track an onboarding step completion
182: // trackOnboarding(OnboardingMetric.StepCompletion, { step: 'personal_info', timeSpent: 120 })
183: 
184: // // Track a feature adoption
185: // trackUserEngagement(UserEngagementMetric.FeatureAdoption, { feature: 'job_search' })
186: 
187: // // Track a blog post share
188: // trackContentPerformance(ContentPerformanceMetric.Share, 'blog_post', { postId: '123', platform: 'twitter' })
189: 
190: // // Track a job application
191: // trackJobMarketActivity(JobMarketMetric.JobApplication, { jobId: '456', companyId: '789' })
192: 
193: // // Track page load time
194: // trackTechnicalPerformance(TechnicalPerformanceMetric.PageLoadTime, performance.now())
195: 
196: // // Track an error
197: // trackError(ErrorType.APIError, 'Failed to fetch job listings', 'JobSearchComponent')
```

## File: layers/base/composables/glass-card.ts
```typescript
  1: interface GlassCardProps {
  2:   color: string
  3:   bgOpacity: number
  4:   gradientOpacity: number
  5:   blurIntensity: string
  6:   disableHover: boolean
  7:   padding: string
  8:   loading: boolean
  9:   ariaLabel: string
 10: }
 11: 
 12: const cardStates = reactive<Record<string, any>>({})
 13: 
 14: export function useGlassCard(props: GlassCardProps, uniqueId: string) {
 15:   if (!cardStates[uniqueId]) {
 16:     cardStates[uniqueId] = {
 17:       tiltFactor: 0,
 18:       mouseX: 0,
 19:       mouseY: 0,
 20:       isOutside: true,
 21:       cardWidth: 0,
 22:       cardHeight: 0,
 23:     }
 24:   }
 25: 
 26:   const state = cardStates[uniqueId]
 27: 
 28:   const handleMouseMove = (event: MouseEvent) => {
 29:     const cardElement = document.getElementById(uniqueId)?.querySelector('.glass-card')
 30:     if (!cardElement) return
 31: 
 32:     const cardRect = cardElement.getBoundingClientRect()
 33: 
 34:     state.cardWidth = cardRect.width
 35:     state.cardHeight = cardRect.height
 36: 
 37:     const gravityArea = 100 // pixels around the card
 38:     const x = event.clientX - cardRect.left
 39:     const y = event.clientY - cardRect.top
 40: 
 41:     // Check if the mouse is within the gravity field
 42:     if (
 43:       x >= -gravityArea &&
 44:       x <= cardRect.width + gravityArea &&
 45:       y >= -gravityArea &&
 46:       y <= cardRect.height + gravityArea
 47:     ) {
 48:       state.mouseX = x
 49:       state.mouseY = y
 50:       state.isOutside = false
 51: 
 52:       // Calculate distance from the edge of the card
 53:       const distanceX = Math.max(0, -x, x - cardRect.width)
 54:       const distanceY = Math.max(0, -y, y - cardRect.height)
 55:       const distance = Math.sqrt(distanceX * distanceX + distanceY * distanceY)
 56: 
 57:       // Calculate tilt factor
 58:       if (x >= 0 && x <= cardRect.width && y >= 0 && y <= cardRect.height) {
 59:         state.tiltFactor = 1 // Cursor is directly over the card
 60:       } else {
 61:         // Smooth transition in the gravity area
 62:         state.tiltFactor = Math.max(0, 1 - distance / gravityArea)
 63:       }
 64:     } else {
 65:       state.tiltFactor = 0
 66:       state.isOutside = true
 67:     }
 68:   }
 69: 
 70:   const handleMouseLeave = () => {
 71:     state.tiltFactor = 0
 72:     state.isOutside = true
 73:   }
 74: 
 75:   const cardStyle = computed(() => {
 76:     if (state.isOutside) return {}
 77: 
 78:     const maxTilt = 4 // maximum tilt in degrees
 79: 
 80:     // Use cardWidth and cardHeight from state instead of getting them from cardRef
 81:     const centerX = state.cardWidth / 2
 82:     const centerY = state.cardHeight / 2
 83: 
 84:     const tiltY = ((state.mouseX - centerX) / centerX) * maxTilt * state.tiltFactor
 85:     const tiltX = ((centerY - state.mouseY) / centerY) * maxTilt * state.tiltFactor
 86: 
 87:     return {
 88:       transform: `perspective(1000px) rotateX(${tiltX}deg) rotateY(${tiltY}deg)`,
 89:       transition: state.isOutside ? 'transform 0.3s ease-out' : 'none',
 90:     }
 91:   })
 92: 
 93:   const spotlightColor = computed(() => {
 94:     const hue = (state.mouseX / state.cardWidth) * 360
 95:     return `hsl(${hue}, 100%, 70%)`
 96:   })
 97: 
 98:   const spotlightStyle = computed(() => {
 99:     if (state.isOutside) return { opacity: 0 }
100: 
101:     const spotlightSize = 300 // Fixed 300px radius
102:     const opacity = 0.07 + state.tiltFactor * 0.08
103: 
104:     return {
105:       background: `
106:       radial-gradient(circle ${spotlightSize}px at ${state.mouseX}px ${state.mouseY}px, 
107:       ${spotlightColor.value}, 
108:       transparent 70%),
109:       radial-gradient(circle ${spotlightSize * 0.8}px at ${state.mouseX}px ${state.mouseY}px, 
110:       ${spotlightColor.value}, 
111:       transparent 70%)
112:     `,
113:       opacity: opacity,
114:       transition: 'opacity 0.3s ease-out',
115:       mixBlendMode: 'soft-light',
116:     }
117:   })
118: 
119:   const bgClasses = computed(() => [
120:     `bg-${props.color}-950/${props.bgOpacity}`,
121:     `hover:bg-${props.color}-900/${props.bgOpacity + 10}`,
122:   ])
123: 
124:   const borderClasses = computed(() => [
125:     'border',
126:     'border-color',
127:     `hover:border-${props.color}-400/40`,
128:   ])
129: 
130:   const textClasses = computed(() => [`text-${props.color}-100`])
131: 
132:   const gradientClasses = computed(() => [
133:     `from-${props.color}-100/${props.gradientOpacity}`,
134:     `to-${props.color}-500/${props.gradientOpacity}`,
135:   ])
136: 
137:   const hoverClasses = computed(() =>
138:     props.disableHover
139:       ? []
140:       : ['hover:shadow-2xl', `hover:bg-${props.color}-800/${props.bgOpacity + 10}`],
141:   )
142: 
143:   return {
144:     handleMouseMove,
145:     handleMouseLeave,
146:     cardStyle,
147:     spotlightStyle,
148:     bgClasses,
149:     borderClasses,
150:     textClasses,
151:     gradientClasses,
152:     hoverClasses,
153:   }
154: }
```

## File: layers/base/composables/metrics.ts
```typescript
 1: function roundToNDecimalPlaces(value: number, n: number): number {
 2:   return Number(value.toFixed(n))
 3: }
 4: 
 5: function calculateMedian(arr: number[]): number {
 6:   const sorted = arr.slice().sort((a, b) => a - b)
 7:   const mid = Math.floor(sorted.length / 2)
 8:   return sorted.length % 2 !== 0 ? sorted[mid] : (sorted[mid - 1] + sorted[mid]) / 2
 9: }
10: 
11: function calculateStandardDeviation(valuesArray: number[]): number {
12:   const mean = valuesArray.reduce((a, b) => a + b) / valuesArray.length
13:   return Math.sqrt(
14:     valuesArray.map((x) => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / valuesArray.length,
15:   )
16: }
17: 
18: function calculateMean(arr: number[]): number {
19:   return arr.reduce((a, b) => a + b) / arr.length
20: }
21: 
22: function calculateVariance(arr: number[]): number {
23:   const mean = calculateMean(arr)
24:   return arr.reduce((sum, value) => sum + Math.pow(value - mean, 2), 0) / arr.length
25: }
26: 
27: function calculateRange(arr: number[]): number {
28:   return Math.max(...arr) - Math.min(...arr)
29: }
30: 
31: function calculateSum(arr: number[]): number {
32:   return arr.reduce((a, b) => a + b, 0)
33: }
34: 
35: function calculateMode(arr: number[]): number | number[] {
36:   const frequency: { [key: number]: number } = {}
37:   let maxFreq = 0
38:   let modes: number[] = []
39: 
40:   arr.forEach((value) => {
41:     frequency[value] = (frequency[value] || 0) + 1
42:     if (frequency[value] > maxFreq) {
43:       maxFreq = frequency[value]
44:       modes = [value]
45:     } else if (frequency[value] === maxFreq) {
46:       modes.push(value)
47:     }
48:   })
49: 
50:   return modes.length === 1 ? modes[0] : modes
51: }
52: 
53: function calculateMin(arr: number[]): number {
54:   return Math.min(...arr)
55: }
56: 
57: function calculateMax(arr: number[]): number {
58:   return Math.max(...arr)
59: }
60: 
61: function calculatePercentile(arr: number[], percentile: number): number {
62:   if (percentile < 0 || percentile > 100) {
63:     throw new Error('Percentile must be between 0 and 100')
64:   }
65:   const sorted = arr.slice().sort((a, b) => a - b)
66:   const index = (percentile / 100) * (sorted.length - 1)
67:   const lower = Math.floor(index)
68:   const upper = lower + 1
69:   const weight = index % 1
70: 
71:   if (upper >= sorted.length) {
72:     return sorted[lower]
73:   }
74: 
75:   return sorted[lower] * (1 - weight) + sorted[upper] * weight
76: }
77: 
78: export function useBaseMetrics() {
79:   return {
80:     format: {
81:       roundToN: roundToNDecimalPlaces,
82:     },
83:     calculate: {
84:       median: calculateMedian,
85:       standardDeviation: calculateStandardDeviation,
86:       mean: calculateMean,
87:       variance: calculateVariance,
88:       range: calculateRange,
89:       sum: calculateSum,
90:       mode: calculateMode,
91:       min: calculateMin,
92:       max: calculateMax,
93:       percentile: calculatePercentile,
94:     },
95:   }
96: }
```

## File: layers/base/composables/modal.ts
```typescript
 1: export function useModal() {
 2:   // was used for news modals at one point
 3:   const currentPost = computed(() => news.value[currentIndex.value])
 4:   const nextPost = computed(() => news.value[nextIndex.value])
 5:   const previousPost = computed(() => news.value[previousIndex.value])
 6:   const isModalOpen = ref(false)
 7:   const currentIndex = ref(0)
 8:   const previousIndex = computed(() => (currentIndex.value > 0 ? currentIndex.value - 1 : 0))
 9:   const nextIndex = computed(() =>
10:     currentIndex.value < news.value.length - 1 ? currentIndex.value + 1 : currentIndex.value,
11:   )
12: 
13:   const toggleModal = (postIndex?: number) => {
14:     isModalOpen.value = !isModalOpen.value
15:     if (postIndex !== undefined) {
16:       currentIndex.value = postIndex
17:     }
18:   }
19: 
20:   const next = () => {
21:     if (currentIndex.value < news.value.length - 1) {
22:       currentIndex.value++
23:     }
24:   }
25: 
26:   const previous = () => {
27:     if (currentIndex.value > 0) {
28:       currentIndex.value--
29:     }
30:   }
31: }
```

## File: layers/base/composables/notification.ts
```typescript
 1: import type { useToast } from 'primevue/usetoast'
 2: 
 3: interface BaseNotification {
 4:   summary: string
 5:   message: string
 6: }
 7: 
 8: export function useNotification() {
 9:   const nuxtApp = useNuxtApp()
10:   const getToast: typeof useToast = () => nuxtApp.vueApp.config.globalProperties.$toast
11:   const toast = getToast()
12: 
13:   const success = ({ summary, message }: BaseNotification) => {
14:     toast.add({
15:       severity: 'success',
16:       summary: `Success: ${summary}`,
17:       detail: message,
18:       life: 5000,
19:       closable: true,
20:     })
21:   }
22: 
23:   const error = ({ summary, message }: BaseNotification) => {
24:     toast.add({
25:       severity: 'error',
26:       summary: `Error: ${summary}`,
27:       detail: message,
28:       life: 0,
29:       closable: true,
30:     })
31:   }
32: 
33:   const info = ({ summary, message }: BaseNotification) => {
34:     toast.add({
35:       severity: 'info',
36:       summary: `Info: ${summary}`,
37:       detail: message,
38:       life: 5000,
39:       closable: true,
40:     })
41:   }
42: 
43:   const warn = ({ summary, message }: BaseNotification) => {
44:     toast.add({
45:       severity: 'warn',
46:       summary: `Warning: ${summary}`,
47:       detail: message,
48:       life: 5000,
49:       closable: true,
50:     })
51:   }
52: 
53:   const feature = ({ summary, message }: BaseNotification) => {
54:     toast.add({
55:       severity: 'warn',
56:       group: 'cta',
57:       summary: summary,
58:       detail: message,
59:       life: 0,
60:       closable: true,
61:     })
62:   }
63: 
64:   return {
65:     success,
66:     error,
67:     info,
68:     warn,
69:     feature,
70:   }
71: }
```

## File: layers/base/composables/settings.store.ts
```typescript
 1: type SettingsKey = 'usersStore' | 'storeNews'
 2: 
 3: export const useSettingsStore = defineStore('settingsStore', () => {
 4:   const settings = ref({} as Settings)
 5:   const summaryLevel = ref('beginner' as SummaryLevel)
 6: 
 7:   function toggleSettings(key: SettingsKey) {
 8:     settings.value[key] = !settings.value[key]
 9:   }
10: 
11:   function isSettingsOn(key: SettingsKey) {
12:     return !settings.value[key]
13:   }
14: 
15:   const changeSummaryLevel = (level: 'beginner' | 'intermediate' | 'expert') => {
16:     summaryLevel.value = level
17:   }
18: 
19:   return {
20:     toggleSettings,
21:     isSettingsOn,
22:   }
23: })
24: 
25: if (import.meta.hot) {
26:   import.meta.hot.accept(acceptHMRUpdate(useSettingsStore, import.meta.hot))
27: }
```

## File: layers/base/composables/social.store.ts
```typescript
  1: import { useLogger } from '@ib/logger'
  2: 
  3: export const useSocialStore = defineStore('settingsStore', () => {
  4:   const errors = useBaseError()
  5:   const logger = useLogger('useSocialStore')
  6:   const { fetch } = useBaseFetch()
  7: 
  8:   const youtube = ref({})
  9:   async function getYoutubeAnalytics(channelName: string) {
 10:     logger.info(`getting youtube analytics for ${channelName}`)
 11:     const response = await fetch('/api/social/youtube/analytics', {
 12:       method: 'GET',
 13:       query: {
 14:         channelName,
 15:       },
 16:     })
 17: 
 18:     const data = errors.server({
 19:       response,
 20:       devOnly: false,
 21:       devMessage: 'error getting youtube analytics',
 22:       userMessage: 'something went wrong when getting youtube analytics',
 23:     })
 24: 
 25:     youtube.value = data
 26:   }
 27: 
 28:   const instagram = ref<any>(null)
 29:   async function getInstagramAnalytics(userId: string) {
 30:     const logger = useLogger('getInstagramAnalytics')
 31:     logger.info(`Fetching Instagram analytics for ${userId}`)
 32:     try {
 33:       const response = await $fetch(`/api/social/instagram/analytics?userId=${userId}`, {
 34:         method: 'GET',
 35:       })
 36: 
 37:       const data = errors.server({
 38:         response,
 39:         devOnly: false,
 40:         devMessage: 'Error getting Instagram analytics',
 41:         userMessage: 'Something went wrong when getting Instagram analytics',
 42:       })
 43: 
 44:       instagram.value = data
 45:     } catch (error) {
 46:       errors.client({
 47:         error,
 48:         devOnly: false,
 49:         devMessage: 'Error getting Instagram analytics',
 50:         userMessage: 'Something went wrong when getting Instagram analytics',
 51:       })
 52:     }
 53:   }
 54: 
 55:   const linkedin = ref<any>(null)
 56:   async function getLinkedInAnalytics(postId: string) {
 57:     const logger = useLogger('getLinkedInAnalytics')
 58:     logger.info(`Fetching LinkedIn analytics for post ${postId}`)
 59:     try {
 60:       const response = await $fetch(`/api/social/linkedin/analytics?postId=${postId}`, {
 61:         method: 'GET',
 62:       })
 63: 
 64:       const data = errors.server({
 65:         response,
 66:         devOnly: false,
 67:         devMessage: 'Error getting LinkedIn analytics',
 68:         userMessage: 'Something went wrong when getting LinkedIn analytics',
 69:       })
 70: 
 71:       linkedin.value = data
 72:     } catch (error) {
 73:       errors.client({
 74:         error,
 75:         devOnly: false,
 76:         devMessage: 'Error getting LinkedIn analytics',
 77:         userMessage: 'Something went wrong when getting LinkedIn analytics',
 78:       })
 79:     }
 80:   }
 81: 
 82:   const twitter = ref<any>(null)
 83:   async function getTwitterAnalytics(postId: string) {
 84:     const logger = useLogger('getTwitterAnalytics')
 85:     logger.info(`Fetching Twitter analytics for post ${postId}`)
 86:     try {
 87:       const response = await fetch(`/api/social/twitter/analytics?postId=${postId}`, {
 88:         method: 'GET',
 89:       })
 90: 
 91:       const data = errors.server({
 92:         response,
 93:         devOnly: false,
 94:         devMessage: 'Error getting Twitter analytics',
 95:         userMessage: 'Something went wrong when getting Twitter analytics',
 96:       })
 97: 
 98:       twitter.value = data
 99:     } catch (error) {
100:       errors.client({
101:         error,
102:         devOnly: false,
103:         devMessage: 'Error getting Twitter analytics',
104:         userMessage: 'Something went wrong when getting Twitter analytics',
105:       })
106:     }
107:   }
108: 
109:   return {
110:     youtube,
111:     getYoutubeAnalytics,
112:     //
113:     instagram,
114:     getInstagramAnalytics,
115:     //
116:     linkedin,
117:     getLinkedInAnalytics,
118:     //
119:     twitter,
120:     getTwitterAnalytics,
121:   }
122: })
123: 
124: if (import.meta.hot) {
125:   import.meta.hot.accept(acceptHMRUpdate(useSocialStore, import.meta.hot))
126: }
```

## File: layers/base/composables/useMediaQuery.ts
```typescript
 1: // composables/useMediaQuery.ts
 2: export const useMediaQuery = (query: string) => {
 3:   const matches = ref(false)
 4: 
 5:   if (import.meta.client) {
 6:     const mediaQuery = window.matchMedia(query)
 7:     matches.value = mediaQuery.matches
 8: 
 9:     const handler = (event: MediaQueryListEvent) => {
10:       matches.value = event.matches
11:     }
12: 
13:     // Watch for changes
14:     mediaQuery.addEventListener('change', handler)
15: 
16:     // Cleanup
17:     onUnmounted(() => {
18:       mediaQuery.removeEventListener('change', handler)
19:     })
20:   }
21: 
22:   return matches
23: }
```

## File: layers/base/composables/useNavigation.ts
```typescript
 1: // composables/useNavigation.ts
 2: export const useNavigation = () => {
 3:   const isSidebarOpen = useState('nav-sidebar-open', () => true)
 4:   const isMobileSidebarOpen = useState('nav-mobile-sidebar-open', () => false)
 5: 
 6:   // Create our own media query composable
 7:   const isMobile = useMediaQuery('(max-width: 768px)')
 8: 
 9:   // Close mobile nav on route changes
10:   const route = useRoute()
11:   
12:   watch(
13:     () => route.path,
14:     () => {
15:       isMobileSidebarOpen.value = false
16:     },
17:   )
18: 
19:   return {
20:     isSidebarOpen,
21:     isMobileSidebarOpen,
22:     isMobile,
23:   }
24: }
```

## File: layers/base/composables/utils.ts
```typescript
 1: import { wasRowDataUpdated } from './utils/hasValueChanged'
 2: import * as time from './utils/time'
 3: import * as strings from './utils/strings'
 4: import * as objects from './utils/objects'
 5: import * as arrays from './utils/arrays'
 6: 
 7: export function useUtils() {
 8:   return {
 9:     wasRowDataUpdated,
10:     time: {
11:       format: time.toDateObject,
12:       lastSeen: time.lastSeen,
13:     },
14:     strings: {
15:       firstUpper: strings.upperCaseFirstLetter,
16:       slugify: strings.slugify,
17:     },
18:     arrays: {
19:       removeDuplicates: arrays.removeDuplicates,
20:       sortBy: arrays.sortBy,
21:     },
22:     objects: {
23:       pluck: objects.pluck,
24:     },
25:   }
26: }
```

## File: layers/base/plugins/error-handler.ts
```typescript
 1: import { useErrorHandler } from '@ib/logger'
 2: 
 3: export default defineNuxtPlugin((nuxtApp) => {
 4:   const { handleError } = useErrorHandler()
 5: 
 6:   // Set up global error handlers
 7:   if (import.meta.client) {
 8:     window.addEventListener('error', (event) => {
 9:       handleError(event.error, 'Uncaught Exception')
10:     })
11: 
12:     window.addEventListener('unhandledrejection', (event) => {
13:       handleError(event.reason, 'Unhandled Promise Rejection')
14:     })
15:   }
16: })
```

## File: layers/base/plugins/posthog.client.ts
```typescript
 1: import posthog from 'posthog-js'
 2: 
 3: export default defineNuxtPlugin((nuxtApp) => {
 4:   const env = nuxtApp.$config.public
 5:   const env2 = useRuntimeConfig().public
 6: 
 7:   console.log('ENV Key:', env, env2)
 8:   console.log('NODE_ENV:', import.meta.env.NODE_ENV)
 9: 
10:   const posthogKey = env.posthogKey || env2.posthogKey
11:   const posthogUrl = env.posthogUrl || env2.posthogUrl
12: 
13:   // Initialize PostHog
14:   posthog.init(posthogKey, {
15:     api_host: posthogUrl,
16:     autocapture: false, // Disable autocapture as we'll handle events manually
17:     capture_pageview: false, // We'll capture pageviews manually for more control
18:     persistence: 'localStorage+cookie',
19:     // bootstrap: {
20:     //   distinctID: runtimeConfig.public.posthogDistinctId // Set this in your runtime config if you have a user ID
21:     // },
22:     loaded: (posthog) => {
23:       // This function is called once PostHog is loaded
24:       if (import.meta.env.NODE_ENV === 'development') {
25:         // Log to console in development mode
26:         posthog.debug()
27:       }
28:     },
29:   })
30: 
31:   // Capture page views
32:   nuxtApp.hook('page:finish', () => {
33:     posthog.capture('$pageview')
34:   })
35: 
36:   // Expose PostHog instance and utility functions
37:   return {
38:     provide: {
39:       posthog: {
40:         // Expose the raw PostHog instance
41:         raw: posthog,
42: 
43:         // Utility function to capture events
44:         capture: (eventName: string, properties?: Record<string, any>) => {
45:           posthog.capture(eventName, properties)
46:         },
47: 
48:         // Utility function for A/B testing
49:         getFeatureFlag: (flagName: string, defaultValue?: any) => {
50:           return posthog.getFeatureFlag(flagName, defaultValue)
51:         },
52: 
53:         // Utility function to identify users
54:         identify: (distinctId: string, properties?: Record<string, any>) => {
55:           posthog.identify(distinctId, properties)
56:         },
57: 
58:         // Utility function to reset user identity
59:         reset: () => {
60:           posthog.reset()
61:         },
62: 
63:         // Utility function to opt in/out of tracking
64:         optIn: () => {
65:           posthog.opt_in_capturing()
66:         },
67:         optOut: () => {
68:           posthog.opt_out_capturing()
69:         },
70: 
71:         // Utility function for registering super properties
72:         register: (properties: Record<string, any>) => {
73:           posthog.register(properties)
74:         },
75: 
76:         // Utility function for registering one-time super properties
77:         registerOnce: (properties: Record<string, any>) => {
78:           posthog.register_once(properties)
79:         },
80:       },
81:     },
82:   }
83: })
```

## File: layers/base/plugins/sentry.client.ts
```typescript
 1: import * as Sentry from '@sentry/vue'
 2: import { defineNuxtPlugin } from '#app'
 3: 
 4: export default defineNuxtPlugin((nuxtApp) => {
 5:   const app = nuxtApp.vueApp
 6:   const router = useRouter()
 7: 
 8:   Sentry.init({
 9:     app,
10:     dsn: 'https://eec364410b024a5a837f60e00d367513@o1175094.ingest.sentry.io/4504389151621120',
11:     integrations: [Sentry.browserTracingIntegration({ router }), Sentry.replayIntegration()],
12:     tracesSampleRate: process.env.NODE_ENV === 'production' ? 0.2 : 1.0,
13:     tracePropagationTargets: ['localhost', /^https:\/\/yourserver\.io\/api/],
14:     replaysSessionSampleRate: 0.1,
15:     replaysOnErrorSampleRate: 1.0,
16:     attachProps: true,
17:     trackComponents: true,
18:   })
19: 
20:   // Sentry.setUser(useSupabaseUser())
21:   Sentry.setTag('environment', process.env.NODE_ENV)
22: })
```

## File: layers/base/types/content.ts
```typescript
 1: import { z } from 'zod'
 2: 
 3: export const titleSchema = z.object({
 4:   centered: z.boolean().optional(),
 5:   label: z.string().optional(),
 6:   main: z.string(),
 7:   subtitle: z.string().optional(),
 8: })
 9: 
10: export const faqSchema = z.object({
11:   label: z.string(),
12:   description: z.string(),
13: })
14: 
15: export const imageSchema = z.object({
16:   src: z.string(),
17:   alt: z.string(),
18:   width: z.number().optional(),
19:   height: z.number().optional(),
20: })
21: 
22: export type ImageType = z.infer<typeof imageSchema>
23: export type TitleType = z.infer<typeof titleSchema>
24: export type FaqType = z.infer<typeof faqSchema>
```

## File: layers/base/types/database.ts
```typescript
 1: import type { Tables } from '../../../supabase/schema.gen'
 2: 
 3: export type RowUser = Tables<'user_profiles'>
 4: export type RowUserFollowers = Tables<'user_followers'>
 5: export type RowRole = Tables<'roles'>
 6: export type RowRegisterInterest = Tables<'register_interest'>
 7: 
 8: export type RowCategory = Tables<'categories'>
 9: export type RowTag = Tables<'tags'>
10: 
11: export type RowNews = Tables<'news'>
12: export type RowNewsTag = Tables<'news_tags'>
13: 
14: export type RowEmbedding = Tables<'embeddings'>
15: 
16: export type RowPaper = Tables<'papers'>
17: 
18: type ArrayToUnion<A> = A extends readonly (infer T)[] ? T : never
19: 
20: const userCardKeys = [
21:   'id',
22:   'given_name',
23:   'surname',
24:   'username',
25:   'avatar',
26:   'followed_count',
27:   'followers_count',
28:   'plan',
29: ] as const
30: 
31: export type UserCard = Pick<RowUser, ArrayToUnion<typeof userCardKeys>>
```

## File: layers/base/types/index.ts
```typescript
1: export * from './users'
2: export * from './other-type-file'
```

## File: layers/base/types/users.ts
```typescript
 1: // don't forget to add to this file if you make any changes in the database
 2: import * as z from 'zod'
 3: 
 4: export const LocationSchema = z.object({
 5:   id: z.number(),
 6:   created_at: z.string().optional(),
 7:   city: z.string(),
 8:   country: z.string(),
 9:   state: z.string(),
10:   address: z.string().nullable(),
11:   latitude: z.number().optional().nullable(),
12:   longitude: z.number().optional().nullable(),
13: })
14: 
15: export const UserRoleSchema = z.object({
16:   id: z.number(),
17:   name: z.string().nullable(),
18:   body: z.string().nullable().optional(),
19:   created_at: z.string().optional(),
20:   icon: z.string(),
21: })
22: 
23: export const IdName = z.object({
24:   id: z.number(),
25:   name: z.string(),
26: })
27: 
28: export const UserSkillSchema = z.object({
29:   id: z.number(),
30:   title: z.string().nullable(),
31:   body: z.string().nullable().optional(),
32:   total_endorsements: z.number(),
33:   admin_rating: z.number().nullable(),
34:   avg_rating: z.number().nullable(),
35:   created_at: z.string().optional(),
36: })
37: 
38: export const UserSocialSchema = z.object({
39:   id: z.number(),
40:   url: z.string(),
41:   platform: z.string(),
42:   username: z.string(),
43: })
44: 
45: export const UserBasicSchema = z.object({
46:   id: z.string(),
47:   given_name: z.string(),
48:   surname: z.string().nullable(),
49:   username: z.string().nullable(),
50:   avatar: z.string().nullable(),
51:   introduction: z.string().nullable(),
52:   followers_count: z.number().nullable(),
53:   followed_count: z.number().nullable(),
54:   is_following: z.boolean().nullable(),
55:   role: z.number(),
56: })
57: 
58: export const UserFullSchema = UserBasicSchema.extend({
59:   email: z.string(),
60:   dob: z.string().nullable(),
61:   gender_id: z.number().nullable(),
62:   created_at: z.string(),
63:   updated_at: z.string().nullable(),
64:   quote: z.string().nullable(),
65: })
66: 
67: export const UserRowSchema = z.object({
68:   given_name: z.string(),
69:   email: z.string(),
70:   surname: z.string().nullable(),
71:   username: z.string().nullable(),
72:   avatar: z.string().nullable(),
73:   introduction: z.string().nullable(),
74:   plan: z.string().nullish(),
75:   dob: z.string().nullable(),
76:   quote: z.string().nullable(),
77:   gender_id: z.number().nullable(),
78: })
79: 
80: export const UserRolesSchema = z.array(UserRoleSchema)
81: 
82: export type UserType = z.infer<typeof UserBasicSchema>
83: export type UserFullType = z.infer<typeof UserFullSchema>
84: export type UserRoleType = z.infer<typeof UserRoleSchema>
85: export type UserRowType = z.infer<typeof UserRowSchema>
86: export type UserSocialType = z.infer<typeof UserSocialSchema>
```

## File: layers/base/nuxt.config.ts
```typescript
 1: import { defineNuxtConfig } from 'nuxt/config'
 2: 
 3: export default defineNuxtConfig({
 4:   workspaceDir: '../../',
 5:   srcDir: '.',
 6: 
 7:   icon: {
 8:     serverBundle: {
 9:       collections: ['material-symbols', 'mdi'],
10:     },
11:   },
12: 
13:   eslint: {
14:     checker: true,
15:   },
16: 
17:   image: {
18:     providers: {
19:       supabase: {
20:         provider: '../../layers/base/supabase-provider.ts',
21:         options: {
22:           baseURL: process.env.NUXT_PUBLIC_SUPABASE_URL,
23:         },
24:       },
25:     },
26:     presets: {
27:       original: {
28:         modifiers: {
29:           width: 1920,
30:           height: 1080,
31:         },
32:       },
33:       mobile: {
34:         modifiers: {
35:           width: 768,
36:           height: 1024,
37:         },
38:       },
39:       thumbnail: {
40:         modifiers: {
41:           width: 300,
42:           height: 200,
43:         },
44:       },
45:     },
46:   },
47: 
48:   components: [
49:     {
50:       path: './components',
51:       pathPrefix: false,
52:       prefix: 'IB',
53:       global: true,
54:     },
55:   ],
56: })
```

## File: layers/base/supabase-provider.ts
```typescript
 1: export function getImage(
 2:   src,
 3:   {
 4:     modifiers = { width: null, height: null, format: null },
 5:     baseURL = process.env.NUXT_PUBLIC_SUPABASE_URL,
 6:   } = {},
 7: ) {
 8:   const { width, height, format } = modifiers
 9:   const [_, bucket, sizeName, imageFileName] = src.split('/')
10: 
11:   // Determine target size
12:   let targetSizeName = sizeName
13:   if (width && height) {
14:     if (width <= 300 && height <= 200) {
15:       targetSizeName = 'thumbnail'
16:     } else if (width <= 768 && height <= 1024) {
17:       targetSizeName = 'mobile'
18:     } else {
19:       targetSizeName = 'original'
20:     }
21:   }
22: 
23:   const imageNameWithoutExt = imageFileName.split('.')[0]
24:   const imageFormat = format || imageFileName.split('.')[1] || 'jpg'
25: 
26:   return {
27:     url: `${baseURL}/storage/v1/object/public/${bucket}/${targetSizeName}/${imageNameWithoutExt}.${imageFormat}`,
28:   }
29: }
```

## File: layers/crud/.playground/app.config.ts
```typescript
1: export default defineAppConfig({
2:   myLayer: {
3:     name: 'My amazing Nuxt layer (overwritten)'
4:   }
5: })
```

## File: layers/crud/.playground/nuxt.config.ts
```typescript
1: export default defineNuxtConfig({
2:   extends: ['..'],
3:   modules: ['@nuxt/eslint']
4: })
```

## File: layers/crud/components/Feedback.vue
```vue
  1: <script setup lang="ts">
  2: import { z } from 'zod'
  3: 
  4: const feedbackStore = useFeedbackStore()
  5: 
  6: defineProps({
  7:   cta: {
  8:     type: String,
  9:     required: true,
 10:     default: 'How could we improve?',
 11:   },
 12: })
 13: 
 14: interface FeedbackType {
 15:   name: string
 16:   value: string
 17: }
 18: 
 19: const feedbackTypes = [
 20:   { name: 'Bug Report', value: 'bug_report' },
 21:   { name: 'Feature Request', value: 'feature_request' },
 22:   { name: 'User Interface Issue', value: 'user_interface_issue' },
 23:   { name: 'Performance Issue', value: 'performance_issue' },
 24:   { name: 'Documentation', value: 'documentation' },
 25: ]
 26: 
 27: const route = useRoute()
 28: const { userId } = useCurrentUser()
 29: 
 30: const initialFeedback = () => ({
 31:   user_id: userId,
 32:   page_identifier: route.fullPath,
 33:   feedback_type: null,
 34:   message: '',
 35:   device_info: '',
 36:   content_status: 'new',
 37: })
 38: 
 39: const feedback = ref(initialFeedback())
 40: 
 41: const messagePlaceholder = computed(() => {
 42:   if (!feedback.value.feedback_type) {
 43:     return 'Please select a feedback type first'
 44:   }
 45: 
 46:   const type = feedback.value.feedback_type
 47:   if (!type) return ''
 48: 
 49:   switch (type.value) {
 50:     case 'bug_report':
 51:       return 'Describe the bug in detail...'
 52:     case 'feature_request':
 53:       return 'Describe the feature you would like to see...'
 54:     case 'user_interface_issue':
 55:       return 'What UI issue did you encounter?'
 56:     case 'performance_issue':
 57:       return 'Describe the performance issue...'
 58:     case 'documentation':
 59:       return 'What documentation issue did you find?'
 60:     default:
 61:       return 'Enter your message'
 62:   }
 63: })
 64: 
 65: const isMessageDisabled = computed(() => !feedback.value.feedback_type)
 66: 
 67: const messageLength = z.string().min(10)
 68: 
 69: const isMessageInvalid = computed(() => !messageLength.safeParse(feedback.value.message).success)
 70: 
 71: const resetFeedback = () => {
 72:   feedback.value = initialFeedback()
 73: }
 74: 
 75: const submitFeedback = async () => {
 76:   await feedbackStore.submitFeedback(feedback.value)
 77:   resetFeedback()
 78: }
 79: </script>
 80: 
 81: <template>
 82:   <div class="w-52">
 83:     <h2 class="text-lg mb-4 text-left font-bold">
 84:       {{ cta }}
 85:     </h2>
 86:     <form
 87:       class="w-52 space-y-4"
 88:       @submit.prevent="submitFeedback"
 89:     >
 90:       <PrimeSelect
 91:         v-model="feedback.feedback_type"
 92:         :pt="{ root: 'flex text-left pl-1' }"
 93:         :pt-options="{ mergeProps: true, mergeSections: true }"
 94:         :options="feedbackTypes"
 95:         option-label="name"
 96:         placeholder="Feedback Type"
 97:       />
 98:       <PrimeTextarea
 99:         v-show="feedback.feedback_type"
100:         v-model="feedback.message"
101:         class="w-full"
102:         :rows="5"
103:         :placeholder="messagePlaceholder"
104:         :disabled="isMessageDisabled"
105:         :invalid="isMessageInvalid"
106:       />
107:       <div>
108:         <PrimeButton
109:           v-show="feedback.feedback_type"
110:           class="flex w-full justify-between"
111:           :disabled="isMessageInvalid"
112:           :outlined="isMessageInvalid"
113:           @click="submitFeedback"
114:         >
115:           Submit Feedback
116:           <Icon name="mdi:send" />
117:         </PrimeButton>
118:       </div>
119:     </form>
120:   </div>
121: </template>
122: 
123: <style scoped></style>
```

## File: layers/crud/components/Upload.vue
```vue
 1: <script setup lang="ts">
 2: // const toast = useNotification()
 3: 
 4: const props = defineProps({
 5:   name: {
 6:     type: String,
 7:     required: true,
 8:   },
 9:   url: {
10:     type: String,
11:     required: true,
12:   },
13:   multiple: {
14:     type: Boolean,
15:     default: false,
16:   },
17:   accept: {
18:     type: String,
19:     default: '',
20:   },
21:   maxFileSize: {
22:     type: Number,
23:     default: 1000000,
24:   },
25: })
26: 
27: const onAdvancedUpload = () => {
28:   toast.success({ summary: 'File Uploaded', message: `${props.name} files uploaded` })
29: }
30: </script>
31: 
32: <template>
33:   <PrimeCard>
34:     <template #content>
35:       <PrimeFileUpload
36:         :name="name"
37:         :multiple="multiple"
38:         :accept="accept"
39:         :url="url"
40:         :max-file-size="maxFileSize"
41:         @upload="onAdvancedUpload()"
42:       >
43:         <template #empty>
44:           <p>Drag and drop files to here to upload.</p>
45:         </template>
46:       </PrimeFileUpload>
47:     </template>
48:   </PrimeCard>
49: </template>
```

## File: layers/crud/composables/audit.ts
```typescript
  1: export enum AuditLogLevel {
  2:   INFO = 'INFO',
  3:   WARNING = 'WARNING',
  4:   ERROR = 'ERROR',
  5:   CRITICAL = 'CRITICAL',
  6: }
  7: 
  8: export interface AuditLogEntry {
  9:   userId: string
 10:   action: string
 11:   details: any
 12:   level: AuditLogLevel
 13:   timestamp: string
 14:   ipAddress?: string
 15:   userAgent?: string
 16:   resourceId?: string
 17:   resourceType?: string
 18: }
 19: 
 20: interface AuditLogOptions {
 21:   level?: AuditLogLevel
 22:   resourceId?: string
 23:   resourceType?: string
 24:   skipDB?: boolean
 25: }
 26: 
 27: export function useAuditLog() {
 28:   const supabase = useSupabaseClient()
 29:   const user = useSupabaseUser()
 30:   const config = useRuntimeConfig()
 31: 
 32:   const logEvent = async (action: string, details: any, options: AuditLogOptions = {}) => {
 33:     const userId = user.value?.id || 'anonymous'
 34:     const timestamp = new Date().toISOString()
 35:     const level = options.level || AuditLogLevel.INFO
 36: 
 37:     const logEntry: AuditLogEntry = {
 38:       userId,
 39:       action,
 40:       details,
 41:       level,
 42:       timestamp,
 43:       ipAddress: useRequestHeaders(['x-forwarded-for'])['x-forwarded-for'] || '',
 44:       userAgent: useRequestHeaders(['user-agent'])['user-agent'] || '',
 45:       resourceId: options.resourceId,
 46:       resourceType: options.resourceType,
 47:     }
 48: 
 49:     // Remove any sensitive information from the log entry
 50:     sanitizeLogEntry(logEntry)
 51: 
 52:     // Log to console in development
 53:     if (import.meta.dev) {
 54:       console.log('Audit Log:', logEntry)
 55:     }
 56: 
 57:     if (!options.skipDB) {
 58:       try {
 59:         const { error } = await supabase.from('audit_logs').insert(logEntry)
 60: 
 61:         if (error) {
 62:           console.error('Error logging audit event to database:', error)
 63:         }
 64:       } catch (error) {
 65:         console.error('Error logging audit event to database:', error)
 66:       }
 67:     }
 68: 
 69:     // If configured, send logs to an external service
 70:     if (config.public.EXTERNAL_LOGGING_SERVICE) {
 71:       try {
 72:         await $fetch(config.public.EXTERNAL_LOGGING_SERVICE, {
 73:           method: 'POST',
 74:           body: JSON.stringify(logEntry),
 75:         })
 76:       } catch (error) {
 77:         console.error('Error sending log to external service:', error)
 78:       }
 79:     }
 80:   }
 81: 
 82:   const sanitizeLogEntry = (logEntry: AuditLogEntry) => {
 83:     // Remove sensitive information like passwords, tokens, etc.
 84:     if (logEntry.details && typeof logEntry.details === 'object') {
 85:       const sensitiveFields = ['password', 'token', 'secret', 'credit_card']
 86:       for (const field of sensitiveFields) {
 87:         if (field in logEntry.details) {
 88:           logEntry.details[field] = '[REDACTED]'
 89:         }
 90:       }
 91:     }
 92:   }
 93: 
 94:   const getAuditLogs = async (
 95:     filters: Partial<AuditLogEntry>,
 96:     pagination: { page: number, pageSize: number },
 97:   ) => {
 98:     let query = supabase.from('audit_logs').select('*')
 99: 
100:     // Apply filters
101:     Object.entries(filters).forEach(([key, value]) => {
102:       if (value !== undefined) {
103:         query = query.eq(key, value)
104:       }
105:     })
106: 
107:     // Apply pagination
108:     const { data, error, count } = await query
109:       .range(pagination.page * pagination.pageSize, (pagination.page + 1) * pagination.pageSize - 1)
110:       .order('timestamp', { ascending: false })
111: 
112:     if (error) {
113:       console.error('Error fetching audit logs:', error)
114:       throw error
115:     }
116: 
117:     return { logs: data, totalCount: count }
118:   }
119: 
120:   return {
121:     logEvent,
122:     getAuditLogs,
123:     AuditLogLevel,
124:   }
125: }
```

## File: layers/crud/composables/delete.ts
```typescript
 1: import { useErrorHandler, AppError, ErrorSeverity, ErrorType, useLogger } from '@ib/logger'
 2: import { useRateLimit } from './rate-limit'
 3: import { useHttpHandler } from './http-handler'
 4: import { getOrCreateStore } from './main.store'
 5: 
 6: export function useDeleteData<T extends { id: string | number }>(
 7:   tableName: string,
 8:   options: {
 9:     validateDelete?: (id: string | number) => boolean | Promise<boolean>
10:     refreshRelated?: () => Promise<void>
11:     rateLimitMs?: number
12:     auditLog?: (action: string, details: any) => Promise<void>
13:   } = {},
14: ) {
15:   const { remove } = useHttpHandler()
16:   const { handleError } = useErrorHandler()
17:   const logger = useLogger('useDeleteData')
18:   const store = getOrCreateStore<T>(tableName)()
19:   const { checkRateLimit } = useRateLimit()
20:   const isDeleting: Ref<boolean> = ref(false)
21:   let lastDeleteTime = 0
22: 
23:   const deleteData = async (id: string | number | (string | number)[]) => {
24:     isDeleting.value = true
25:     const startTime = Date.now()
26: 
27:     const deleteSingle = async (itemId: string | number): Promise<void> => {
28:       try {
29:         // Rate limiting
30:         if (options.rateLimitMs) {
31:           await checkRateLimit('useDeleteData', { limitMs: options.rateLimitMs })
32:         }
33: 
34:         // Validation
35:         if (options.validateDelete && !(await options.validateDelete(itemId))) {
36:           throw new AppError({
37:             type: ErrorType.VALIDATION_ERROR,
38:             message: 'Delete validation failed',
39:             severity: ErrorSeverity.MEDIUM,
40:             context: 'Data Validation',
41:           })
42:         }
43: 
44:         // Optimistic delete
45:         store.removeItem(itemId)
46: 
47:         // Perform the delete
48:         await remove(tableName, itemId)
49: 
50:         // Refresh related data if needed
51:         if (options.refreshRelated) {
52:           await options.refreshRelated()
53:         }
54: 
55:         // Audit logging
56:         if (options.auditLog) {
57:           await options.auditLog('DELETE', { tableName, id: itemId })
58:         }
59: 
60:         lastDeleteTime = Date.now()
61:       } catch (error: any) {
62:         // Revert optimistic delete
63:         const oldItem = store.getItemById(itemId)
64:         if (oldItem) {
65:           store.addItems([oldItem])
66:         }
67:         throw error
68:       }
69:     }
70: 
71:     try {
72:       if (Array.isArray(id)) {
73:         await Promise.all(id.map(deleteSingle))
74:       } else {
75:         await deleteSingle(id)
76:       }
77:     } catch (error: any) {
78:       handleError(error, 'Error deleting data')
79:       throw error
80:     } finally {
81:       isDeleting.value = false
82:     }
83:   }
84: 
85:   return {
86:     deleteData,
87:     isDeleting,
88:   }
89: }
```

## File: layers/crud/composables/fetch.ts
```typescript
  1: import { useLogger } from '@ib/logger'
  2: import type { FilterBy, DBTable } from '../server/utils/base.interface'
  3: import type { DomainKey } from './pagination.store'
  4: import { useCookie, useRequestHeaders } from '#imports'
  5: import type { FetchResult } from '#app'
  6: 
  7: export interface FetchInput {
  8:   domainKey: DomainKey
  9:   endpoint: string
 10:   pagination?: {
 11:     page: number
 12:     limit: number
 13:   }
 14:   criteria: {
 15:     dto: string
 16:     filterBy?: FilterBy<DBTable>
 17:   }
 18: }
 19: 
 20: function getDataStructure(obj: any): any {
 21:   if (Array.isArray(obj)) {
 22:     return obj.length > 0 ? [getDataStructure(obj[0])] : []
 23:   } else if (typeof obj === 'object' && obj !== null) {
 24:     const structure: Record<string, any> = {}
 25:     for (const key in obj) {
 26:       structure[key] = getDataStructure(obj[key])
 27:     }
 28:     return structure
 29:   } else {
 30:     return typeof obj
 31:   }
 32: }
 33: 
 34: export function useBaseFetch() {
 35:   const errors = useBaseError()
 36:   const paginationStore = usePaginationStore()
 37:   const loading = useLoadingStore()
 38:   const logger = useLogger('useBaseFetch')
 39:   const apiDataStore = useApiDataStore()
 40: 
 41:   const fetch = $fetch.create({
 42:     retryStatusCodes: [408, 409, 425, 500, 502, 503, 504],
 43:     headers: {
 44:       'X-USER-ID': useCookie('userId').value ?? 'no-user-id',
 45:       'cookie': useRequestHeaders(['cookie']).cookie ?? '',
 46:     },
 47:     onResponseError({ error, response, request, options }) {
 48:       console.error('onResponseError', response, response._data, error)
 49:     },
 50:     async onResponse({ request, response, options }) {
 51:       const url = request.toString()
 52:       const structure = getDataStructure(response._data)
 53:       console.log('Captured data structure for:', url, structure)
 54:       apiDataStore.setData(url, structure)
 55:     },
 56:   })
 57: 
 58:   async function fetchPaginatedData(params: FetchInput) {
 59:     const { domainKey, endpoint, criteria } = params
 60: 
 61:     if (loading.isLoading(domainKey)) {
 62:       return null
 63:     }
 64: 
 65:     if (paginationStore.isDataFinished(domainKey)) {
 66:       return null
 67:     }
 68: 
 69:     if (!paginationStore.getPagination(domainKey)) {
 70:       return null
 71:     }
 72: 
 73:     loading.setLoading(domainKey, true)
 74: 
 75:     try {
 76:       logger.info('fetchPaginatedData for', domainKey, endpoint, criteria)
 77:       const response = await fetch(endpoint, {
 78:         method: 'POST',
 79:         params: {
 80:           ...criteria,
 81:           pagination: paginationStore.getPaginationRange(domainKey),
 82:         },
 83:       })
 84: 
 85:       console.log('fetchPaginatedData RESPONSE', response)
 86: 
 87:       const data = errors.server({
 88:         response,
 89:         devOnly: false,
 90:         userMessage: `Sorry there was an error getting ${domainKey} from ${endpoint}`,
 91:         devMessage: `fetchPaginatedData errored selecting paginated ${domainKey} data from ${endpoint}`,
 92:       })
 93: 
 94:       if (!data || !data.length || data.length < paginationStore.getPagination(domainKey)!.limit) {
 95:         paginationStore.setDataFinished(domainKey)
 96:       }
 97: 
 98:       await loading.setLoadingInterval(domainKey, false, 1500)
 99:       paginationStore.incrementPagination(domainKey)
100: 
101:       return data
102:     } catch (error) {
103:       errors.client({
104:         error,
105:         devOnly: false,
106:         userMessage: `Sorry there was an error getting ${domainKey} from ${endpoint}`,
107:         devMessage: `fetchPaginatedData error for ${domainKey}`,
108:       })
109:     }
110:   }
111: 
112:   return {
113:     fetchPaginatedData,
114:     fetch,
115:   }
116: }
```

## File: layers/crud/composables/http-handler.ts
```typescript
  1: import type { PostgrestResponse, PostgrestError } from '@supabase/supabase-js'
  2: import {
  3:   useErrorHandler,
  4:   ErrorType,
  5:   useLogger,
  6:   ErrorSeverity,
  7:   AppError,
  8:   mapErrorSeverity,
  9:   mapErrorType,
 10:   retryableStatusCodes,
 11: } from '@ib/logger'
 12: import { getOrCreateStore } from './main.store'
 13: import { usePaginationStore, type PaginationType } from './pagination.store'
 14: 
 15: type FilterOperator =
 16:   | 'eq'
 17:   | 'neq'
 18:   | 'gt'
 19:   | 'gte'
 20:   | 'lt'
 21:   | 'lte'
 22:   | 'like'
 23:   | 'ilike'
 24:   | 'is'
 25:   | 'in'
 26:   | 'contains'
 27:   | 'containedBy'
 28:   | 'overlaps'
 29:   | 'textSearch'
 30:   | 'match'
 31:   | 'not'
 32:   | 'or'
 33:   | 'and'
 34:   | 'rangeGt'
 35:   | 'rangeGte'
 36:   | 'rangeLt'
 37:   | 'rangeLte'
 38:   | 'rangeAdjacent'
 39: 
 40: type FilterOptionValue = string | number | boolean | null | any[] | Record<string, unknown>
 41: 
 42: type FilterOption = {
 43:   [K in FilterOperator]?: K extends 'not'
 44:     ? FilterOption
 45:     : K extends 'or' | 'and'
 46:       ? string
 47:       : FilterOptionValue
 48: }
 49: 
 50: type Filters = Record<string, FilterOption>
 51: 
 52: interface SelectOptions<T> {
 53:   columns?: keyof T | Array<keyof T> | string
 54:   filters?: Filters
 55:   range?: { from: number; to: number }
 56:   order?: { column: keyof T; ascending: boolean }
 57: }
 58: 
 59: function applyFilter(query: any, column: string, filter: FilterOption): any {
 60:   const [operator, value] = Object.entries(filter)[0]
 61:   switch (operator) {
 62:     case 'eq':
 63:       return query.eq(column, value)
 64:     case 'neq':
 65:       return query.neq(column, value)
 66:     case 'gt':
 67:       return query.gt(column, value)
 68:     case 'gte':
 69:       return query.gte(column, value)
 70:     case 'lt':
 71:       return query.lt(column, value)
 72:     case 'lte':
 73:       return query.lte(column, value)
 74:     case 'like':
 75:       return query.like(column, value)
 76:     case 'ilike':
 77:       return query.ilike(column, value)
 78:     case 'is':
 79:       return query.is(column, value)
 80:     case 'in':
 81:       return query.in(column, value as any[])
 82:     case 'contains':
 83:       return query.contains(column, value)
 84:     case 'containedBy':
 85:       return query.containedBy(column, value)
 86:     case 'rangeGt':
 87:       return query.rangeGt(column, value)
 88:     case 'rangeGte':
 89:       return query.rangeGte(column, value)
 90:     case 'rangeLt':
 91:       return query.rangeLt(column, value)
 92:     case 'rangeLte':
 93:       return query.rangeLte(column, value)
 94:     case 'rangeAdjacent':
 95:       return query.rangeAdjacent(column, value)
 96:     case 'overlaps':
 97:       return query.overlaps(column, value)
 98:     case 'textSearch':
 99:       return query.textSearch(column, value as string, { config: 'english' })
100:     case 'match':
101:       return query.match(column, value as Record<string, unknown>)
102:     case 'not':
103:       return applyFilter(query.not(), column, value as FilterOption)
104:     case 'or':
105:       return query.or(value as string)
106:     case 'and':
107:       return query.and(value as string)
108:     default:
109:       console.warn(`Unsupported filter operator: ${operator}`)
110:       return query
111:   }
112: }
113: 
114: export function useHttpHandler() {
115:   const supabase = useSupabaseClient()
116:   const { handleError } = useErrorHandler()
117:   const logger = useLogger('HttpHandler')
118: 
119:   async function handleDatabaseOperation<T>(
120:     operation: () => Promise<PostgrestResponse<T>>,
121:     context: string,
122:     maxRetries: number = 3,
123:   ): Promise<T> {
124:     let retries = 0
125:     while (retries < maxRetries) {
126:       try {
127:         const response = await operation()
128:         // logger.debug(`${context} response:`, response)
129: 
130:         if (response.error) {
131:           throw response.error
132:         }
133:         return response.data as T
134:       } catch (error: unknown) {
135:         retries++
136:         logger.warn(`${context} failed. Attempt ${retries} of ${maxRetries}`)
137: 
138:         const pgError = error as PostgrestError
139:         const errorType = mapErrorType(pgError)
140:         const errorSeverity = mapErrorSeverity(pgError)
141: 
142:         if (
143:           retries >= maxRetries ||
144:           !Object.keys(retryableStatusCodes).includes(pgError.code?.toString() || '')
145:         ) {
146:           const appError = new AppError({
147:             type: errorType,
148:             message:
149:               pgError.message ||
150:               retryableStatusCodes[pgError.code as keyof typeof retryableStatusCodes] ||
151:               'Database operation failed',
152:             severity: errorSeverity,
153:             code: pgError.code,
154:             context: context,
155:             pgError: pgError.details || pgError.hint || pgError.message,
156:             operation: context,
157:           })
158:           throw handleError(appError)
159:         }
160: 
161:         // Exponential backoff with jitter
162:         const backoffTime = Math.min(1000 * 2 ** retries + Math.random() * 1000, 10000)
163:         await new Promise((resolve) => setTimeout(resolve, backoffTime))
164:       }
165:     }
166:     throw new Error('Max retries reached')
167:   }
168: 
169:   async function insert<T>(
170:     tableName: string,
171:     data: T,
172:     options: { columns?: string } = {},
173:   ): Promise<T> {
174:     return handleDatabaseOperation(
175:       async () =>
176:         await supabase
177:           .from(tableName)
178:           .insert(data)
179:           .select(options.columns || '*'),
180:       `Insert into ${tableName}`,
181:     )
182:   }
183: 
184:   async function update<T>(
185:     tableName: string,
186:     id: string | number,
187:     data: Partial<T>,
188:     options: { columns?: string } = {},
189:   ): Promise<T> {
190:     return handleDatabaseOperation(
191:       async () =>
192:         await supabase
193:           .from(tableName)
194:           .update(data)
195:           .eq('id', id)
196:           .select(options.columns || '*'),
197:       `Update ${tableName}`,
198:     )
199:   }
200: 
201:   async function remove(tableName: string, id: string | number): Promise<void> {
202:     await handleDatabaseOperation(
203:       async () => await supabase.from(tableName).delete().eq('id', id),
204:       `Delete from ${tableName}`,
205:     )
206:   }
207: 
208:   async function select<T>(tableName: string, options: SelectOptions<T> = {}): Promise<T[]> {
209:     let query = supabase.from(tableName).select(options.columns || '*')
210: 
211:     if (options.filters) {
212:       Object.entries(options.filters).forEach(([column, filterOption]) => {
213:         query = applyFilter(query, column, filterOption)
214:       })
215:     }
216: 
217:     if (options.range) {
218:       query = query.range(options.range.from, options.range.to)
219:     }
220: 
221:     if (options.order) {
222:       query = query.order(options.order.column, { ascending: options.order.ascending })
223:     }
224: 
225:     return handleDatabaseOperation(() => query, `Select from ${tableName}`)
226:   }
227: 
228:   return {
229:     insert,
230:     update,
231:     remove,
232:     select,
233:   }
234: }
```

## File: layers/crud/composables/insert.ts
```typescript
  1: import { useErrorHandler, AppError, ErrorType, ErrorSeverity, useLogger } from '@ib/logger'
  2: import { useHttpHandler } from './http-handler'
  3: import { getOrCreateStore } from './main.store'
  4: import { useRateLimit } from './rate-limit'
  5: 
  6: type InsertError =
  7:   | 'VALIDATION_ERROR'
  8:   | 'NETWORK_ERROR'
  9:   | 'SERVER_ERROR'
 10:   | 'RATE_LIMIT_ERROR'
 11:   | 'DUPLICATE_ERROR'
 12: 
 13: export function useInsertData<T extends { id: string | number }>(
 14:   tableName: string,
 15:   options: {
 16:     columns?: string
 17:     validateData?: (data: T) => boolean | Promise<boolean>
 18:     maxRetries?: number
 19:     refreshRelated?: () => Promise<void>
 20:     transformData?: (data: T) => T
 21:     onError?: (error: InsertError, details: any) => void
 22:     rateLimitMs?: number
 23:     auditLog?: (action: string, details: any) => Promise<void>
 24:     generateClientId?: () => string | number
 25:   } = {},
 26: ) {
 27:   const supabase = useSupabaseClient()
 28:   const { insert } = useHttpHandler()
 29:   const { handleError } = useErrorHandler()
 30:   const log = useLogger('useInsertData')
 31:   const store = getOrCreateStore<T>(tableName)()
 32:   const { checkRateLimit } = useRateLimit()
 33:   const isInserting: Ref<boolean> = ref(false)
 34:   let lastInsertTime = 0
 35: 
 36:   const insertData = async (data: T | T[]) => {
 37:     isInserting.value = true
 38:     const startTime = Date.now()
 39: 
 40:     const insertSingle = async (item: T): Promise<T> => {
 41:       try {
 42:         // Rate limiting
 43:         if (options.rateLimitMs) {
 44:           await checkRateLimit('useInsertData', { limitMs: options.rateLimitMs })
 45:         }
 46: 
 47:         // Validation
 48:         if (options.validateData && !(await options.validateData(item))) {
 49:           throw new AppError({
 50:             type: ErrorType.VALIDATION_ERROR,
 51:             message: 'Data validation failed',
 52:             severity: ErrorSeverity.MEDIUM,
 53:             context: 'Data Validation',
 54:           })
 55:         }
 56: 
 57:         // Data transformation
 58:         const transformedData = options.transformData ? options.transformData(item) : item
 59: 
 60:         // Generate client-side ID if needed
 61:         if (options.generateClientId && !transformedData.id) {
 62:           transformedData.id = options.generateClientId()
 63:         }
 64: 
 65:         // Optimistic insert
 66:         store.addItems([transformedData])
 67: 
 68:         // Perform the insert
 69:         const result = await insert(tableName, transformedData, { columns: options.columns })
 70: 
 71:         // Update store with actual server data
 72:         store.updateItem(result)
 73: 
 74:         // Refresh related data if needed
 75:         if (options.refreshRelated) {
 76:           await options.refreshRelated()
 77:         }
 78: 
 79:         // Audit logging
 80:         if (options.auditLog) {
 81:           await options.auditLog('INSERT', { tableName, newData: result })
 82:         }
 83: 
 84:         lastInsertTime = Date.now()
 85:         return result
 86:       } catch (error: any) {
 87:         // Revert optimistic insert
 88:         store.removeItem(item.id)
 89:         throw error // error handler in the HTTP handler deals with this
 90:       }
 91:     }
 92: 
 93:     try {
 94:       if (Array.isArray(data)) {
 95:         const results = await Promise.all(data.map(insertSingle))
 96:         isInserting.value = false
 97:         return results
 98:       } else {
 99:         const result = await insertSingle(data)
100:         isInserting.value = false
101:         return result
102:       }
103:     } catch (error: any) {
104:       handleError(error, 'Error inserting data')
105:       throw error // Re-throw to allow caller to handle if needed
106:     } finally {
107:       isInserting.value = false
108:     }
109:   }
110: 
111:   return {
112:     insertData,
113:     isInserting,
114:   }
115: }
```

## File: layers/crud/composables/loading.store.ts
```typescript
 1: import type { DomainKey } from './pagination.store'
 2: 
 3: type Loaders = {
 4:   [K in DomainKey]?: boolean
 5: }
 6: 
 7: export const useLoadingStore = defineStore('storeLoading', () => {
 8:   const loaders = ref({} as Loaders)
 9: 
10:   function setLoading(key: DomainKey, isLoading: boolean) {
11:     loaders.value[key] = isLoading
12:   }
13: 
14:   async function setLoadingInterval(key: DomainKey, isLoading: boolean, time: number) {
15:     await new Promise<void>((resolve) => {
16:       setTimeout(() => {
17:         setLoading(key, isLoading)
18:         resolve()
19:       }, time)
20:     })
21:   }
22: 
23:   function isLoading(key: DomainKey) {
24:     return !!loaders.value[key]
25:   }
26: 
27:   return {
28:     setLoadingInterval,
29:     setLoading,
30:     isLoading,
31:   }
32: })
33: 
34: if (import.meta.hot) {
35:   import.meta.hot.accept(acceptHMRUpdate(useLoadingStore, import.meta.hot))
36: }
```

## File: layers/crud/composables/local-storage.ts
```typescript
 1: import { useLogger } from '@ib/logger'
 2: 
 3: const CACHE_DURATION = 24 * 60 * 60 * 1000 // 24 hours in milliseconds
 4: const CACHE_VERSION = '1.0' // Increment this when data structure changes
 5: 
 6: const LocalStorageEnum = {
 7:   CATEGORIES: 'astronera-categories',
 8:   TAGS: 'astronera-tags',
 9: } as const
10: 
11: type LocalStorageKey = (typeof LocalStorageEnum)[keyof typeof LocalStorageEnum]
12: 
13: interface CachedData<T> {
14:   version: string
15:   timestamp: number
16:   data: T
17: }
18: 
19: export function useBaseLocalStorage() {
20:   const logger = useLogger('localStorage')
21: 
22:   function getCacheKey(key: LocalStorageKey): string {
23:     return `${key}-${CACHE_VERSION}`
24:   }
25: 
26:   function clearCache(key: LocalStorageKey): void {
27:     localStorage.removeItem(getCacheKey(key))
28:     logger.debug(`Cleared cache for: ${key}`)
29:   }
30: 
31:   function clearAllCaches(): void {
32:     Object.values(LocalStorageEnum).forEach(clearCache)
33:     logger.debug('Cleared all caches')
34:   }
35: 
36:   function getFromCache<T>(key: LocalStorageKey): T | null {
37:     const cacheKey = getCacheKey(key)
38:     const cachedItem = localStorage.getItem(cacheKey)
39: 
40:     if (!cachedItem) {
41:       logger.debug(`No cached data found for: ${key}`)
42:       return null
43:     }
44: 
45:     try {
46:       const parsedData = JSON.parse(cachedItem) as CachedData<T>
47:       const currentTime = Date.now()
48: 
49:       if (
50:         currentTime - parsedData.timestamp <= CACHE_DURATION &&
51:         parsedData.version === CACHE_VERSION
52:       ) {
53:         logger.debug(`Retrieved valid cached data for: ${key}`)
54:         return parsedData.data
55:       } else {
56:         logger.debug(`Cached data for ${key} is outdated or version mismatch`)
57:         clearCache(key)
58:         return null
59:       }
60:     } catch (error) {
61:       logger.error(`Error parsing cached data for ${key}:`, error)
62:       clearCache(key)
63:       return null
64:     }
65:   }
66: 
67:   function setCache<T>(key: LocalStorageKey, data: T): void {
68:     const cacheKey = getCacheKey(key)
69:     const cacheData: CachedData<T> = {
70:       version: CACHE_VERSION,
71:       timestamp: Date.now(),
72:       data,
73:     }
74:     localStorage.setItem(cacheKey, JSON.stringify(cacheData))
75:     logger.debug(`Cached data for: ${key}`)
76:   }
77: 
78:   async function getCachedOrFetch<T>(key: LocalStorageKey, fetchFn: () => Promise<T>): Promise<T> {
79:     const cachedData = getFromCache<T>(key)
80:     if (cachedData) return cachedData
81: 
82:     try {
83:       const fetchedData = await fetchFn()
84:       setCache(key, fetchedData)
85:       return fetchedData
86:     } catch (error) {
87:       logger.error(`Error fetching data for ${key}:`, error)
88:       throw error
89:     }
90:   }
91: 
92:   return {
93:     getFromCache,
94:     setCache,
95:     clearCache,
96:     clearAllCaches,
97:     getCachedOrFetch,
98:   }
99: }
```

## File: layers/crud/composables/main.store.ts
```typescript
 1: import { defineStore } from 'pinia'
 2: import { type Ref, ref } from 'vue'
 3: import type { DomainKey } from './pagination.store'
 4: 
 5: export function createBaseStore<T extends object>(domainKey: DomainKey) {
 6:   return defineStore(`${domainKey}Store`, () => {
 7:     const items = ref<T[]>([]) as Ref<T[]>
 8:     const itemsMap = computed(() => new Map(items.value.map((item) => [item.id, item])))
 9: 
10:     function setItems(newItems: T[]) {
11:       items.value = newItems
12:     }
13: 
14:     function addItems(newItems: T[]) {
15:       const newItemsMap = new Map(newItems.map((item) => [item.id, item]))
16:       items.value = [...items.value.filter((item) => !newItemsMap.has(item.id)), ...newItems]
17:     }
18: 
19:     function updateItem(updatedItem: T) {
20:       const index = items.value.findIndex((item) => item.id === updatedItem.id)
21:       if (index !== -1) {
22:         items.value[index] = { ...items.value[index], ...updatedItem }
23:       } else {
24:         items.value.push(updatedItem)
25:       }
26:     }
27: 
28:     function removeItem(id: string | number) {
29:       items.value = items.value.filter((item) => item.id !== id)
30:     }
31: 
32:     function clearItems() {
33:       items.value = []
34:     }
35: 
36:     function getItemById(id: string | number) {
37:       return itemsMap.value.get(id)
38:     }
39: 
40:     return {
41:       items,
42:       itemsMap,
43:       setItems,
44:       addItems,
45:       updateItem,
46:       removeItem,
47:       clearItems,
48:       getItemById,
49:     }
50:   })
51: }
52: 
53: const storeCache: Partial<Record<DomainKey, ReturnType<typeof createBaseStore>>> = {}
54: 
55: export function getOrCreateStore<T>(domainKey: DomainKey) {
56:   if (!storeCache[domainKey]) {
57:     storeCache[domainKey] = createBaseStore<T>(domainKey)
58:   }
59:   return storeCache[domainKey] as ReturnType<typeof createBaseStore<T>>
60: }
```

## File: layers/crud/composables/notification.ts
```typescript
 1: import type { useToast } from 'primevue/usetoast'
 2: 
 3: interface BaseNotification {
 4:   summary: string
 5:   message: string
 6: }
 7: 
 8: export function useNotification() {
 9:   const nuxtApp = useNuxtApp()
10:   const getToast: typeof useToast = () => nuxtApp.vueApp.config.globalProperties.$toast
11:   const toast = getToast()
12: 
13:   const success = ({ summary, message }: BaseNotification) => {
14:     toast.add({
15:       severity: 'success',
16:       summary: `Success: ${summary}`,
17:       detail: message,
18:       life: 5000,
19:       closable: true,
20:     })
21:   }
22: 
23:   const error = ({ summary, message }: BaseNotification) => {
24:     toast.add({
25:       severity: 'error',
26:       summary: `Error: ${summary}`,
27:       detail: message,
28:       life: 0,
29:       closable: true,
30:     })
31:   }
32: 
33:   const info = ({ summary, message }: BaseNotification) => {
34:     toast.add({
35:       severity: 'info',
36:       summary: `Info: ${summary}`,
37:       detail: message,
38:       life: 5000,
39:       closable: true,
40:     })
41:   }
42: 
43:   const warn = ({ summary, message }: BaseNotification) => {
44:     toast.add({
45:       severity: 'warn',
46:       summary: `Warning: ${summary}`,
47:       detail: message,
48:       life: 5000,
49:       closable: true,
50:     })
51:   }
52: 
53:   const feature = ({ summary, message }: BaseNotification) => {
54:     toast.add({
55:       severity: 'warn',
56:       group: 'cta',
57:       summary: summary,
58:       detail: message,
59:       life: 0,
60:       closable: true,
61:     })
62:   }
63: 
64:   return {
65:     success,
66:     error,
67:     info,
68:     warn,
69:     feature,
70:   }
71: }
```

## File: layers/crud/composables/pagination.store.ts
```typescript
 1: import { useLogger } from '@ib/logger'
 2: 
 3: export type DomainKey =
 4:   | 'users'
 5:   | 'news'
 6:   | 'events'
 7:   | 'venues'
 8:   | 'research'
 9:   | 'companies'
10:   | 'chats'
11:   | 'feedbacks'
12:   | 'currentUser'
13:   | 'chat'
14:   | 'auth'
15: 
16: export type PaginationType = {
17:   page: number
18:   limit: number
19: }
20: 
21: export interface PaginationInput {
22:   domainKey: DomainKey
23:   pagination: PaginationType
24:   force?: boolean
25: }
26: 
27: export const usePaginationStore = defineStore('paginationStore', () => {
28:   const logger = useLogger('paginationStore')
29:   const stores = reactive({} as Record<DomainKey, Ref<{ page: number; limit: number }>>)
30:   const dataFinished = ref({} as Record<DomainKey, boolean>)
31: 
32:   function initPagination(input: PaginationInput) {
33:     if (!stores[input.domainKey] || input.force) {
34:       // -1 for supabase because it is 0 indexed
35:       console.log('initPagination', input.force)
36:       stores[input.domainKey] = {
37:         page: input.pagination.page,
38:         limit: input.pagination.limit - 1,
39:       }
40:     }
41:   }
42: 
43:   function getPagination(domainKey: DomainKey) {
44:     if (!stores[domainKey]) {
45:       logger.warn(`Pagination settings for '${domainKey}' is not initialized.`)
46:       return null
47:     }
48: 
49:     return stores[domainKey]
50:   }
51: 
52:   function getPaginationRange(domainKey: DomainKey) {
53:     const pagination = getPagination(domainKey)
54:     if (pagination) {
55:       logger.info('getPaginationRange', pagination.limit, (pagination.page - 1) * pagination.limit)
56:       return {
57:         from: (pagination.page - 1) * pagination.limit,
58:         to: pagination.limit * pagination.page,
59:       }
60:     }
61:     return undefined
62:   }
63: 
64:   function incrementPagination(domainKey: DomainKey) {
65:     const currentPagination = getPagination(domainKey)
66:     if (currentPagination) {
67:       currentPagination.page++
68:     } else {
69:       logger.warn(`Attempted to increment pagination for an uninitialized store '${domainKey}'.`)
70:     }
71:   }
72: 
73:   function setDataFinished(domainKey: DomainKey) {
74:     if (stores[domainKey]) {
75:       dataFinished.value[domainKey] = true
76:     }
77:   }
78: 
79:   const isDataFinished = (domainKey: DomainKey) => dataFinished.value[domainKey]
80: 
81:   return {
82:     stores,
83:     isDataFinished,
84:     setDataFinished,
85:     initPagination,
86:     getPagination,
87:     incrementPagination,
88:     getPaginationRange,
89:   }
90: })
```

## File: layers/crud/composables/rate-limit.ts
```typescript
 1: interface RateLimitOptions {
 2:   limitMs: number
 3: }
 4: 
 5: export function useRateLimit() {
 6:   const lastActionTimes = ref<Map<string, number>>(new Map())
 7: 
 8:   const checkRateLimit = async (action: string, options: RateLimitOptions): Promise<void> => {
 9:     const now = Date.now()
10:     const lastActionTime = lastActionTimes.value.get(action) || 0
11:     const timeElapsed = now - lastActionTime
12: 
13:     if (timeElapsed < options.limitMs) {
14:       const waitTime = options.limitMs - timeElapsed
15:       await new Promise((resolve) => setTimeout(resolve, waitTime))
16:     }
17: 
18:     lastActionTimes.value.set(action, Date.now())
19:   }
20: 
21:   return {
22:     checkRateLimit,
23:   }
24: }
```

## File: layers/crud/composables/select.ts
```typescript
  1: import { useErrorHandler, AppError, ErrorType, ErrorSeverity, useLogger } from '@ib/logger'
  2: import { useHttpHandler } from './http-handler'
  3: import { getOrCreateStore } from './main.store'
  4: import { usePaginationStore, type PaginationType } from './pagination.store'
  5: import { useRateLimit } from './rate-limit'
  6: 
  7: export function useSelectData<T extends { id: string | number }>(
  8:   tableName: string,
  9:   options: {
 10:     columns?: string
 11:     filters?: Record<string, any>
 12:     orderBy?: { column: string; ascending?: boolean }
 13:     initialFetch?: boolean
 14:     pagination?: PaginationType
 15:     limit?: number
 16:     refreshRelated?: () => Promise<void>
 17:     rateLimitMs?: number
 18:     auditLog?: (action: string, details: any) => Promise<void>
 19:   } = {},
 20: ) {
 21:   const { select } = useHttpHandler()
 22:   const { handleError } = useErrorHandler()
 23:   const logger = useLogger('useSelectData')
 24:   const store = getOrCreateStore<T>(tableName)()
 25:   const { checkRateLimit } = useRateLimit()
 26: 
 27:   const isSelecting: Ref<boolean> = ref(false)
 28:   let lastSelectTime = 0
 29: 
 30:   let paginationStore: ReturnType<typeof usePaginationStore> | null = null
 31: 
 32:   if (options.pagination) {
 33:     paginationStore = usePaginationStore()
 34:     paginationStore.initPagination({
 35:       domainKey: tableName,
 36:       pagination: options.pagination,
 37:       force: true,
 38:     })
 39:   }
 40: 
 41:   const fetchData = async (forceFetch = false) => {
 42:     isSelecting.value = true
 43:     const startTime = Date.now()
 44: 
 45:     try {
 46:       // Rate limiting
 47:       if (options.rateLimitMs && !forceFetch) {
 48:         await checkRateLimit('useSelectData', { limitMs: options.rateLimitMs })
 49:       }
 50: 
 51:       const queryOptions: any = {
 52:         columns: options.columns || '*',
 53:         filters: options.filters,
 54:       }
 55: 
 56:       if (options.orderBy) {
 57:         queryOptions.order = {
 58:           column: options.orderBy.column,
 59:           ascending: options.orderBy.ascending ?? true,
 60:         }
 61:       }
 62: 
 63:       if (paginationStore) {
 64:         const pagination = paginationStore.getPaginationRange(tableName)
 65:         if (pagination) {
 66:           console.log('pagination', pagination)
 67:           queryOptions.range = pagination
 68:         } else {
 69:           throw new AppError({
 70:             type: ErrorType.VALIDATION_ERROR,
 71:             message: `Pagination not initialized for ${tableName}`,
 72:             severity: ErrorSeverity.MEDIUM,
 73:             context: 'Data Fetching',
 74:           })
 75:         }
 76:       } else if (options.limit) {
 77:         queryOptions.range = { from: 0, to: options.limit - 1 }
 78:       }
 79: 
 80:       const result = await select<T>(tableName, queryOptions)
 81:       console.log('Fetch result:', result)
 82: 
 83:       // Audit logging
 84:       if (options.auditLog) {
 85:         await options.auditLog('SELECT', { tableName, options: queryOptions })
 86:       }
 87: 
 88:       lastSelectTime = Date.now()
 89:       return result
 90:     } catch (error: any) {
 91:       handleError(error, 'Error selecting data')
 92:       throw error
 93:     } finally {
 94:       isSelecting.value = false
 95:     }
 96:   }
 97: 
 98:   const loadMore = async () => {
 99:     if (paginationStore) {
100:       console.log('loading more data')
101:       const newData = await fetchData()
102:       if (newData.length === 0) {
103:         paginationStore.setDataFinished(tableName)
104:       } else {
105:         store.addItems(newData)
106:         paginationStore.incrementPagination(tableName)
107:       }
108:     } else {
109:       const data = await fetchData()
110:       store.setItems(data)
111:     }
112: 
113:     // Refresh related data if needed
114:     if (options.refreshRelated) {
115:       await options.refreshRelated()
116:     }
117:   }
118: 
119:   const refresh = async () => {
120:     if (paginationStore) {
121:       paginationStore.initPagination({
122:         domainKey: tableName,
123:         pagination: options.pagination!,
124:         force: true,
125:       })
126:     }
127:     store.clearItems()
128:     await loadMore()
129:   }
130: 
131:   if (options.initialFetch) {
132:     loadMore()
133:   }
134: 
135:   return {
136:     store,
137:     loadMore,
138:     refresh,
139:     isSelecting,
140:   }
141: }
```

## File: layers/crud/composables/settings.store.ts
```typescript
 1: type SettingsKey = 'usersStore' | 'storeNews'
 2: 
 3: export const useSettingsStore = defineStore('settingsStore', () => {
 4:   const settings = ref({} as Settings)
 5:   const summaryLevel = ref('beginner' as SummaryLevel)
 6: 
 7:   function toggleSettings(key: SettingsKey) {
 8:     settings.value[key] = !settings.value[key]
 9:   }
10: 
11:   function isSettingsOn(key: SettingsKey) {
12:     return !settings.value[key]
13:   }
14: 
15:   const changeSummaryLevel = (level: 'beginner' | 'intermediate' | 'expert') => {
16:     summaryLevel.value = level
17:   }
18: 
19:   return {
20:     toggleSettings,
21:     isSettingsOn,
22:   }
23: })
24: 
25: if (import.meta.hot) {
26:   import.meta.hot.accept(acceptHMRUpdate(useSettingsStore, import.meta.hot))
27: }
```

## File: layers/crud/composables/update.ts
```typescript
 1: import { useErrorHandler, AppError, ErrorSeverity, ErrorType, useLogger } from '@ib/logger'
 2: import { useHttpHandler } from './http-handler'
 3: import { getOrCreateStore } from './main.store'
 4: import { useRateLimit } from './rate-limit'
 5: 
 6: export function useUpdateData<T extends { id: string | number }>(
 7:   tableName: string,
 8:   options: {
 9:     columns?: string
10:     validateData?: (data: Partial<T>) => boolean | Promise<boolean>
11:     refreshRelated?: () => Promise<void>
12:     transformData?: (data: Partial<T>) => Partial<T>
13:     rateLimitMs?: number
14:     auditLog?: (action: string, details: any) => Promise<void>
15:   } = {},
16: ) {
17:   const { update } = useHttpHandler()
18:   const { handleError } = useErrorHandler()
19:   const logger = useLogger('useUpdateData')
20:   const store = getOrCreateStore<T>(tableName)()
21:   const { checkRateLimit } = useRateLimit()
22: 
23:   const isUpdating: Ref<boolean> = ref(false)
24:   let lastUpdateTime = 0
25: 
26:   const updateData = async (id: string | number, data: Partial<T>) => {
27:     isUpdating.value = true
28:     const startTime = Date.now()
29:     let oldData: T | undefined = undefined
30: 
31:     try {
32:       // Rate limiting
33:       if (options.rateLimitMs) {
34:         await checkRateLimit('useUpdateData', { limitMs: options.rateLimitMs })
35:       }
36: 
37:       // Validation
38:       if (options.validateData && !(await options.validateData(data))) {
39:         throw new AppError({
40:           type: ErrorType.VALIDATION_ERROR,
41:           message: 'Data validation failed',
42:           severity: ErrorSeverity.MEDIUM,
43:           context: 'Data Validation',
44:         })
45:       }
46: 
47:       // Data transformation
48:       const transformedData = options.transformData ? options.transformData(data) : data
49: 
50:       // Optimistic update
51:       oldData = store.getItemById(id)
52:       if (!oldData) {
53:         throw new AppError({
54:           type: ErrorType.NOT_FOUND_ERROR,
55:           message: 'Item not found in store',
56:           severity: ErrorSeverity.MEDIUM,
57:           context: 'Data Update',
58:         })
59:       }
60:       store.updateItem({ ...oldData, ...transformedData, id })
61: 
62:       // Perform the update
63:       const result = await update(tableName, id, transformedData, { columns: options.columns })
64: 
65:       // Update store with actual server data
66:       store.updateItem(result)
67: 
68:       // Refresh related data if needed
69:       if (options.refreshRelated) {
70:         await options.refreshRelated()
71:       }
72: 
73:       // Audit logging
74:       if (options.auditLog) {
75:         await options.auditLog('UPDATE', { tableName, id, oldData, newData: result })
76:       }
77: 
78:       lastUpdateTime = Date.now()
79:       return result
80:     } catch (error: any) {
81:       // Revert optimistic update
82:       if (oldData) {
83:         store.updateItem(oldData)
84:       }
85:       handleError(error, 'Error updating data')
86:       throw error
87:     } finally {
88:       isUpdating.value = false
89:     }
90:   }
91: 
92:   return {
93:     updateData,
94:     isUpdating,
95:   }
96: }
```

## File: layers/crud/composables/upload.ts
```typescript
  1: import { v4 as uuidv4 } from 'uuid'
  2: import { useErrorHandler, AppError, ErrorType, ErrorSeverity, useLogger } from '@ib/logger'
  3: import { useRateLimit } from './rate-limit'
  4: 
  5: type FileType = 'profile' | 'document' | 'image' | 'video' | 'audio' | 'other'
  6: 
  7: interface UploadOptions {
  8:   bucket: string
  9:   path: string
 10:   fileType: FileType
 11:   userId?: string
 12:   metadata?: Record<string, string>
 13:   optimizeImage?: boolean
 14:   maxWidth?: number
 15:   maxHeight?: number
 16:   quality?: number
 17:   format?: 'jpeg' | 'jpg' | 'png' | 'webp'
 18:   rateLimitMs?: number
 19:   auditLog?: (action: string, details: any) => Promise<void>
 20:   onProgress?: (progress: number) => void
 21:   maxFileSize?: number
 22:   allowedMimeTypes?: string[]
 23:   serverSideOptimize?: boolean
 24:   useServerUpload?: boolean
 25:   replace?: boolean
 26: }
 27: 
 28: interface UploadResult {
 29:   path: string
 30:   publicUrl: string
 31:   size: number
 32:   mimeType: string
 33:   metadata: Record<string, string>
 34: }
 35: 
 36: export function useFileUpload() {
 37:   const supabase = useSupabaseClient()
 38:   const { handleError } = useErrorHandler()
 39:   const { checkRateLimit } = useRateLimit()
 40:   const isUploading: Ref<boolean> = ref(false)
 41:   const uploadProgress: Ref<number> = ref(0)
 42:   const lastUploadTime = ref(0)
 43:   const uploadQueue: Ref<File[]> = ref([])
 44:   const currentUpload: Ref<File | null> = ref(null)
 45: 
 46:   const isProcessing = computed(() => uploadQueue.value.length > 0 || currentUpload.value !== null)
 47: 
 48:   const getFilePath = (fileName: string, options: UploadOptions): string => {
 49:     const { bucket, path, fileType, userId, replace } = options
 50:     const timestamp = new Date().toISOString().replace(/[-:]/g, '').split('.')[0]
 51:     const uniqueId = uuidv4().slice(0, 8)
 52:     const userPath = userId ? `${userId}/` : ''
 53:     return `${bucket}/${fileType}/${userPath}${path || ''}/${replace ? '' : `${timestamp}_${uniqueId}_`}${fileName}`
 54:   }
 55: 
 56:   const validateFile = (file: File, options: UploadOptions): void => {
 57:     if (options.maxFileSize && file.size > options.maxFileSize) {
 58:       throw new AppError({
 59:         type: ErrorType.VALIDATION_ERROR,
 60:         message: `File size exceeds the maximum allowed size of ${options.maxFileSize} bytes`,
 61:         severity: ErrorSeverity.MEDIUM,
 62:         context: 'File Upload',
 63:       })
 64:     }
 65: 
 66:     if (options.allowedMimeTypes && !options.allowedMimeTypes.includes(file.type)) {
 67:       throw new AppError({
 68:         type: ErrorType.VALIDATION_ERROR,
 69:         message: `File type ${file.type} is not allowed`,
 70:         severity: ErrorSeverity.MEDIUM,
 71:         context: 'File Upload',
 72:       })
 73:     }
 74:   }
 75: 
 76:   const serverSideUpload = async (file: File, options: UploadOptions): Promise<UploadResult> => {
 77:     const formData = new FormData()
 78:     formData.append('file', file)
 79:     formData.append('userId', options.userId || '')
 80:     formData.append('fileType', options.fileType)
 81:     formData.append('bucket', options.bucket)
 82:     formData.append('path', options.path)
 83:     formData.append(
 84:       'optimizationOptions',
 85:       JSON.stringify({
 86:         maxWidth: options.maxWidth,
 87:         maxHeight: options.maxHeight,
 88:         quality: options.quality,
 89:         format: options.format,
 90:       }),
 91:     )
 92: 
 93:     const response = await $fetch('/api/upload', {
 94:       method: 'POST',
 95:       body: formData,
 96:       onUploadProgress: (progressEvent) => {
 97:         if (progressEvent.total) {
 98:           const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total)
 99:           uploadProgress.value = progress
100:           options.onProgress?.(progress)
101:         }
102:       },
103:     })
104: 
105:     if (!response || !response.fileName) {
106:       throw new Error('Failed to upload file on server')
107:     }
108: 
109:     const publicUrl = supabase.storage.from(options.bucket).getPublicUrl(response.fileName)
110:       .data.publicUrl
111: 
112:     return {
113:       path: response.fileName,
114:       publicUrl,
115:       size: file.size,
116:       mimeType: file.type,
117:       metadata: {
118:         originalName: file.name,
119:         ...options.metadata,
120:       },
121:     }
122:   }
123: 
124:   const uploadFile = async (file: File, options: UploadOptions): Promise<UploadResult> => {
125:     isUploading.value = true
126:     uploadProgress.value = 0
127:     currentUpload.value = file
128: 
129:     try {
130:       validateFile(file, options)
131: 
132:       // Rate limiting
133:       if (options.rateLimitMs) {
134:         await checkRateLimit('fileUpload', { limitMs: options.rateLimitMs })
135:       }
136: 
137:       let result: UploadResult
138: 
139:       if (options.useServerUpload) {
140:         result = await serverSideUpload(file, options)
141:       } else {
142:         const filePath = getFilePath(file.name, options)
143:         const { data, error } = await supabase.storage.from(options.bucket).upload(filePath, file, {
144:           cacheControl: '3600',
145:           upsert: options.replace,
146:           contentType: file.type,
147:         })
148: 
149:         if (error) {
150:           throw new AppError({
151:             type: ErrorType.UPLOAD_ERROR,
152:             message: `Error uploading file: ${error.message}`,
153:             severity: ErrorSeverity.HIGH,
154:             context: 'File Upload',
155:           })
156:         }
157: 
158:         const {
159:           data: { publicUrl },
160:         } = supabase.storage.from(options.bucket).getPublicUrl(data.path)
161: 
162:         result = {
163:           path: data.path,
164:           publicUrl,
165:           size: file.size,
166:           mimeType: file.type,
167:           metadata: {
168:             originalName: file.name,
169:             ...options.metadata,
170:           },
171:         }
172:       }
173: 
174:       lastUploadTime.value = Date.now()
175: 
176:       return result
177:     } catch (error: any) {
178:       handleError(error, 'Error uploading file')
179:       throw error
180:     } finally {
181:       isUploading.value = false
182:       uploadProgress.value = 100
183:       currentUpload.value = null
184:       processQueue()
185:     }
186:   }
187: 
188:   const processQueue = async () => {
189:     if (uploadQueue.value.length > 0 && !isUploading.value) {
190:       const nextFile = uploadQueue.value.shift()
191:       if (nextFile) {
192:         await uploadFile(nextFile, {
193:           bucket: 'default',
194:           path: 'uploads',
195:           fileType: 'other',
196:         })
197:       }
198:     }
199:   }
200: 
201:   const queueUpload = (file: File, options: UploadOptions) => {
202:     uploadQueue.value.push(file)
203:     processQueue()
204:   }
205: 
206:   const cancelUpload = () => {
207:     if (currentUpload.value) {
208:       // Implement cancellation logic here
209:       // This might involve aborting the Supabase upload if possible
210:       currentUpload.value = null
211:       isUploading.value = false
212:       uploadProgress.value = 0
213:     }
214:   }
215: 
216:   const clearQueue = () => {
217:     uploadQueue.value = []
218:   }
219: 
220:   return {
221:     uploadFile,
222:     queueUpload,
223:     cancelUpload,
224:     clearQueue,
225:     isUploading,
226:     isProcessing,
227:     uploadProgress,
228:     currentUpload,
229:     uploadQueue,
230:   }
231: }
```

## File: layers/crud/composables/useApiDataStore.ts
```typescript
 1: // stores/apiData.ts
 2: import { defineStore } from 'pinia'
 3: import { ref } from 'vue'
 4: 
 5: interface ApiDataStructure {
 6:   [key: string]: any
 7: }
 8: 
 9: export const useApiDataStore = defineStore('apiData', () => {
10:   const apiData = ref<ApiDataStructure>({})
11: 
12:   const setData = (url: string, data: any): void => {
13:     apiData.value[url] = data
14:   }
15: 
16:   const getData = (url: string): any => {
17:     return apiData.value[url]
18:   }
19: 
20:   const clearData = (): void => {
21:     apiData.value = {}
22:   }
23: 
24:   return {
25:     apiData,
26:     setData,
27:     getData,
28:     clearData,
29:   }
30: })
```

## File: layers/crud/composables/useBaseError.ts
```typescript
  1: import { useLogger } from '@ib/logger'
  2: 
  3: interface ErrorMessage {
  4:   userMessage: string // User-friendly error message if needed
  5:   devMessage: string // Make bugfixing easy!
  6:   error: any
  7: }
  8: 
  9: interface ErrorServer extends Omit<ErrorMessage, 'error'> {
 10:   devOnly: boolean // default true - don't show toasts in production
 11:   featureRelated?: boolean // default false - log to feature-specific log
 12:   response: { data: any; error: any }
 13: }
 14: 
 15: interface ErrorClient extends ErrorMessage {
 16:   isServer?: boolean // default false
 17:   featureRelated?: boolean // default false - log to feature-specific log
 18:   devOnly: boolean
 19: }
 20: 
 21: export function useBaseError() {
 22:   // !todo:med:easy - add prefix to base error
 23: 
 24:   // const toast = useNotification()
 25:   const logger = useLogger('useBaseError')
 26:   const isAdmin = useRuntimeConfig().public.nodeEnv === 'development'
 27: 
 28:   // function handleErrorWithCodes(error: any) {
 29:   //   switch (error.statusCode) {
 30:   //     case 429:
 31:   //       toast.feature({
 32:   //         summary: error.statusMessage,
 33:   //         message: error.message,
 34:   //       })
 35:   //       break
 36:   //     case 403:
 37:   //       toast.error({
 38:   //         summary: error.statusMessage,
 39:   //         message: error.message,
 40:   //       })
 41:   //       break
 42:   //     default:
 43:   //       console.error('Unhandled feature error:', error)
 44:   //   }
 45:   // }
 46: 
 47:   function formatErrorMessage({ userMessage, devMessage, error }: ErrorMessage) {
 48:     const devError = `${devMessage}: ${JSON.stringify(error)}`
 49:     logger.error(devError)
 50:     const userError = userMessage || 'An unexpected error occurred. Please try again later.'
 51:     return isAdmin ? devError : userError
 52:   }
 53: 
 54:   function handleError({
 55:     userMessage,
 56:     devMessage,
 57:     devOnly = true,
 58:     isServer = false,
 59:     error,
 60:   }: ErrorClient) {
 61:     // Determine the appropriate user message
 62:     const errorMessage = formatErrorMessage({ error, userMessage, devMessage })
 63: 
 64:     // Add an error toast notification with an option to retry if an action is provided
 65: 
 66:     // Handle critical errors specifically if needed
 67:     if (!devOnly || isAdmin) {
 68:       // toast.error({
 69:       //   summary: 'Error',
 70:       //   message: errorMessage,
 71:       // })
 72:       // Here you could navigate to an error page, log out the user, etc.
 73:       console.error('Handling critical error for:', devMessage)
 74:     }
 75: 
 76:     throw createError({
 77:       message: `${isServer ? 'SERVER' : 'CLIENT'} ERROR: ${errorMessage}`,
 78:     })
 79:   }
 80: 
 81:   function handleServerError({ response, devMessage, devOnly, userMessage }: ErrorServer) {
 82:     if (response.error) {
 83:       console.log('FeatError', response.error)
 84:       handleError({
 85:         error: response.error,
 86:         devOnly,
 87:         userMessage,
 88:         isServer: true,
 89:         devMessage,
 90:       })
 91:     } else if (response.data) {
 92:       logger.info(`Successfully fetched ${response.data.length} items`)
 93:       return response.data
 94:     }
 95:     logger.info('Nothing returned from database')
 96:     return null
 97:   }
 98: 
 99:   return {
100:     server: handleServerError,
101:     client: handleError,
102:   }
103: }
```

## File: layers/crud/composables/user.current.store.ts
```typescript
  1: import { useLogger } from '@ib/logger'
  2: 
  3: const DOMAIN_KEY = 'currentUser'
  4: 
  5: export const useCurrentUser = defineStore(DOMAIN_KEY, () => {
  6:   const authUrl = useRuntimeConfig().public.aeAuthUrl
  7:   const logger = useLogger(DOMAIN_KEY)
  8:   const errors = useBaseError()
  9:   const loading = useLoadingStore()
 10:   const { fetch } = useBaseFetch()
 11:   const userId = useCookie('userId')
 12:   const user = useSupabaseUser()
 13: 
 14:   // check:critical - user should only be able to fetch their own full profile
 15:   // check:critical - user should only be able to update their own profile
 16:   // todo:high - allow user to update their profile info
 17:   // todo:med - merge currentUser and profile into one, store all required data everything in their session
 18:   // assign Posthog identify
 19: 
 20:   console.log('user', user.value)
 21: 
 22:   const profile = computed(() => ({
 23:     id: user.value?.id,
 24:     given_name: user.value?.user_metadata?.given_name,
 25:     email_confirmed_at: user.value?.email_confirmed_at,
 26:     confirmation_sent_at: user.value?.confirmation_sent_at,
 27:     confirmed_at: user.value?.confirmed_at,
 28:     created_at: user.value?.created_at,
 29:     surname: user.value?.user_metadata?.surname,
 30:     last_sign_in_at: user.value?.last_sign_in_at,
 31:     email: user.value?.email,
 32:     providers: user.value?.app_metadata.providers,
 33:     avatar: user.value?.user_metadata.avatar ?? user.value?.user_metadata.avatar_url,
 34:     provider: user.value?.provider,
 35:     user_role: user.value?.app_metadata?.role,
 36:     user_plan: user.value?.app_metadata?.plan,
 37:   }))
 38: 
 39:   // extract as util func
 40:   function hasValueChanged(newValue: any, currentValue: any): boolean {
 41:     console.log('hasValueChanged', newValue, currentValue)
 42:     if (
 43:       typeof newValue === 'string' ||
 44:       typeof newValue === 'boolean' ||
 45:       typeof newValue === 'number'
 46:     ) {
 47:       return newValue !== currentValue
 48:     } else if (Array.isArray(newValue)) {
 49:       return JSON.stringify(newValue) !== JSON.stringify(currentValue)
 50:     } else if (typeof newValue === 'object' && newValue !== null) {
 51:       return JSON.stringify(newValue) !== JSON.stringify(currentValue)
 52:     } else {
 53:       return newValue !== currentValue
 54:     }
 55:   }
 56: 
 57:   function cleanDataForUpdate(newData: any, previousData: any) {
 58:     const updatedData: any = {}
 59:     for (const key in newData) {
 60:       if (
 61:         Object.hasOwnProperty.call(newData, key) &&
 62:         hasValueChanged(newData[key], previousData[key])
 63:       ) {
 64:         updatedData[key] = newData[key]
 65:       }
 66:     }
 67: 
 68:     return { data: updatedData, noDataUpdated: Object.keys(updatedData).length === 0 }
 69:   }
 70: 
 71:   async function updateProfile(newData: any, isMock: boolean = false) {
 72:     logger.info('Starting updateProfile function', { newData, isMock })
 73:     const updatedData: any = {}
 74: 
 75:     logger.debug('Cleaning data for update')
 76:     // Compare newData with fullProfile and only include changed values
 77:     const { noDataUpdated, data } = cleanDataForUpdate(newData, profile.value)
 78: 
 79:     if (noDataUpdated) {
 80:       logger.info('No changes detected, no update necessary')
 81:       return
 82:     }
 83: 
 84:     logger.debug('Changes detected', { changedData: data })
 85: 
 86:     try {
 87:       logger.info('Sending update request to server')
 88:       let response
 89:       if (isMock) {
 90:         logger.info('Using mock API call')
 91:         // response = await mockApiCall(data)
 92:       } else {
 93:         response = await $fetch('/api/users/update', {
 94:           method: 'POST',
 95:           body: JSON.stringify(data),
 96:         })
 97:       }
 98:       logger.debug('Received response from server', { response })
 99: 
100:       const validData = errors.server({
101:         response,
102:         devOnly: false,
103:         devMessage: 'Error updating user profile',
104:         userMessage: 'There was an error updating your profile after action',
105:       })
106: 
107:       logger.info('Successfully validated server response', { validData })
108: 
109:       // update state
110:       logger.debug('Updating user profile state')
111:       for (const key in validData[0]) {
112:         if (Object.hasOwnProperty.call(validData[0], key)) {
113:           logger.debug(`Updating profile field: ${key}`, {
114:             newValue: validData[0][key],
115:           })
116:         }
117:       }
118:       logger.info('Profile update completed successfully')
119:     } catch (error) {
120:       logger.error('Error occurred during profile update', { error })
121:       throw error // Re-throw the error for the caller to handle
122:     }
123:   }
124: 
125:   // Test function
126:   async function testUpdateProfile() {
127:     const testCases = [
128:       { name: 'John Doe', email: 'john@example.com' },
129:       { name: 'Jane Doe', email: 'error@example.com' }, // This will trigger an error
130:       {}, // This should result in no update
131:     ]
132: 
133:     for (const testCase of testCases) {
134:       try {
135:         console.log('Testing with data:', testCase)
136:         await updateProfile(testCase, true) // Use mock API
137:         console.log('Test passed successfully')
138:       } catch (error) {
139:         console.error('Test failed:', error.message)
140:       }
141:       console.log('---')
142:     }
143:   }
144: 
145:   type FileType = 'avatar'
146:   async function uploadImage(fileType: FileType, blob: Blob) {
147:     // currentFileName is the current file name in the database eg. avatar-drew-macgibbon.jpg
148:     const formData = new FormData()
149:     formData.append('file', blob)
150: 
151:     const response = await $fetch('/api/users/insert/image', {
152:       method: 'POST',
153:       body: formData,
154:       params: {
155:         fileType,
156:         userId: userId.value,
157:       },
158:     })
159: 
160:     console.log('fileName', response)
161: 
162:     const fileName = errors.server({
163:       response,
164:       devOnly: false,
165:       devMessage: `Error uploading ${fileType} image`,
166:       userMessage: `There was an error uploading your ${fileType}`,
167:     })
168: 
169:     let newData = {}
170: 
171:     console.log('fileName', fileName)
172: 
173:     if (fileType === 'avatar') {
174:       newData = {
175:         avatar: fileName,
176:       }
177:     }
178: 
179:     updateProfile(newData)
180:   }
181: 
182:   // first check if the user has an avatar in their profile
183:   // if not, check if the user has an avatar in their identities
184:   // cycle through identities check identities_data for picture
185: 
186:   return {
187:     haveUserSession: computed(() => !!profile.value),
188:     isAdmin: computed(
189:       () => profile.value?.user_role === 'admin' || profile.value?.user_role === 'super_admin',
190:     ),
191:     registeredWithProvider: computed(() => profile.value?.provider),
192:     profile,
193:     uploadImage,
194:     updateProfile,
195:     testUpdateProfile,
196:   }
197: })
198: 
199: if (import.meta.hot) {
200:   import.meta.hot.accept(acceptHMRUpdate(useCurrentUser, import.meta.hot))
201: }
```

## File: layers/crud/server/utils/base.interface.ts
```typescript
 1: type DBTable = keyof Database['public']['Tables'] & keyof Database['public']['Views']
 2: type DBColumns<T extends DBTable> = keyof Tables<T>
 3: type TableSpecificColumns<T extends DBTable> = Partial<DBColumns<T>>
 4: 
 5: // full list of filters here: https://postgrest.org/en/v12/references/api/tables_views.html#operators
 6: 
 7: type FilterKey =
 8:   | 'eq'
 9:   | 'match'
10:   | 'neq'
11:   | 'not'
12:   | 'gte'
13:   | 'gt'
14:   | 'lt'
15:   | 'lte'
16:   | 'like'
17:   | 'ilike'
18:   | 'is'
19:   | 'in'
20:   | 'contains'
21:   | 'containedBy'
22:   | 'rangeGt'
23:   | 'rangeGte'
24:   | 'rangeLt'
25:   | 'rangeLte'
26:   | 'rangeAdjacent'
27:   | 'overlaps'
28:   | 'textSearch'
29: 
30: interface Pagination {
31:   page?: number
32:   limit?: number
33:   from: number
34:   to: number
35: }
36: 
37: export type GenericReturn<T> = Promise<T[] | T | null>
38: 
39: export type TableKey = keyof Database['public']['Tables'] | keyof Database['public']['Views']
40: 
41: export type FilterBy<T extends DBTable> = {
42:   columnName: TableSpecificColumns<T>
43:   operator: FilterKey
44:   value: string | boolean | number
45: }
46: 
47: type OrderBy<T extends DBTable> = {
48:   columnNames: TableSpecificColumns<T>[]
49:   ascending: boolean
50:   referenceTable?: string
51: }
52: 
53: type Conflict = {
54:   onConflict: string[]
55:   ignoreDuplicates: boolean
56:   count?: 'exact' | 'planned' | 'estimated'
57:   defaultToNull?: boolean
58: }
59: 
60: // todo: refactor to have options under select/insert/update/delete
61: // for instance we can group limit, pagination, selectStatement all under select
62: export interface BaseOperationInput<T, K extends DBTable> {
63:   tableName: K
64:   data?: T | T[]
65:   selectStatement?: string
66:   filterBy?: FilterBy<K> | false
67:   orderBy?: OrderBy<K> | false
68:   pagination?: Pagination | false
69:   limit?: number
70:   isSingle?: boolean
71:   isReturned?: boolean
72:   conflict?: Conflict
73: }
74: 
75: export interface SelectInput<T, K extends DBTable> extends BaseOperationInput<T, K> {
76:   selectStatement: string
77: }
78: 
79: export interface InsertInput<T, K extends DBTable> extends BaseOperationInput<T, K> {
80:   data: T | T[]
81: }
82: 
83: export interface UpsertInput<T, K extends DBTable> extends BaseOperationInput<T, K> {
84:   data: T | T[]
85:   conflict: Conflict
86: }
87: 
88: export interface UpdateInput<T, K extends DBTable> extends BaseOperationInput<T, K> {
89:   data: T | T[]
90:   filterBy: FilterBy<K>
91: }
92: 
93: export interface DeleteInput<T, K extends DBTable> extends BaseOperationInput<T, K> {
94:   data: T | T[]
95:   filterBy: FilterBy<K>
96: }
97: 
98: export type { Database, Tables, DBTable }
```

## File: layers/crud/nuxt.config.ts
```typescript
 1: export default defineNuxtConfig({
 2:   modules: ['@nuxtjs/supabase'],
 3: 
 4:   supabase: {
 5:     redirect: false,
 6:     clientOptions: {
 7:       auth: {
 8:         flowType: 'pkce',
 9:         detectSessionInUrl: true,
10:         persistSession: true,
11:         autoRefreshToken: true,
12:       },
13:     },
14:     cookieName: 'sb',
15:   },
16: })
```

## File: libs/logger/src/environment.d.ts
```typescript
 1: // src/environment.d.ts
 2: 
 3: declare global {
 4:   // Add Nuxt runtime config types
 5:   interface RuntimeConfig {
 6:     public: {
 7:       nodeEnv?: string
 8:       [key: string]: any
 9:     }
10:     [key: string]: any
11:   }
12: 
13:   // Add useRuntimeConfig function type
14:   type UseRuntimeConfig = () => RuntimeConfig
15: 
16:   const useRuntimeConfig: UseRuntimeConfig | undefined
17: }
18: 
19: export interface ImportMetaEnv {
20:   MODE: string
21:   DEV: boolean
22:   PROD: boolean
23:   [key: string]: any
24: }
25: 
26: export interface ImportMeta {
27:   url: string
28:   env: ImportMetaEnv
29:   readonly hot?: {
30:     accept: () => void
31:     dispose: () => void
32:     invalidate: () => void
33:     [key: string]: any
34:   }
35: }
36: 
37: export {}
```

## File: libs/logger/src/environment.ts
```typescript
 1: // src/environment.ts
 2: export const getEnvironment = () => {
 3:   // Check for Node.js environment more safely
 4:   const isNode = (() => {
 5:     try {
 6:       return typeof globalThis.process !== 'undefined' && !!globalThis.process?.versions?.node
 7:     } catch {
 8:       return false
 9:     }
10:   })()
11: 
12:   // Check for browser environment
13:   const isBrowser = (() => {
14:     try {
15:       return typeof window !== 'undefined'
16:     } catch {
17:       return false
18:     }
19:   })()
20: 
21:   // Check for development mode across different environments
22:   const isDev = (() => {
23:     try {
24:       // For Nuxt specific environment
25:       if (typeof globalThis.useRuntimeConfig === 'function') {
26:         const config = globalThis.useRuntimeConfig()
27:         return config.public.nodeEnv === 'development'
28:       }
29: 
30:       // Fallback checks
31:       return Boolean(
32:         import.meta?.env?.DEV ||
33:           import.meta?.env?.MODE === 'development' ||
34:           (typeof process !== 'undefined' && process.env.NODE_ENV === 'development'),
35:       )
36:     } catch {
37:       return false
38:     }
39:   })()
40: 
41:   return {
42:     isNode,
43:     isBrowser,
44:     isDev,
45:   }
46: }
```

## File: libs/logger/src/error-interface.ts
```typescript
  1: export interface ErrorMessage {
  2:   userMessage: string // User-friendly error message if needed
  3:   devMessage: string // Make bugfixing easy!
  4:   error: any
  5: }
  6: 
  7: export interface ErrorServer extends Omit<ErrorMessage, 'error'> {
  8:   featureRelated?: boolean // default false - log to feature-specific log
  9:   response: { data: any; error: any }
 10: }
 11: 
 12: // Retryable status codes with descriptions
 13: export const retryableStatusCodes: { [key: number]: string } = {
 14:   408: 'Request Timeout - The server timed out waiting for the request.',
 15:   409: 'Conflict - The request could not be completed due to a conflict with the current state of the target resource.',
 16:   425: 'Too Early - The server is unwilling to risk processing a request that might be replayed.',
 17:   500: 'Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.',
 18:   502: 'Bad Gateway - The server, while acting as a gateway or proxy, received an invalid response from an inbound server.',
 19:   503: 'Service Unavailable - The server is currently unable to handle the request due to temporary overloading or maintenance of the server.',
 20:   504: 'Gateway Timeout - The server, while acting as a gateway or proxy, did not receive a timely response from an upstream server.',
 21: }
 22: 
 23: export enum ErrorSeverity {
 24:   LOW = 'low',
 25:   MEDIUM = 'medium',
 26:   HIGH = 'high',
 27:   CRITICAL = 'critical',
 28: }
 29: 
 30: export enum ErrorType {
 31:   UPLOAD_ERROR = 'UPLOAD_ERROR',
 32:   CONNECTION_ERROR = 'CONNECTION_ERROR',
 33:   AUTHENTICATION_ERROR = 'AUTHENTICATION_ERROR',
 34:   UNIQUE_VIOLATION = 'UNIQUE_VIOLATION',
 35:   FOREIGN_KEY_VIOLATION = 'FOREIGN_KEY_VIOLATION',
 36:   NOT_NULL_VIOLATION = 'NOT_NULL_VIOLATION',
 37:   CONSTRAINT_ERROR = 'CONSTRAINT_ERROR',
 38:   UNDEFINED_TABLE = 'UNDEFINED_TABLE',
 39:   UNDEFINED_PARAMETER = 'UNDEFINED_PARAMETER',
 40:   SYNTAX_ERROR = 'SYNTAX_ERROR',
 41:   DUPLICATE_ALIAS = 'DUPLICATE_ALIAS',
 42:   UNDEFINED_COLUMN = 'UNDEFINED_COLUMN',
 43:   DATA_EXCEPTION = 'DATA_EXCEPTION',
 44:   SERIALIZATION_FAILURE = 'SERIALIZATION_FAILURE',
 45:   DEADLOCK_DETECTED = 'DEADLOCK_DETECTED',
 46:   INSUFFICIENT_RESOURCES = 'INSUFFICIENT_RESOURCES',
 47:   RATE_LIMIT_ERROR = 'RATE_LIMIT_ERROR',
 48:   SERVER_ERROR = 'SERVER_ERROR',
 49:   UNKNOWN_ERROR = 'UNKNOWN_ERROR',
 50:   VALIDATION_ERROR = 'VALIDATION_ERROR',
 51:   NOT_FOUND_ERROR = 'NOT_FOUND_ERROR',
 52:   NETWORK_ERROR = 'NETWORK_ERROR',
 53: }
 54: 
 55: // Types
 56: export interface ErrorDetails {
 57:   type: ErrorType
 58:   message: string
 59:   severity: ErrorSeverity
 60:   stack?: string
 61:   code?: string | number
 62:   context?: string
 63:   pgError?: string
 64:   operation?: string
 65:   originalError?: any
 66: }
 67: 
 68: export interface ErrorHandlerOptions {
 69:   context?: string
 70:   userMessage?: string
 71:   devMessage?: string
 72:   throwError?: boolean
 73: }
 74: 
 75: export interface FetchErrorResponse {
 76:   data?: any
 77:   error?: any
 78: }
 79: 
 80: export function mapErrorSeverity(error: any): ErrorSeverity {
 81:   if (error.status >= 500) return ErrorSeverity.CRITICAL
 82:   if (error.status === 429) return ErrorSeverity.HIGH
 83: 
 84:   // Connection errors are critical
 85:   if (error.code?.startsWith('08')) return ErrorSeverity.CRITICAL
 86: 
 87:   // Authentication errors are high severity
 88:   if (error.code?.startsWith('28')) return ErrorSeverity.HIGH
 89: 
 90:   // Constraint violations are high severity
 91:   if (error.code?.startsWith('23')) return ErrorSeverity.HIGH
 92: 
 93:   // Query errors are medium severity
 94:   if (error.code?.startsWith('42')) return ErrorSeverity.MEDIUM
 95: 
 96:   // Data exceptions are medium severity
 97:   if (error.code?.startsWith('22')) return ErrorSeverity.MEDIUM
 98: 
 99:   // Transaction errors are high severity
100:   if (error.code === '40001' || error.code === '40P01') return ErrorSeverity.HIGH
101: 
102:   // System errors are critical
103:   if (error.code?.startsWith('53')) return ErrorSeverity.CRITICAL
104: 
105:   // Default to medium severity for unknown errors
106:   return ErrorSeverity.MEDIUM
107: }
108: 
109: export function mapErrorType(error: any): ErrorType {
110:   // Connection errors
111:   if (
112:     error.code === '08000' ||
113:     error.code === '08003' ||
114:     error.code === '08006' ||
115:     error.code === '08001' ||
116:     error.code === '08004'
117:   ) {
118:     return ErrorType.CONNECTION_ERROR
119:   }
120: 
121:   // Authentication errors
122:   if (error.code === '28000' || error.code === '28P01') {
123:     return ErrorType.AUTHENTICATION_ERROR
124:   }
125: 
126:   // Constraint violations
127:   if (error.code === '23505') return ErrorType.UNIQUE_VIOLATION
128:   if (error.code === '23503') return ErrorType.FOREIGN_KEY_VIOLATION
129:   if (error.code === '23502') return ErrorType.NOT_NULL_VIOLATION
130:   if (error.code?.startsWith('23') && !['23505', '23503', '23502'].includes(error.code))
131:     return ErrorType.CONSTRAINT_ERROR
132: 
133:   // Query errors
134:   if (error.code === '42P01') return ErrorType.UNDEFINED_TABLE
135:   if (error.code === '42P02') return ErrorType.UNDEFINED_PARAMETER
136:   if (error.code === '42601') return ErrorType.SYNTAX_ERROR
137:   if (error.code === '42P07') return ErrorType.DUPLICATE_ALIAS
138:   if (error.code === '42703') return ErrorType.UNDEFINED_COLUMN
139: 
140:   // Data errors
141:   if (error.code?.startsWith('22')) return ErrorType.DATA_EXCEPTION
142: 
143:   // Transaction errors
144:   if (error.code === '40001') return ErrorType.SERIALIZATION_FAILURE
145:   if (error.code === '40P01') return ErrorType.DEADLOCK_DETECTED
146: 
147:   // System errors
148:   if (
149:     error.code === '53000' ||
150:     error.code === '53100' ||
151:     error.code === '53200' ||
152:     error.code === '53300'
153:   ) {
154:     return ErrorType.INSUFFICIENT_RESOURCES
155:   }
156: 
157:   // HTTP-specific errors
158:   if (error.status === 429) return ErrorType.RATE_LIMIT_ERROR
159:   if (error.status >= 500) return ErrorType.SERVER_ERROR
160: 
161:   // Catch-all for unspecified errors
162:   return ErrorType.UNKNOWN_ERROR
163: }
164: 
165: export interface LogLevels {
166:   error: 0
167:   warn: 1
168:   info: 2
169:   http: 3
170:   verbose: 4
171:   debug: 5
172:   silly: 6
173: }
174: 
175: export class AppError extends Error {
176:   details: ErrorDetails
177: 
178:   constructor(details: ErrorDetails) {
179:     super(details.message)
180:     this.details = details
181:     this.name = 'AppError'
182:   }
183: }
184: 
185: export interface Logger {
186:   error: (message: string, ...args: any[]) => void
187:   warn: (message: string, ...args: any[]) => void
188:   info: (message: string, ...args: any[]) => void
189:   verbose: (message: string, ...args: any[]) => void
190:   debug: (message: string, ...args: any[]) => void
191:   silly: (message: string, ...args: any[]) => void
192:   http: (message: string, ...args: any[]) => void
193: }
```

## File: libs/logger/src/handler.ts
```typescript
  1: // utils/error-handler.ts
  2: import { createLogger } from './logger'
  3: import { getEnvironment } from './environment'
  4: import {
  5:   ErrorType,
  6:   ErrorSeverity,
  7:   AppError,
  8:   mapErrorType,
  9:   mapErrorSeverity,
 10:   retryableStatusCodes,
 11:   type ErrorHandlerOptions,
 12:   type FetchErrorResponse,
 13: } from './error-interface'
 14: 
 15: export class ErrorHandler {
 16:   private logger
 17:   private env = getEnvironment()
 18: 
 19:   constructor(private context = 'ErrorHandler') {
 20:     this.logger = createLogger(context)
 21:   }
 22: 
 23:   private determineErrorType(error: any): ErrorType {
 24:     if (error instanceof AppError) return error.details.type
 25:     return mapErrorType(error)
 26:   }
 27: 
 28:   private determineSeverity(error: any): ErrorSeverity {
 29:     if (error instanceof AppError) return error.details.severity
 30:     return mapErrorSeverity(error)
 31:   }
 32: 
 33:   private formatErrorMessage(options: {
 34:     userMessage?: string
 35:     devMessage: string
 36:     error: any
 37:   }): string {
 38:     const { userMessage, devMessage, error } = options
 39:     const devError = `${devMessage}: ${JSON.stringify(error)}`
 40:     this.logger.error(devError)
 41:     return this.env.isDev ? devError : userMessage || 'An unexpected error occurred'
 42:   }
 43: 
 44:   private normalizeError(error: Error | AppError, context?: string): AppError {
 45:     if (error instanceof AppError) {
 46:       return error
 47:     }
 48: 
 49:     const errorType = this.determineErrorType(error)
 50:     const severity = this.determineSeverity(error)
 51: 
 52:     return new AppError({
 53:       type: errorType,
 54:       message: error.message,
 55:       severity,
 56:       stack: error.stack,
 57:       context,
 58:       code: (error as any).code,
 59:       pgError: (error as any).details || (error as any).hint,
 60:       operation: context,
 61:       originalError: error,
 62:     })
 63:   }
 64: 
 65:   private getErrorStatusCode(errorType: ErrorType): number {
 66:     switch (errorType) {
 67:       case ErrorType.AUTHENTICATION_ERROR:
 68:         return 401
 69:       case ErrorType.VALIDATION_ERROR:
 70:         return 400
 71:       case ErrorType.NOT_FOUND_ERROR:
 72:         return 404
 73:       case ErrorType.RATE_LIMIT_ERROR:
 74:         return 429
 75:       case ErrorType.CONSTRAINT_ERROR:
 76:       case ErrorType.UNIQUE_VIOLATION:
 77:       case ErrorType.FOREIGN_KEY_VIOLATION:
 78:         return 409
 79:       default:
 80:         return 500
 81:     }
 82:   }
 83: 
 84:   handleError(error: Error | AppError, options: ErrorHandlerOptions = {}) {
 85:     const appError = this.normalizeError(error, options.context)
 86: 
 87:     this.logger.error(`${appError.details.type}: ${appError.message}`, {
 88:       ...appError.details,
 89:       stack: this.env.isDev ? appError.stack : undefined,
 90:     })
 91: 
 92:     // Handle server-side errors
 93:     if (this.env.isNode) {
 94:       const errorMessage = this.formatErrorMessage({
 95:         userMessage: options.userMessage || appError.message,
 96:         devMessage: options.devMessage || appError.details.type,
 97:         error: appError,
 98:       })
 99: 
100:       if (options.throwError) {
101:         const serverError = new Error()
102:         serverError.message = `SERVER ERROR: ${errorMessage}`
103:         ;(serverError as any).statusCode = this.getErrorStatusCode(appError.details.type)
104:         ;(serverError as any).statusMessage = appError.message
105:         ;(serverError as any).data = {
106:           error: {
107:             type: appError.details.type,
108:             message: appError.message,
109:             severity: appError.details.severity,
110:             details: this.env.isDev ? appError.details : undefined,
111:           },
112:         }
113:         throw serverError
114:       }
115:     }
116: 
117:     // Handle critical errors
118:     if (appError.details.severity === ErrorSeverity.CRITICAL) {
119:       // Add critical error handling logic
120:       this.handleCriticalError(appError)
121:     }
122: 
123:     return appError
124:   }
125: 
126:   handleFetchError({
127:     response,
128:     devMessage,
129:     userMessage,
130:   }: {
131:     response: FetchErrorResponse
132:     devMessage: string
133:     userMessage?: string
134:   }) {
135:     if (response.error) {
136:       this.logger.error(`FETCH Error: ${response.error}`)
137:       return this.handleError(response.error, { userMessage, devMessage })
138:     }
139: 
140:     if (response.data) {
141:       this.logger.info(
142:         `Successfully fetched ${Array.isArray(response.data) ? response.data.length : 1} items`,
143:       )
144:       return response.data
145:     }
146: 
147:     this.logger.info('Nothing returned from fetch')
148:     return this.handleError(new Error('No data found'), {
149:       userMessage: 'Resource not found',
150:       devMessage: 'Fetch returned empty response',
151:     })
152:   }
153: 
154:   handleDBError(response: FetchErrorResponse, context: string) {
155:     if (response.error) {
156:       return this.handleError(response.error, {
157:         context,
158:         devMessage: `Database error in ${context}`,
159:         userMessage: 'Database operation failed',
160:       })
161:     }
162:     return response.data
163:   }
164: 
165:   private handleCriticalError(error: AppError) {
166:     // Implement critical error handling
167:     this.logger.error('CRITICAL ERROR:', error.details)
168:     // Could trigger alerts, notifications, etc.
169:   }
170: }
171: 
172: // Factory function
173: export function createErrorHandler(context = 'ErrorHandler') {
174:   const handler = new ErrorHandler(context)
175: 
176:   return {
177:     handleError: handler.handleError.bind(handler),
178:     handleFetchError: handler.handleFetchError.bind(handler),
179:     handleDBError: handler.handleDBError.bind(handler),
180:   }
181: }
182: 
183: // Convenience function for framework integration
184: export const useErrorHandler = (context = 'ErrorHandler') => {
185:   return createErrorHandler(context)
186: }
```

## File: libs/logger/src/logger.ts
```typescript
  1: // utils/logger.ts
  2: import { createConsola } from 'consola'
  3: import type { ConsolaInstance } from 'consola'
  4: import type { Logger, LogLevels } from './error-interface'
  5: import { getEnvironment } from './environment'
  6: 
  7: export class BaseLogger implements Logger {
  8:   protected logger: ConsolaInstance | Logger
  9:   protected env = getEnvironment()
 10: 
 11:   constructor(tag = '') {
 12:     this.logger = createConsola({
 13:       level: this.env.isDev ? 10 : 3,
 14:       formatOptions: {
 15:         date: this.env.isNode,
 16:         colors: true,
 17:       },
 18:     }).withTag(tag.toUpperCase())
 19:   }
 20: 
 21:   error(message: string, ...args: any[]) {
 22:     this.logger.error(message, ...args)
 23:   }
 24: 
 25:   warn(message: string, ...args: any[]) {
 26:     this.logger.warn(message, ...args)
 27:   }
 28: 
 29:   info(message: string, ...args: any[]) {
 30:     this.logger.info(message, ...args)
 31:   }
 32: 
 33:   verbose(message: string, ...args: any[]) {
 34:     if (this.env.isDev) {
 35:       this.logger.verbose(message, ...args)
 36:     }
 37:   }
 38: 
 39:   debug(message: string, ...args: any[]) {
 40:     if (this.env.isDev) {
 41:       this.logger.debug(message, ...args)
 42:     }
 43:   }
 44: 
 45:   silly(message: string, ...args: any[]) {
 46:     if (this.env.isDev) {
 47:       this.logger.info(message, ...args)
 48:     }
 49:   }
 50: 
 51:   http(message: string, ...args: any[]) {
 52:     this.logger.info(message, ...args)
 53:   }
 54: }
 55: 
 56: let winstonPackage: typeof import('winston') | undefined = undefined
 57: 
 58: export class NodeLogger extends BaseLogger {
 59:   private winstonLogger: any
 60: 
 61:   constructor(tag = '') {
 62:     super(tag)
 63: 
 64:     if (this.env.isNode) {
 65:       this.initWinston(tag).catch((err) => {
 66:         this.logger.error('Failed to initialize Winston:', err)
 67:       })
 68:     }
 69:   }
 70: 
 71:   private async initWinston(tag: string) {
 72:     try {
 73:       if (!winstonPackage) {
 74:         winstonPackage = await import('winston')
 75:       }
 76: 
 77:       const format = winstonPackage.format.combine(
 78:         winstonPackage.format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss:ms' }),
 79:         winstonPackage.format.cli(),
 80:         winstonPackage.format.printf(
 81:           (info) => `${info['timestamp']} ${info.level}: [${tag}] ${info.message}`,
 82:         ),
 83:       )
 84: 
 85:       this.winstonLogger = winstonPackage.createLogger({
 86:         levels: {
 87:           error: 0,
 88:           warn: 1,
 89:           info: 2,
 90:           http: 3,
 91:           verbose: 4,
 92:           debug: 5,
 93:           silly: 6,
 94:         },
 95:         level: this.env.isDev ? 'silly' : 'info',
 96:         format,
 97:         transports: [
 98:           new winstonPackage.transports.Console(),
 99:           ...(this.env.isDev
100:             ? []
101:             : [
102:                 new winstonPackage.transports.File({
103:                   filename: './data/logs/error.log',
104:                   level: 'error',
105:                 }),
106:                 new winstonPackage.transports.File({
107:                   filename: './data/logs/combined.log',
108:                 }),
109:               ]),
110:         ],
111:       })
112:     } catch (err) {
113:       this.logger.warn('Winston not available, falling back to console logger')
114:     }
115:   }
116: 
117:   override error(message: string, ...args: any[]) {
118:     if (this.winstonLogger) {
119:       this.winstonLogger.error(message, ...args)
120:     } else {
121:       super.error(message, ...args)
122:     }
123:   }
124: 
125:   override warn(message: string, ...args: any[]) {
126:     if (this.winstonLogger) {
127:       this.winstonLogger.warn(message, ...args)
128:     } else {
129:       super.warn(message, ...args)
130:     }
131:   }
132: 
133:   override info(message: string, ...args: any[]) {
134:     if (this.winstonLogger) {
135:       this.winstonLogger.info(message, ...args)
136:     } else {
137:       super.info(message, ...args)
138:     }
139:   }
140: 
141:   override verbose(message: string, ...args: any[]) {
142:     if (this.winstonLogger && this.env.isDev) {
143:       this.winstonLogger.verbose(message, ...args)
144:     } else {
145:       super.verbose(message, ...args)
146:     }
147:   }
148: 
149:   override debug(message: string, ...args: any[]) {
150:     if (this.winstonLogger && this.env.isDev) {
151:       this.winstonLogger.debug(message, ...args)
152:     } else {
153:       super.debug(message, ...args)
154:     }
155:   }
156: 
157:   override silly(message: string, ...args: any[]) {
158:     if (this.winstonLogger && this.env.isDev) {
159:       this.winstonLogger.silly(message, ...args)
160:     } else {
161:       super.silly(message, ...args)
162:     }
163:   }
164: 
165:   override http(message: string, ...args: any[]) {
166:     if (this.winstonLogger) {
167:       this.winstonLogger.http(message, ...args)
168:     } else {
169:       super.http(message, ...args)
170:     }
171:   }
172: }
173: 
174: // Factory function to create the appropriate logger
175: export const createLogger = (tag = '') => {
176:   const env = getEnvironment()
177:   return env.isNode ? new NodeLogger(tag) : new BaseLogger(tag)
178: }
179: 
180: // Async version for when we want to ensure Winston is loaded
181: export const createLoggerAsync = async (tag = '') => {
182:   const logger = createLogger(tag)
183:   if (logger instanceof NodeLogger) {
184:     // Wait for Winston to initialize if needed
185:     await new Promise((resolve) => setTimeout(resolve, 100))
186:   }
187:   return logger
188: }
189: 
190: // Framework-specific wrappers if needed
191: export const useLogger = (tag = '') => {
192:   return createLogger(tag)
193: }
194: 
195: export const useLoggerAsync = async (tag = '') => {
196:   return await createLoggerAsync(tag)
197: }
```

## File: libs/logger/index.d.ts
```typescript
1: import type { Consola } from 'consola'
2: 
3: export * from './src/environment.d'
4: 
5: export function useLogger(tag?: string): Consola
```

## File: libs/logger/index.ts
```typescript
1: export * from './src/logger'
2: export * from './src/handler'
3: export * from './src/error-interface'
```

## File: shared-runtime.config.ts
```typescript
 1: import { config } from 'dotenv'
 2: 
 3: config()
 4: 
 5: export default defineNuxtConfig({
 6:   runtimeConfig: {
 7:     public: {
 8:       strapiUrl: process.env.NUXT_PUBLIC_STRAPI_URL,
 9:       formbricksEnvironment: process.env.NUXT_PUBLIC_FORMBRICKS_ENVIRONMENT,
10:       formbricksHost: process.env.NUXT_PUBLIC_FORMBRICKS_HOST,
11:       supabaseUrl: process.env.NUXT_PUBLIC_SUPABASE_URL,
12:       supabaseKey: process.env.NUXT_PUBLIC_SUPABASE_KEY,
13:       aeAuthUrl: process.env.NUXT_PUBLIC_AE_AUTH_URL,
14:       aeLoginUrl: process.env.NUXT_PUBLIC_AE_LOGIN_URL,
15:       aeAppUrl: process.env.NUXT_PUBLIC_AE_APP_URL,
16:       aeAdminUrl: process.env.NUXT_PUBLIC_AE_ADMIN_URL,
17:       aeMonitoringUrl: process.env.NUXT_PUBLIC_AE_MONITORING_URL,
18:       aeWebsiteUrl: process.env.NUXT_PUBLIC_AE_WEBSITE_URL,
19:       nodeEnv: process.env.NUXT_PUBLIC_NODE_ENV,
20:       logLevel: process.env.NUXT_PUBLIC_LOG_LEVEL,
21:       posthogKey: process.env.NUXT_PUBLIC_POSTHOG_KEY,
22:       posthogUrl: process.env.NUXT_PUBLIC_POSTHOG_URL,
23:       studioTokens: process.env.NUXT_PUBLIC_STUDIO_TOKENS,
24:       scraperUrl: process.env.NUXT_PUBLIC_SCRAPER_URL,
25:       devHelper: {
26:         enabled: true,
27:         features: {
28:           networkErrorClassifier: true,
29:           infiniteLoopDetector: true,
30:           unhandledPromiseRejectionTracker: true,
31:           environmentConsistencyChecker: true,
32:         },
33:       },
34:     },
35:     strapiUrl: process.env.NUXT_STRAPI_URL,
36:     supabaseServiceKey: process.env.NUXT_SUPABASE_SERVICE_KEY,
37:     googleApiKey: process.env.NUXT_GOOGLE_API_KEY,
38:     nasaApiKey: process.env.NUXT_NASA_API_KEY,
39:     openaiApiKey: process.env.NUXT_OPENAI_API_KEY,
40:     openaiOrg: process.env.NUXT_OPENAI_ORG,
41:     redisFlushKey: process.env.NUXT_REDIS_FLUSH_KEY,
42:     scraperKey: process.env.NUXT_SCRAPER_KEY,
43:     razorpayKey: process.env.NUXT_RAZORPAY_KEY,
44:     razorpaySecret: process.env.NUXT_RAZORPAY_SECRET,
45:     razorpayTestKey: process.env.NUXT_RAZORPAY_TEST_KEY,
46:     razorpayTestSecret: process.env.NUXT_RAZORPAY_TEST_SECRET,
47:   },
48: })
```
