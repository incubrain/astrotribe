================================================================
Directory Structure
================================================================
about/
  AboutTimeline.vue
blog/
  article/
    ArticleList.vue
    ArticleMeta.vue
    ArticleNavigation.vue
    ArticleToc.vue
    BlogArticle.vue
    BlogArticleAuthor.vue
    BlogArticleAuthorCard.vue
    BlogArticleHero.vue
    BlogArticleInfinateScroll.client.vue
    BlogArticleShare.vue
  card/
    BlogCard.vue
    BlogCardSkeleton.vue
  BlogActions.vue
  BlogAdFloat.client.vue
  BlogCatTag.vue
  BlogFilter.vue
  BlogMedia.vue
  BlogNews.vue
  BlogPostCaption.vue
  BlogRelatedPosts.vue
  BlogSearch.vue
  BlogShowcase.vue
common/
  CommonHero.vue
  CommonTitle.vue
conference/
  ConferenceAbout.vue
  ConferenceChairperson.vue
  ConferenceScheduleTabs.vue
  ConferenceSpeakerCard.vue
  ConferenceSpeakers.vue
  ConferenceVenue.vue
darksky/
  Hero.vue
event/
  EventContent.vue
  EventSchedule.vue
  EventSidebar.vue
footer/
  FooterBottomBar.vue
  FooterCategories.vue
  FooterWebsite.vue
home/
  FeatureGroup.vue
  HomeButton.vue
  HomeCtaMain.vue
  HomeFeatures.vue
  HomeFeatureTabs.vue
  HomeHeading.vue
  HomeHero.vue
  HomeProductStep.vue
  HomeTestimonial.vue
  HomeTrusted.vue
landing/
  LandingCTASocial.vue
  LandingFeatures.vue
  LandingFuture.vue
  LandingGlass.vue
  LandingHero.vue
  LandingImageCycle.vue
  LandingPricing.vue
  LandingProductSteps.vue
  LandingSidescroll.vue
  LandingStats.vue
  LandingTestimonials.vue
  LandingTitle.vue
  LandingTrusted.vue
  LandingWebSeries.vue
project/
  ProjectCard.vue
svg/
  SvgStars.vue
symposium/
  SymposiumAbout.vue
  SymposiumPDFResource.vue
  SymposiumSchedule.vue
  SymposiumSpeakerCard.vue
  SymposiumSpeakers.vue
  SymposiumVenue.vue
team/
  TeamCard.vue
AppBackButton.vue
AppCarousel.vue
AppDetectBottom.vue
AppFeatures.vue
AppSocialBlock.vue
AppStars.vue
AppSwiper.vue
AppThemeToggle.client.vue
AppTipTap.vue
AppVideoModal.vue
LoginButton.vue
Mascot.vue
NavTop.vue
Pagination.vue

================================================================
Files
================================================================

================
File: about/AboutTimeline.vue
================
<template>
  <div class="relative grid h-full w-full grid-cols-1 gap-4 md:grid-cols-2 xl:gap-8">
    <LandingGlass
      v-for="item in timeline"
      :key="item.title"
      color="emerald"
      :padded="false"
    >
      <div class="flex w-full flex-col justify-center p-6">
        <h2 class="text-lg font-semibold leading-7 xl:leading-9">
          {{ item.title }}
        </h2>
        <h4 class="text-sm">
          {{ item.date }}
        </h4>
        <p class="mt-4 text-sm font-normal leading-6">
          {{ item.body }}
        </p>
      </div>
    </LandingGlass>
  </div>
</template>

<script setup lang="ts">
type TimelineObject = {
  date: string
  title: string
  body: string
  icon: string
}

defineProps({
  timeline: {
    type: Array as PropType<TimelineObject[]>,
    required: true,
  },
})
</script>

================
File: blog/article/ArticleList.vue
================
<script setup lang="ts">
const props = defineProps({
  articles: {
    type: Array,
    required: true,
  },
  isLoading: {
    type: Boolean,
    default: false,
  },
})
</script>

<template>
  <div
    class="wrapper relative grid w-full grid-cols-1 items-start md:gap-4 md:px-4 lg:grid-cols-[0.5fr_1fr] lg:gap-8 lg:px-8"
  >
    <BlogAdFloat />

    <div
      v-if="isLoading"
      class="grid h-full grid-cols-1 md:grid-cols-2 md:gap-4 lg:gap-8"
    >
      <BlogCardSkeleton
        v-for="i in 6"
        :key="i"
      />
    </div>

    <div
      v-else-if="articles && articles.length"
      class="grid h-full grid-cols-1 md:grid-cols-2 md:gap-4 lg:gap-8"
    >
      <BlogCard
        v-for="article in articles"
        :key="`blog-article-${article.id}`"
        :article="article"
      />
    </div>
    <div
      v-else
      class="background flex w-full items-center justify-center border border-primary-500 p-8 md:rounded-md"
    >
      <p class="foreground px-2">No articles found...</p>
    </div>
  </div>
</template>

================
File: blog/article/ArticleMeta.vue
================
<script setup lang="ts">
import { useDateFormat } from '@vueuse/core'

const props = defineProps({
  article: {
    type: Object,
    required: true,
  },
})

// Format date
const formattedDate = computed(() => {
  const dateStr = props.article.date || props.article.publishedAt
  return dateStr ? useDateFormat(dateStr, 'DD MMM YYYY').value : ''
})

// Calculate reading time
const readingTime = computed(() => {
  if (!props.article.body?.children) return '1 min read'

  // Extract text content from the article body
  const text = JSON.stringify(props.article.body)

  // Average reading speed: 200 words per minute
  const words = text.trim().split(/\s+/).length
  const minutes = Math.ceil(words / 200)

  return `${minutes} min read`
})
</script>

<template>
  <div
    class="flex flex-col md:flex-row justify-between items-start md:items-center gap-2 text-sm text-gray-500"
  >
    <div class="flex items-center gap-3">
      <!-- Author with Avatar -->
      <div
        v-if="article.author"
        class="flex items-center gap-2"
      >
        <IBImage
          v-if="article.author?.avatar?.url"
          :img="{
            src: article.author.avatar.url,
            alt: `${article.author.name} avatar`,
            width: '32',
            height: '32',
          }"
          class="rounded-full border border-gray-300"
        />
        <span class="font-medium">{{ article.author.name }}</span>
      </div>

      <!-- Date -->
      <div
        v-if="formattedDate"
        class="flex items-center gap-1"
      >
        <Icon
          name="i-lucide-calendar"
          class="w-4 h-4"
        />
        <span>{{ formattedDate }}</span>
      </div>
    </div>

    <!-- Reading Time -->
    <div class="flex items-center gap-1">
      <Icon
        name="i-lucide-clock"
        class="w-4 h-4"
      />
      <span>{{ readingTime }}</span>
    </div>
  </div>
</template>

================
File: blog/article/ArticleNavigation.vue
================
<script setup lang="ts">
const props = defineProps({
  article: {
    type: Object,
    required: true,
  },
})

const { data: surroundings } = await useAsyncData(`surroundings-${props.article.path}`, () =>
  queryCollectionItemSurroundings('blog', props.article.path, {
    fields: ['title', 'description', 'path', 'cover'],
  }),
)

const prevArticle = computed(() => surroundings.value?.[0] || null)
const nextArticle = computed(() => surroundings.value?.[1] || null)
</script>

<template>
  <div class="my-12 border-t border-b border-primary-800 py-8">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      <!-- Previous Article -->
      <NuxtLink
        v-if="prevArticle"
        :to="prevArticle.path"
        class="group flex flex-col p-4 rounded-lg hover:bg-primary-950 transition"
      >
        <div class="text-sm text-gray-400 mb-2 flex items-center gap-1">
          <Icon
            name="i-lucide-arrow-left"
            class="w-4 h-4"
          />
          <span>Previous Article</span>
        </div>
        <h3 class="font-medium text-lg group-hover:text-primary-400 transition line-clamp-2">
          {{ prevArticle.title }}
        </h3>
        <p
          v-if="prevArticle.description"
          class="text-sm text-gray-400 mt-1 line-clamp-2"
        >
          {{ prevArticle.description }}
        </p>
      </NuxtLink>
      <div
        v-else
        class="hidden md:block"
      ></div>

      <!-- Next Article -->
      <NuxtLink
        v-if="nextArticle"
        :to="nextArticle.path"
        class="group flex flex-col p-4 rounded-lg hover:bg-primary-950 transition md:text-right md:items-end"
      >
        <div class="text-sm text-gray-400 mb-2 flex items-center gap-1 md:justify-end">
          <span>Next Article</span>
          <Icon
            name="i-lucide-arrow-right"
            class="w-4 h-4"
          />
        </div>
        <h3 class="font-medium text-lg group-hover:text-primary-400 transition line-clamp-2">
          {{ nextArticle.title }}
        </h3>
        <p
          v-if="nextArticle.description"
          class="text-sm text-gray-400 mt-1 line-clamp-2"
        >
          {{ nextArticle.description }}
        </p>
      </NuxtLink>
    </div>
  </div>
</template>

================
File: blog/article/ArticleToc.vue
================
<script setup lang="ts">
import { useDateFormat } from '@vueuse/core'

const props = defineProps({
  article: {
    type: Object,
    required: true,
  },
  expanded: {
    type: Boolean,
    default: false,
  },
})

const tocLinks = computed(() => {
  return props.article.body?.toc?.links || []
})

const activeSection = ref('')

const onScroll = () => {
  let currentSection = ''
  tocLinks.value.forEach((section) => {
    const element = document.getElementById(section.id)
    if (element && window.scrollY >= element.offsetTop - 200) {
      currentSection = section.id
    }
    section.children?.forEach((child) => {
      const childElement = document.getElementById(child.id)
      if (childElement && window.scrollY >= childElement.offsetTop - 200) {
        currentSection = child.id
      }
    })
  })
  activeSection.value = currentSection
}

const isActiveSection = (sectionId: string) => {
  return activeSection.value === sectionId
}

const isSectionOrChildActive = (section: any) => {
  if (isActiveSection(section.id)) {
    return true
  }
  return section.children?.some((child: any) => isActiveSection(child.id)) ?? false
}

onMounted(() => {
  window.addEventListener('scroll', onScroll)
})

onUnmounted(() => {
  window.removeEventListener('scroll', onScroll)
})
</script>

<template>
  <div
    v-if="tocLinks.length"
    class="relative text-base"
  >
    <div class="flex gap-2 pb-2">
      <PrimeTag
        v-if="article.updatedAt"
        :value="`Updated ${useDateFormat(article.updatedAt, 'DD MMM YYYY').value}`"
      />
    </div>
    <PrimeAccordion value="0">
      <PrimeAccordionPanel value="0">
        <PrimeAccordionHeader class="flex gap-4 bg-primary-800 py-2 px-4 rounded-md items-center">
          <h3 class="text-lg font-semibold">Table of Contents</h3>
        </PrimeAccordionHeader>
        <PrimeAccordionContent>
          <ul>
            <li
              v-for="link in tocLinks"
              :key="link.id"
              class="py-1"
            >
              <NuxtLink
                class="text-lg font-[Oswald]"
                :class="{ 'text-primary-600': isActiveSection(link.id) }"
                :to="`#${link.id}`"
              >
                <h4>
                  {{ link.text }}
                </h4>
              </NuxtLink>
              <ul
                v-if="link.children"
                :class="[
                  'space-y-2 overflow-hidden text-sm transition-all duration-700 ease-out',
                  isSectionOrChildActive(link) || expanded
                    ? `max-h-[${Math.floor((link.children.length + 1) * 31)}px] pt-2`
                    : 'max-h-[0px] py-0',
                ]"
              >
                <li
                  v-for="child in link.children"
                  :key="`toc-child${child.id}`"
                  :class="{
                    'ml-4 max-w-[80%]': child.depth === 3,
                    'text-primary-600': isActiveSection(child.id),
                  }"
                  class="leading-tight"
                >
                  <NuxtLink :to="`#${child.id}`">
                    <h5>
                      {{ child.text }}
                    </h5>
                  </NuxtLink>
                </li>
              </ul>
            </li>
          </ul>
        </PrimeAccordionContent>
      </PrimeAccordionPanel>
    </PrimeAccordion>
  </div>
</template>

================
File: blog/article/BlogArticle.vue
================
<script setup lang="ts">
const { width } = useWindowSize()

const expandToc = computed(() => width.value < 1280)

const articleContent = ref<HTMLElement | null>(null)
const tocLinks = ref<TocLink[]>([])

const p = defineProps({
  article: {
    type: Object,
    required: true,
  },
})

console.log('Props Article:', p.article)

interface TocLink {
  id: string
  text: string
  depth: number
  children: TocLink[]
}

// Update to extract TOC from Nuxt Content v3 format
const extractToc = (): TocLink[] => {
  // Nuxt Content v3 already provides TOC in article.body.toc
  if (p.article.body?.toc?.links) {
    return p.article.body.toc.links.map((link) => ({
      id: link.id,
      text: link.text,
      depth: link.depth,
      children: link.children || [],
    }))
  }
  return []
}

onMounted(() => {
  tocLinks.value = extractToc()
})

watch(
  () => articleContent.value,
  async (newVal) => {
    if (newVal && p.article.body) {
      await new Promise((resolve) => setTimeout(resolve, 1000))
    }
  },
)
</script>

<template>
  <div class="max-w-full pb-10">
    <main>
      <BlogArticleHero :article="article" />
      <div
        class="padded-x grid grid-cols-[minmax(300px,700px)] justify-center pt-8 xl:grid-cols-[minmax(240px,1fr)_minmax(660px,740px)_minmax(240px,1fr)] xl:gap-8"
      >
        <div class="w-full xl:col-start-1">
          <BlogArticleToc
            v-if="tocLinks.length"
            class="background border-color rounded-md border p-4 xl:sticky xl:left-0 xl:top-24 xl:border-none xl:p-0"
            :toc="tocLinks"
            :updated-at="article.updatedAt"
            :expanded="expandToc"
          />
        </div>
        <div class="xl:padded-x xl:col-start-2">
          <div class="pb-12">
            <div
              ref="articleContent"
              class="mx-auto space-y-8"
            >
              <ContentRenderer
                v-if="article"
                :value="article"
                class="nuxt-content"
              />
            </div>
            <BlogArticleShare
              :link="article.path"
              :summary="article.description"
            />
            <BlogArticleAuthorCard :authors="[article.author]" />
          </div>
        </div>
      </div>
    </main>
  </div>
</template>

================
File: blog/article/BlogArticleAuthor.vue
================
<script setup lang="ts">
import { useDateFormat } from '@vueuse/core'

defineProps<{
  authors: any[]
  publishedAt: string
}>()
</script>

<template>
  <div
    v-if="authors && authors.length > 0"
    class="flex flex-col items-center"
  >
    <div class="flex items-center">
      <template
        v-for="(author, index) in authors"
        :key="author?.id"
      >
        <div
          v-if="index > 0"
          class="text-lg mx-2 font-bold"
        >
          &
        </div>
        <div class="flex flex-col items-center">
          <IBImage
            v-if="author"
            :img="{
              src: `${author.avatar.url}`,
              alt: `${author.name} is an author on the AstronEra Blog`,
              width: '44px',
              height: '44px',
            }"
            class="border-color rounded-full border"
          />
          <p
            v-if="author"
            class="mt-2 text-center text-sm font-semibold"
          >
            {{ author.name }}<br />
          </p>
        </div>
      </template>
    </div>
    <p class="mt-4 text-sm"> Published: {{ useDateFormat(publishedAt, 'DD MMM YYYY').value }} </p>
  </div>
</template>

<style scoped></style>

================
File: blog/article/BlogArticleAuthorCard.vue
================
<script setup lang="ts">
defineProps<{
  authors: any[]
}>()
</script>

<template>
  <div
    v-if="authors"
    class="grid grid-cols-1 gap-4 md:grid-cols-2 xl:gap-8"
  >
    <div
      v-for="(author, i) in authors"
      :key="`author-${i}`"
      class="border-color foreground flex h-full flex-col items-center gap-4 rounded-xl border p-4 xl:p-8"
    >
      <div>
        <IBImage
          v-if="author"
          :img="{
            src: `${author.avatar.url}`,
            alt: `${author.name} is an author on the AstronEra Blog`,
            width: 100,
            height: 100,
          }"
          class="h-full rounded-full sm:max-w-[100px]"
        />
      </div>
      <div
        v-if="author"
        class="w-full space-y-1 text-left"
      >
        <h4 class="text-xl font-semibold"> About {{ author.name }} </h4>
        <div class="flex items-center gap-2">
          <!-- <IBSocialBlock
            v-if="author.socials"
            size="24px"
            :socials="author.socials"
          /> -->
          <PrimeTag class="text-sm uppercase text-primary-600"> follow me </PrimeTag>
        </div>
        <p class="text-sm">
          {{ author.bio }}
        </p>
      </div>
    </div>
  </div>
</template>

<style scoped></style>

================
File: blog/article/BlogArticleHero.vue
================
<script setup lang="ts">
defineProps({
  article: {
    type: Object,
    required: true,
  },
})
</script>

<template>
  <div class="foreground relative flex w-full items-center justify-center pb-12 pt-16">
    <div class="flex w-full max-w-[1140px] flex-col">
      <!-- <IBBreadcrumbs class="px-4 py-10" /> -->
      <!-- Update image handling for Nuxt Content -->
      <BlogMedia
        v-if="article.cover?.url"
        :url="article.cover.url"
        :alt="article.cover.alternativeText || article.title"
        :width="article.cover.width"
        :height="article.cover.height"
        class="relative md:rounded-md"
      />
      <div
        class="flex w-full flex-col items-start justify-between gap-12 rounded-md p-3 md:flex-row-reverse"
      >
        <div class="flex flex-wrap gap-4">
          <PrimeTag
            v-if="article.category"
            :value="article.category.name"
            class="text-nowrap text-sm"
          />
          <PrimeTag
            v-for="tag in article.tags"
            :key="tag.name"
            :value="tag.name"
            class="text-nowrap text-sm"
          />
        </div>
        <BlogArticleAuthor
          :authors="[article.author]"
          :published-at="article.date || article.publishedAt"
        />
      </div>
      <div
        class="padded-x relative z-10 mx-auto flex w-full max-w-[740px] flex-col items-start gap-8 rounded-md pt-8"
      >
        <h1 class="font-[Oswald] text-4xl font-semibold lg:text-center xl:text-5xl">
          {{ article.title }}
        </h1>
        <div class="border-color w-full rounded-md border p-4 xl:p-8 bg-primary-950">
          <p class="text-xl">
            {{ article.description }}
          </p>
        </div>
      </div>
    </div>
  </div>
</template>

<style scoped></style>

================
File: blog/article/BlogArticleInfinateScroll.client.vue
================
<template>
  <div ref="sentinel" />
</template>

<script setup lang="ts">
// Infinate Post Scroll
const sentinel = ref<HTMLElement | null>(null)

// Trigger emit when sentinel is in view
const emit = defineEmits(['infinate-trigger'])

watchEffect((onCleanup) => {
  if (!sentinel.value) {
    // The sentinel element is not yet in the DOM.
    return
  }

  const options = {
    root: null,
    rootMargin: '0px',
    threshold: 1.0,
  }

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        emit('infinate-trigger')
      }
    })
  }, options)

  observer.observe(sentinel.value)

  // Remove Sentinel On UnMounted
  onCleanup(() => {
    if (observer && sentinel.value) {
      observer.unobserve(sentinel.value)
    }
  })
})
</script>

<style scoped></style>

================
File: blog/article/BlogArticleShare.vue
================
<template>
  <div class="flex w-full items-center justify-start gap-2 py-12">
    <p>Share</p>
    <PrimeButton
      v-for="platform in socialPlatforms"
      :key="platform.name"
      as="a"
      :href="platform.url"
      :aria-label="`Share article on ${platform.name}`"
      target="_blank"
      class="p-2"
    >
      <Icon
        :name="platform.icon"
        class="inline-block"
        size="24px"
      />
    </PrimeButton>
  </div>
</template>

<script setup lang="ts">
const p = defineProps({
  shareText: {
    type: String,
    default: 'Check out this article!',
  },
  summary: {
    type: String,
    default: '',
  },
  link: {
    type: String,
    required: true,
  },
})

const currentUrl = ref()
const socialPlatforms = ref([] as any[])
onMounted(() => {
  if (window) {
    currentUrl.value = encodeURIComponent(window.location.href)
    socialPlatforms.value = [
      {
        name: 'Twitter',
        icon: 'mdi:twitter',
        url: `https://twitter.com/intent/tweet?url=${currentUrl.value}&text=${shareTextEncoded.value}`,
      },
      {
        name: 'Email',
        icon: 'mdi:email',
        url: `mailto:?subject=${shareTextEncoded.value}&body=${currentUrl.value}`,
      },
    ]
  }
})
const shareTextEncoded = computed(() => encodeURIComponent(p.shareText))
</script>

<style scoped></style>

================
File: blog/card/BlogCard.vue
================
<script setup lang="ts">
import { useDateFormat } from '@vueuse/core'
import { useBlogHelpers } from '~/composables/useBlogHelpers'

const props = defineProps({
  article: {
    type: Object,
    required: true,
  },
})

const { getArticleUrl } = useBlogHelpers()

// Get a formatted date from the article
const formattedDate = computed(() => {
  const dateStr = props.article.date || props.article.publishedAt
  return dateStr ? useDateFormat(dateStr, 'DD MMM YYYY').value : ''
})

// Calculate reading time
const readingTime = computed(() => {
  if (!props.article.body?.children) return '1 min read'

  // Extract text content from the article body
  const text = JSON.stringify(props.article.body)

  // Average reading speed: 200 words per minute
  const words = text.trim().split(/\s+/).length
  const minutes = Math.ceil(words / 200)

  return `${minutes} min read`
})
</script>

<template>
  <PrimeCard v-if="article">
    <!-- Card header with image -->
    <template #header>
      <BlogCatTag
        v-if="article.tags"
        :tags="article.tags"
        :category="article.category"
        class="p-4"
      />
      <BlogMedia
        v-if="article.cover?.url"
        :url="article.cover.url"
        :alt="article.cover.alternativeText || article.title"
        :width="400"
        :height="300"
        class="aspect-video w-full object-cover"
      />
      <div
        v-else
        class="aspect-video w-full bg-gray-200"
      />
    </template>

    <!-- Card title with link -->
    <template #title>
      <NuxtLink :to="getArticleUrl(article)">
        <h3 class="text-xl font-bold lg:text-xl">
          {{ article.title }}
        </h3>
      </NuxtLink>
    </template>

    <!-- Card metadata -->
    <template #subtitle>
      <div class="flex flex-row gap-2 text-sm justify-between">
        <p class="text-primary">
          {{ formattedDate }}
        </p>
        <div class="flex items-center gap-1">
          <Icon
            name="i-lucide-clock"
            class="w-4 h-4"
          />
          <span>{{ readingTime }}</span>
        </div>
      </div>
    </template>

    <!-- Card content -->
    <template #content>
      <div class="flex w-full flex-col items-start justify-center gap-2">
        <p class="text-sm">
          {{ article.description }}
        </p>
      </div>
    </template>

    <!-- Card footer -->
    <template #footer>
      <div class="flex w-full justify-end">
        <NuxtLink :to="getArticleUrl(article)">
          <PrimeButton outlined> Read More </PrimeButton>
        </NuxtLink>
      </div>
    </template>
  </PrimeCard>
</template>

================
File: blog/card/BlogCardSkeleton.vue
================
<template>
  <div
    class="relative w-full h-full md:rounded-md border border-color cursor-pointer p-4 gap-4 flex flex-col overflow-hidden background"
  >
    <!-- BlogCatTag Skeleton -->
    <div class="flex gap-2 w-full mb-4 flex-wrap">
      <div class="w-24 h-5 foreground rounded mb-2" />
      <!-- Category Badge -->
      <div class="w-16 h-5 foreground rounded mb-2" />
      <!-- Tag Badge 1 -->
      <div class="w-20 h-5 foreground rounded mb-2" />
      <!-- Tag Badge 2 -->
    </div>

    <!-- NuxtImg Skeleton -->
    <div class="rounded-md w-full h-48 foreground mb-4" />

    <div class="flex flex-col gap-2 items-start w-full p-2 xl:p-4 justify-center">
      <!-- article.title Skeleton -->
      <div class="h-6 w-3/4 foreground mb-2 rounded" />

      <!-- BlogAuthor Skeleton -->
      <div class="flex flex-row gap-2 lg:gap-3 justify-center items-center">
        <div class="w-32 h-5 foreground rounded" />
        <!-- Author Name 1 -->
        <div class="w-16 h-5 foreground rounded ml-2" />
        <!-- Date -->
      </div>

      <!-- article.description Skeleton -->
      <div class="h-5 w-full foreground rounded mt-2" />
    </div>
  </div>
</template>

<script setup lang="ts"></script>

================
File: blog/BlogActions.vue
================
<template>
  <div>
    <div class="wrapper p-4 xl:p-8 flex gap-4">
      <BlogFilter />
      <BlogSearch
        button-label="Search"
        placeholder="Search all blogs..."
        :result-limit="10"
      />
    </div>
  </div>
</template>

<script setup lang="ts"></script>

<style scoped></style>

================
File: blog/BlogAdFloat.client.vue
================
<template>
  <div class="lg:sticky top-24">
    <LandingGlass
      v-if="adVisible"
      hover-effect="glow"
      glow-color="purple"
      gradient="mixed"
      intensity="low"
      interactive
      isolate-content
    >
      <div class="flex flex-shrink-0 items-center justify-start gap-2 p-2 pb-0">
        <div class="background rounded-full p-1">
          <IBImage
            :img="{
              src: 'images/team/shweta-kulkarni.jpg',
              alt: 'Shweta Kulkarni is the CEO / Founder of AstronEra',
              width: '60',
              height: '60',
            }"
            class="rounded-full"
          />
        </div>
        <h3 class="text-2xl font-semibold"> Hi 👋, I'm Shweta </h3>
      </div>
      <div class="pt-8 space-y-8">
        <div class="flex w-full flex-col items-start justify-start gap-4">
          <span class="text-base">
            We're showcasing the amazing people and companies pushing astronomy and space
            exploration forward.
            <strong> If this sounds like you or someone you know, let's connect! </strong>
          </span>
        </div>
        <div>
          <NuxtLink
            to="mailto:connectus@astronera.org"
            aria-label="Reach out to Shweta via email"
            target="_blank"
          >
            <PrimeButton severity="secondary"> Reach Out </PrimeButton>
          </NuxtLink>
        </div>
      </div>
    </LandingGlass>
  </div>
</template>

<script setup lang="ts">
const hideAd = ref(false)

const { width } = useWindowSize()
const adVisible = computed(() => !hideAd.value || width.value > 1024)

const toggleAd = () => {
  hideAd.value = !hideAd.value
  console.log('hideAd', hideAd.value)
}
</script>

<style scoped></style>

================
File: blog/BlogCatTag.vue
================
<script setup lang="ts">
import { useChangeCase } from '@vueuse/integrations/useChangeCase'
import type { PropType } from 'vue'

// Define types based on Content collection schema
type ArticleTagT = {
  name: string
}

type ArticleCategoryT = {
  name: string
  slug: string
}

defineProps({
  tags: {
    type: Array as PropType<ArticleTagT[]>,
    required: false,
    default: () => [],
  },
  category: {
    type: Object as PropType<ArticleCategoryT>,
    required: false,
    default: null,
  },
})

const badgeColor = (categorySlug: string): string => {
  switch (categorySlug) {
    case 'people-of-space':
      return 'primary'
    case 'sustainable-development':
      return 'amber'
    case 'space-exploration':
      return 'purple'
    case 'dark-sky-conservation':
      return 'blue'
    default:
      return 'secondary'
  }
}
</script>

<template>
  <div>
    <div class="flex flex-wrap gap-4">
      <PrimeTag
        v-if="category && category.name"
        :value="useChangeCase(category.name, 'capitalCase').value"
        :class="badgeColor(category.slug)"
      />
      <PrimeTag
        v-for="tag in tags"
        :key="tag.name"
        :value="tag.name"
        severity="contrast"
      />
    </div>
  </div>
</template>

<style scoped></style>

================
File: blog/BlogFilter.vue
================
<script setup lang="ts">
import { useChangeCase } from '@vueuse/integrations/useChangeCase'
import { CATEGORIES } from '~/types/articles'
import type { ArticleCategoriesT } from '~/types/articles'

const selectedCategory = ref<ArticleCategoriesT>(
  String(useRoute().params.category) as ArticleCategoriesT,
)
const formatCategory = (cat: string) => useChangeCase(cat, 'capitalCase').value
</script>

<template>
  <div class="flex gap-2">
    <NuxtLink
      v-for="cat in CATEGORIES"
      :key="`astronera-blog-${cat}`"
      :to="`/blog/category/${cat}`"
    >
      <PrimeButton
        color="primary"
        :outlined="selectedCategory === cat ? false : true"
        :label="formatCategory(cat)"
        size="small"
        class="cursor-pointer"
      />
    </NuxtLink>
  </div>
</template>

================
File: blog/BlogMedia.vue
================
<script setup lang="ts">
import { computed, defineProps } from 'vue'

interface BlogMediaProps {
  url: string
  alt?: string
  width?: number
  height?: number
}

// Props
const props = defineProps<BlogMediaProps>()

// Check if URL is YouTube or Vimeo
const videoType = computed(() => {
  if (!props.url) return null
  if (props.url.includes('youtube.com') || props.url.includes('youtu.be')) return 'youtube'
  if (props.url.includes('vimeo.com')) return 'vimeo'
  return null
})

// Create embeddable URL
const embedUrl = computed(() => {
  if (!videoType.value) return props.url

  if (videoType.value === 'youtube') {
    const videoId = props.url.split('v=')[1] || ''
    return `https://www.youtube.com/embed/${videoId}`
  }

  if (videoType.value === 'vimeo') {
    const videoId = props.url.split('/').pop() || ''
    return `https://player.vimeo.com/video/${videoId}`
  }

  return props.url
})
</script>

<template>
  <div class="aspect-video w-full">
    <!-- Video (YouTube or Vimeo) -->
    <iframe
      v-if="videoType"
      :src="embedUrl"
      frameborder="0"
      allowfullscreen
      class="h-full w-full object-cover"
    />
    <!-- Image -->
    <NuxtImg
      v-else
      :src="url.replace('/uploads/', '')"
      :alt="alt || 'Blog Media'"
      :width="width"
      :height="height"
      class="h-full w-full object-cover"
    />
  </div>
</template>

================
File: blog/BlogNews.vue
================
<script setup lang="ts">
import type { NewsListGovernmentT } from '@/types/news'

const p = defineProps({
  newsCategory: {
    type: String as PropType<NewsListGovernmentT | 'all'>,
    required: true,
  },
})

const filterBy = computed(() =>
  p.newsCategory === 'all' ?
    null :
    {
      columnName: 'source',
      operator: 'eq',
      value: p.newsCategory,
    },
)

const { data: spaceNews, error } = await useAsyncData(
  'blog-news-cards',
  async () =>
    await $fetch('/api/news/select/cards', {
      method: 'GET',
      params: {
        filterBy: filterBy.value,
        dto: 'select:news:card',
        limit: 6,
      },
    }),
)

console.log('dataReturned', spaceNews, error)

if (error.value) {
  console.error(error.value)
}
</script>

<template>
  <div>
    <h2 class="decoration-primary-500 pb-20 text-3xl font-bold underline underline-offset-8">
      LATEST NEWS
    </h2>
    <div
      v-if="spaceNews?.data"
      class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3 lg:gap-8"
    >
      <NewsCard
        v-for="(news, i) in spaceNews.data"
        :key="`news-${news.source}-${i}`"
        :news="news"
      />
    </div>
    <NuxtLink
      class="hover:text-primary-500 flex w-full items-center justify-end gap-2 pt-20"
      to="/register"
    >
      <h2 class="decoration-primary-500 text-end text-3xl font-bold underline underline-offset-8">
        JOIN FREE FOR MORE
      </h2>
      <Icon
        name="mdi:chevron-right"
        size="32px"
      />
    </NuxtLink>
  </div>
</template>

<style scoped></style>

================
File: blog/BlogPostCaption.vue
================
<template>
  <div class="pt-2">
    <p class="p-2 text-sm italic text-gray-400 text-center">
      <slot />
    </p>
  </div>
</template>

<script setup lang="ts"></script>

<style scoped></style>

================
File: blog/BlogRelatedPosts.vue
================
<script setup lang="ts">
const props = defineProps({
  article: {
    type: Object,
    required: true,
  },
})

const { data: relatedPosts } = await useAsyncData(`related-${props.article.id}`, async () => {
  // Try to find related posts by category
  if (props.article.category?.slug) {
    const byCategory = await queryCollection('blog')
      .where('category.slug', '=', props.article.category.slug)
      .where('path', '<>', props.article.path)
      .limit(3)
      .all()

    if (byCategory.length >= 3) {
      return byCategory
    }
  }

  // If no 3 posts with same category, try finding by tags
  if (props.article.tags?.length) {
    // Extract tag names
    const tagNames = props.article.tags.map((tag) => tag.name)

    // This is a simplified approach - in a real SQL DB you'd use something
    // like an IN operator, but for our simplified query we'll just get
    // some recent posts
    const recentPosts = await queryCollection('blog')
      .where('path', '<>', props.article.path)
      .order('date', 'DESC')
      .limit(10)
      .all()

    // Then manually filter for tag matches
    const withMatchingTags = recentPosts
      .filter((post) => {
        if (!post.tags?.length) return false
        const postTagNames = post.tags.map((tag) => tag.name)
        return postTagNames.some((tag) => tagNames.includes(tag))
      })
      .slice(0, 3)

    if (withMatchingTags.length > 0) {
      return withMatchingTags
    }
  }

  // Fallback to recent posts
  return queryCollection('blog')
    .where('path', '<>', props.article.path)
    .order('date', 'DESC')
    .limit(3)
    .all()
})
</script>

<template>
  <div
    v-if="relatedPosts?.length"
    class="mt-16"
  >
    <h2 class="text-2xl font-bold mb-6 text-center">You Might Also Like</h2>

    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      <BlogCard
        v-for="post in relatedPosts"
        :key="post.id"
        :article="post"
      />
    </div>
  </div>
</template>

================
File: blog/BlogSearch.vue
================
<script setup lang="ts">
import { useDebounceFn, useEventListener } from '@vueuse/core'
import Fuse from 'fuse.js'
import type { IFuseOptions } from 'fuse.js'

interface Section {
  id: string
  title: string
  content: string
  [key: string]: any // Allow additional properties for flexibility
}

// Define collection types to support blog and/or global search
type CollectionName = string | string[]

const props = withDefaults(
  defineProps<{
    placeholder?: string
    resultLimit?: number
    debounceMs?: number
    fuseOptions?: IFuseOptions<Section>
    collection?: CollectionName // Collection(s) to search in
    buttonLabel?: string // Customizable button label
    autoNavigate?: boolean // Whether to automatically navigate on result selection
    buttonClass?: string // Custom button class
  }>(),
  {
    placeholder: 'Search blog...',
    resultLimit: 5,
    debounceMs: 300,
    collection: 'blog',
    buttonLabel: 'Search Blog',
    autoNavigate: true,
    buttonClass:
      'flex items-center gap-2 text-sm bg-primary-900 hover:bg-primary-800 text-white px-4 py-2 rounded-full',
  },
)

const emit = defineEmits<{
  search: [query: string]
  select: [result: Section]
}>()

// No need for default computed values as we're using withDefaults now

// States
const isShowOverlay = ref(false)
const resultLimit = ref(props.resultLimit)
const searchQuery = ref('')
const searchResults = ref<Section[]>([])
const isLoading = ref(false)

// Fetch sections from one or multiple collections
const fetchSections = async () => {
  try {
    // Handle both single collection and multiple collections
    if (Array.isArray(props.collection)) {
      // Fetch from multiple collections
      const results = await Promise.all(
        props.collection.map((col) => queryCollectionSearchSections(col)),
      )
      return results.flat() // Combine all results
    } else {
      // Fetch from single collection
      return await queryCollectionSearchSections(props.collection)
    }
  } catch (error) {
    console.error('Error fetching sections:', error)
    return []
  }
}

// Debounced search function using VueUse
const debouncedSearch = useDebounceFn(async () => {
  if (!searchQuery.value || searchQuery.value.length < 2) {
    searchResults.value = []
    return
  }

  isLoading.value = true
  emit('search', searchQuery.value)

  try {
    const sections = await fetchSections()
    const query = searchQuery.value.toLowerCase()

    // Use Fuse.js for better search results
    const fuse = new Fuse(sections, {
      keys: ['title', 'content'],
      threshold: 0.3,
      ...props.fuseOptions,
    })

    const results = fuse.search(query)
    searchResults.value = results.map((r) => r.item).slice(0, resultLimit.value)
  } catch (error) {
    console.error('Search error:', error)
    searchResults.value = []
  } finally {
    isLoading.value = false
  }
}, props.debounceMs)

// Watch for changes to search query
watch(searchQuery, () => {
  debouncedSearch()
})

// Close search on escape key
useEventListener('keydown', (e) => {
  if (e.key === 'Escape') {
    isShowOverlay.value = false
  }
})

// Close search on route change
watch(
  () => useRoute().fullPath,
  () => {
    isShowOverlay.value = false
  },
)

// Handle result selection
const handleResultSelect = (result: Section) => {
  emit('select', result)

  // Auto-navigate if no listeners for select event and ID is valid
  const hasSelectListeners = useEventListeners().select?.length > 0
  if (!hasSelectListeners && result.id) {
    navigateTo(result.id)
  }

  isShowOverlay.value = false
}

// Simple utility to check if emit has listeners
function useEventListeners() {
  // @ts-ignore - Access internal _events property
  return typeof emit === 'function' && emit.fns ? emit.fns : {}
}
</script>

<template>
  <div>
    <!-- Search Button -->
    <button
      :class="buttonClass"
      @click="isShowOverlay = true"
    >
      <Icon
        name="i-lucide-search"
        size="20"
      />
      <span>{{ buttonLabel }}</span>
    </button>

    <!-- Search Overlay -->
    <Teleport to="body">
      <div
        v-if="isShowOverlay"
        class="fixed inset-0 bg-black bg-opacity-75 z-50 flex items-start justify-center pt-20"
        @click.self="isShowOverlay = false"
      >
        <div class="bg-primary-950 rounded-lg w-full max-w-2xl shadow-lg overflow-hidden">
          <!-- Search Input -->
          <div class="p-4 border-b border-primary-800">
            <div class="relative">
              <input
                v-model="searchQuery"
                type="text"
                :placeholder="props.placeholder"
                class="w-full bg-primary-900 text-white border-none rounded-md px-4 py-3 pl-10 focus:ring-2 focus:ring-primary-600 focus:outline-none"
                autofocus
                @keyup.escape="isShowOverlay = false"
              />
              <Icon
                name="i-lucide-search"
                class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5"
              />
            </div>
          </div>

          <!-- Search Results -->
          <div class="max-h-[70vh] overflow-y-auto">
            <div
              v-if="isLoading"
              class="p-6 text-center text-gray-400"
            >
              <Icon
                name="i-lucide-loader"
                class="w-6 h-6 animate-spin mx-auto"
              />
              <p class="mt-2">Searching...</p>
            </div>

            <div
              v-else-if="searchQuery && !searchResults.length"
              class="p-6 text-center text-gray-400"
            >
              <Icon
                name="i-lucide-search-x"
                class="w-6 h-6 mx-auto"
              />
              <p class="mt-2">No results found</p>
            </div>

            <div
              v-else-if="!searchQuery"
              class="p-6 text-center text-gray-400"
            >
              <Icon
                name="i-lucide-search"
                class="w-6 h-6 mx-auto"
              />
              <p class="mt-2">Type to search</p>
            </div>

            <div
              v-else
              class="divide-y divide-primary-800"
            >
              <button
                v-for="result in searchResults"
                :key="result.id"
                class="block w-full text-left p-4 hover:bg-primary-900 transition"
                @click="handleResultSelect(result)"
              >
                <h3 class="font-medium text-white">{{ result.title }}</h3>
                <p class="mt-1 text-sm text-gray-400 line-clamp-2">
                  {{ result.content?.substring(0, 150) }}...
                </p>
              </button>
            </div>
          </div>

          <!-- Footer -->
          <div class="p-3 bg-primary-900 text-center text-xs text-gray-400">
            Press <kbd class="px-2 py-1 bg-primary-800 rounded">ESC</kbd> to close
          </div>
        </div>
      </div>
    </Teleport>
  </div>
</template>

================
File: blog/BlogShowcase.vue
================
<script setup lang="ts">
import { ref, computed, watchEffect } from 'vue'
import type { PropType } from 'vue'
import type { ArticleCategoriesT, ArticleCardT } from '~/types/articles'

const message = ref('')

const props = defineProps({
  articleCategory: { type: String as PropType<ArticleCategoriesT>, required: true },
})

const articlesShowcase = ref<ArticleCardT[]>([])
const category = computed(() => props.articleCategory)
const haveArticles = computed(() => articlesShowcase.value.length > 0)
const cmsURL = String(useRuntimeConfig().public.cmsURL ?? 'http://localhost:1337')

// !todo: update with new blog system
// const strapi = useStrapi(cmsURL)

// Fetch articles on server and client
const { data, error, status } = await useAsyncData(`blog-showcase-${category.value}`, async () => {
  const params: any = {
    pagination: { pageSize: 3, page: 1 },
    sort: ['publishedAt:desc'],
    filters: {},
    populate: {
      cover: { populate: '*' },
      category: { fields: ['name', 'slug'] },
      author: { fields: ['name', 'bio'] },
    },
  }

  if (category.value !== 'all') {
    params.filters['category'] = { slug: { $eq: category.value } }
  }

  // !todo: update with new blog system
  // const response = await strapi.find<any>('articles', params)

  // if (response && response.data && response.data.length > 0) {
  //   return response.data
  // } else {
  //   message.value = 'No articles loaded...'
  //   return []
  // }
})

if (error.value) {
  console.error('Fetch Articles Error:', error.value)
}

watchEffect(() => {
  if (data.value) {
    articlesShowcase.value = data.value
  }
})
</script>

<template>
  <div>
    <div class="space-y-6 lg:space-y-12">
      <slot name="title" />
      <p
        v-if="message.length"
        class="rounded-md bg-red-950/70 p-4 text-sm lg:text-base"
      >
        {{ message }}
      </p>
      <div
        v-if="haveArticles"
        class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3 lg:gap-8"
      >
        <BlogCard
          v-for="article in articlesShowcase"
          :key="`blog-showcase-${article.id}`"
          :article="article"
        />
        <ClientOnly>
          <BlogCardSkeleton v-show="status === 'pending'" />
          <BlogCardSkeleton v-show="status === 'pending'" />
          <BlogCardSkeleton v-show="status === 'pending'" />
        </ClientOnly>
      </div>
      <div class="flex justify-end">
        <slot />
      </div>
    </div>
  </div>
</template>

<style scoped></style>

================
File: common/CommonHero.vue
================
<script setup lang="ts">
import type { TitleType, ImageType } from '../../../../layers/base/types/content'

defineProps<{
  title: TitleType
  img: ImageType
  position: string
}>()
</script>

<template>
  <div>
    <IBImageHero
      :img="img"
      :title="title"
      :object-position="`object-${position}`"
      fit="cover"
    >
      <div class="flex flex-col gap-4 pb-6">
        <slot />

        <!-- Add the actions slot below the default slot -->
      </div>
    </IBImageHero>
    <div
      v-if="$slots.actions"
      class="mt-4 flex justify-center"
    >
      <slot name="actions" />
    </div>
  </div>
</template>

================
File: common/CommonTitle.vue
================
<template>
  <div :class="`flex flex-col gap-4 lg:gap-6 text-${alignment} lg:max-w-lg`">
    <p
      v-if="title.label"
      class="text-sm font-bold uppercase"
      :class="labelWhite ? 'text-white' : 'text-primary-700'"
    >
      {{ title.label }}
    </p>
    <h3
      class="text-2xl lg:text-4xl font-bold"
      :class="isCta ? 'underline decoration-primary-900' : ''"
    >
      {{ title.main }}
    </h3>
    <h5
      v-if="title.subtitle"
      class="text-base"
    >
      {{ title.subtitle }}
    </h5>
    <div
      v-if="slots.default"
      class="space-y-6"
    >
      <slot />
    </div>
  </div>
</template>

<script setup lang="ts">
import type { TitleType } from '../../../base/types/content'

defineProps({
  title: {
    type: Object as PropType<TitleType>,
    required: true,
  },
  alignment: {
    type: String,
    default: 'left',
  },
  isCta: {
    type: Boolean,
    default: false,
  },
  labelWhite: {
    type: Boolean,
    default: false,
  },
})

const slots = useSlots()
</script>

<style scoped></style>

================
File: conference/ConferenceAbout.vue
================
<script setup lang="ts">
const about = {
  title: {
    main: 'Uniting Stakeholders for the Preservation of Dark Skies and Astro-Tourism',
  },
}
const themes = {
  title: 'Key Themes',
  img: {
    src: 'conference/photos/IDSPAC23-shweta-and-participants.jpg',
    alt: 'Shweta Kulkarni talking to an audience about astronomy',
  },
  points: [
    'Satellite constellations and space debris impact on observations',
    'Astronomy in everyday life: bridging science and culture',
    'Controlling light pollution for enhanced astronomical visibility',
    'Advancing astronomy research and outreach initiatives',
    'Art and astronomy: unveiling creative cosmos connections',
  ],
}
</script>

<template>
  <div>
    <div class="grid grid-cols-1 items-start gap-6 lg:grid-cols-2 xl:gap-12">
      <CommonTitle
        class="col-start-1"
        :title="about.title"
      >
        <p>
          The International Dark Sky Preservation and Astro-Tourism Conference represented a
          groundbreaking event in India, shedding light on the critical importance of preserving
          Dark Skies and harnessing the immense potential of Astro-Tourism.
        </p>
        <p>
          The conference was held from 24th to 27th November 2023, encompassing a diverse range of
          plenary and independent talks delivered by students, young researchers, professionals, and
          entrepreneurs. Additionally, the conference facilitated interactive round table
          discussions, workshops, and working groups to encourage meaningful engagement and
          collaboration.
        </p>
      </CommonTitle>
      <div class="col-start-1 flex flex-col gap-2 lg:col-start-2">
        <p>
          The inception of this conference can be traced back to the transformative experience of
          Ms. Shweta Kulkarni, the esteemed founder and Director of AstronEra, during her visit to
          the Exmoor National Park in the United Kingdom in 2016. Subsequently, her visionary ideas
          and insights were meticulously distilled into a comprehensive proposal which in 2023 was
          accepted and funded by the Department of Science and Technology, Government of India and
          supported by the International Astronomical Union and its Office of Astronomy Development.
        </p>
        <p>
          The International Dark Sky Preservation and Astro-Tourism Conference served as a
          significant milestone in the ongoing efforts to raise awareness, foster scientific
          research, and promote sustainable practices in preserving the pristine darkness of our
          skies. By bringing together a diverse array of stakeholders, the conference provided a
          platform for exchanging knowledge, sharing best practices, and cultivating innovative
          solutions.
        </p>
        <p>
          It is hoped that the outcomes of this conference will serve as a catalyst for future
          endeavours in safeguarding our dark skies and harnessing the potential of Astro-Tourism
          for the benefit of present and future generations.
        </p>
      </div>
      <div
        class="row-start-3 grid grid-cols-1 gap-6 lg:col-span-2 lg:row-start-2 lg:grid-cols-2 xl:gap-12"
      >
        <IBImage
          :img="{
            src: themes.img.src,
            alt: themes.img.alt,
          }"
          class="w-full rounded-md"
        />
        <div class="flex w-full flex-col justify-center rounded-md pb-3">
          <p class="pb-4 text-sm font-bold uppercase text-primary-700">
            {{ themes.title }}
          </p>
          <ul>
            <li
              v-for="(point, i2) in themes.points"
              :key="`about-conference-point-${i2}`"
              class="ml-4 list-disc pb-2"
            >
              {{ point }}
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</template>

================
File: conference/ConferenceChairperson.vue
================
<script setup lang="ts">
import type { SpeakerType } from '@/types/conference'

defineProps({
  hosts: {
    type: Object as PropType<SpeakerType[]>,
    required: true,
  },
})
</script>

<template>
  <div class="grid gap-8 lg:grid-cols-2">
    <PrimeCard
      v-for="(host, i) in hosts"
      :key="`conference-host-${i}`"
      :pt="{
        root: 'flex flex-col md:flex-row w-full h-full overflow-hidden relative',
        body: ' background',
      }"
      :pt-options="{ mergeProps: true, mergeSections: true }"
    >
      <template #header>
        <div class="absolute left-0 top-0 z-10 hidden h-full w-full bg-black/10 visible" />
        <IBImage
          :img="{
            src: `conference/speakers/${host.avatar}.jpg`,
            alt: `${host.given_name} is the chairperson at the Dark Sky Conservation India Conference`,
            width: '350',
            height: '350',
            loading: 'lazy',
            quality: '80',
            format: 'webp',
          }"
          class="aspect-square h-full w-full min-w-[180px] object-cover grayscale-[20%]"
        />
      </template>
      <template #content>
        <div class="flex flex-col justify-between gap-4">
          <div class="flex flex-col gap-4 text-sm">
            <h3 class="text-2xl font-semibold"> {{ host.given_name }} {{ host.surname }} </h3>
            <p class="flex items-center gap-2 font-semibold text-primary-600">
              <Icon
                name="mdi:account"
                class="flex-shrink-0"
                size="24px"
              />
              {{ host.professional_title }}
            </p>
            <p class="h-auto text-sm">
              {{ host.bio }}
            </p>
          </div>
        </div>
      </template>
    </PrimeCard>
  </div>
</template>

<style scoped></style>

================
File: conference/ConferenceScheduleTabs.vue
================
<script setup lang="ts">
function convertISTtoLocal(day: number, time: { start: string; end: string }) {
  const start = `2023-11-${day}T${time.start}:00+05:30` // '+05:30' is the offset for IST
  const end = `2023-11-${day}T${time.end}:00+05:30` // '+05:30' is the offset for IST

  // Creating a Date object
  const startIST = new Date(start)
  const endIST = new Date(end)

  // Converting to local time string
  const startLocal = startIST.toLocaleTimeString([], {
    hour: '2-digit',
    minute: '2-digit',
    hour12: false,
  })

  const endLocal = endIST.toLocaleTimeString([], {
    hour: '2-digit',
    minute: '2-digit',
    hour12: false,
  })

  return `${startLocal} - ${endLocal}`
}

const timezone = computed(() => Intl.DateTimeFormat().resolvedOptions().timeZone)

const schedule = [
  {
    slot: 'friday',
    value: '0',
    label: 'Friday',
    day: 24,
    items: [
      {
        icon: 'mdi:calendar-clock',
        topic: 'Registration at Manu Allaya',
        speaker: '',
        time: { start: '09:00', end: '11:00' },
        class: 'bg-primary-950',
      },
      {
        icon: 'material-symbols:breakfast-dining',
        topic: 'Complimentary Breakfast',
        speaker: '',
        time: { start: '09:00', end: '10:00' },
        class: 'bg-primary-950',
      },
      {
        icon: 'material-symbols:line-end-arrow-rounded',
        topic: 'Opening Ceremony / Inauguration',
        speaker: 'Ruchira Huchgol',
        time: { start: '11:00', end: '11:20' },
      },
      {
        online: true,
        icon: 'mdi:microphone',
        topic:
          'Climate Change & Clean Energy (C3E) Division, Department of Science and Technolohgy, Government of India',
        speaker: 'Dr. Anita Gupta',
        time: { start: '11:30', end: '12:00' },
      },
      {
        online: true,
        icon: 'mdi:microphone',
        topic:
          'Astronomy and Satellite Constellations: Pathways Forward for Light Pollution from Space',
        speaker: 'Dr. Constance (Connie) Walker',
        time: { start: '12:00', end: '12:30' },
      },
      {
        icon: 'mdi:silverware-fork-knife',
        topic: 'Complimentary Lunch + Check In',
        speaker: '',
        time: { start: '12:30', end: '13:30' },
        class: 'bg-primary-950',
      },
      {
        icon: 'mdi:microphone',
        online: true,
        topic: 'Harnessing Dark Skies for Socioeconomic Development in Rural Areas',
        speaker: 'Samyukta Manikumar',
        time: { start: '13:30', end: '14:00' },
      },
      {
        icon: 'material-symbols:group-work',
        topic: 'Round Table Activity',
        speaker: 'Ruchira Huchgol',
        time: { start: '14:00', end: '14:30' },
      },
      {
        online: false,
        icon: 'mdi:microphone',
        topic: 'Intruders in the Dark Sky: The Megaconstellation Crisiss',
        speaker: 'Upasana Dasgupta',
        time: { start: '14:30', end: '15:00' },
      },
      {
        icon: 'material-symbols:group-work',
        topic: 'Round Table Activity',
        speaker: 'Ruchira Huchgol',
        time: { start: '15:00', end: '15:30' },
      },
      {
        online: true,
        icon: 'mdi:microphone',
        topic: "Astronomy's Impact on Sustainability",
        speaker: 'María Alejandra Díaz Teodori',
        time: { start: '15:30', end: '16:00' },
      },
      {
        icon: 'mdi:coffee',
        topic: 'Complimentary Tea',
        speaker: '',
        time: { start: '16:00', end: '16:30' },
        class: 'bg-primary-950',
      },
      {
        icon: 'mdi:microphone',
        online: false,
        topic: 'Mental Health, Arts and Astronomy',
        speaker: 'Aishwarya Khade',
        time: { start: '16:30', end: '17:00' },
      },
      {
        online: false,
        icon: 'material-symbols:group-work',
        topic: 'Workshop',
        speaker: 'Aishwarya Khade',
        time: { start: '17:00', end: '18:00' },
      },
      {
        online: false,
        icon: 'material-symbols:line-end-circle',
        topic: 'Closing remarks',
        speaker: 'Ruchira Huchgol',
        time: { start: '18:00', end: '18:10' },
      },
      {
        icon: 'material-symbols:alarm-add',
        topic: 'Free Time',
        speaker: '',
        time: { start: '18:10', end: '19:00' },
        class: 'bg-primary-950',
      },
      {
        icon: 'material-symbols:dark-mode',
        topic: 'Stargazing (Optional)',
        speaker: '',
        time: { start: '19:00', end: '21:30' },
        class: 'bg-primary-950',
      },
      {
        icon: 'material-symbols:celebration',
        topic: 'AstronEra 5 Year Celebration',
        speaker: '',
        time: { start: '19:00', end: '21:30' },
        class: 'bg-primary-950',
      },
      {
        icon: 'mdi:silverware-fork-knife',
        topic: 'Complimentary Dinner',
        speaker: '',
        time: { start: '20:30', end: '22:00' },
        class: 'bg-primary-950',
      },
    ],
  },
  {
    slot: 'saturday',
    label: 'Saturday',
    value: '1',
    day: 25,
    items: [
      {
        icon: 'material-symbols:breakfast-dining',
        topic: 'Complimentary Breakfast',
        speaker: '',
        time: { start: '09:00', end: '10:00' },
        class: 'bg-primary-950',
      },
      {
        icon: 'material-symbols:line-end-arrow-rounded',
        topic: 'Opening Remarks',
        speaker: 'Ruchira Huchgol',
        online: false,
        time: { start: '10:00', end: '10:20' },
      },
      {
        online: false,
        icon: 'mdi:microphone',
        topic: 'Sustainable Development through Astronomy: A Tribal Perspective',
        speaker: 'Dr. Kiran Kulkarni',
        time: { start: '10:20', end: '11:00' },
      },
      {
        online: false,
        icon: 'mdi:microphone',
        topic: 'The planetarium as a creative space',
        speaker: 'David Ault',
        time: { start: '11:00', end: '11:30' },
      },
      {
        online: false,
        icon: 'mdi:microphone',
        topic: 'Indian successors to the Indian Gamma-Ray Observatory(IGRO) Mission',
        speaker: 'Bhakti Shashikant Mithagri',
        time: { start: '11:30', end: '12:00' },
      },
      {
        online: false,
        icon: 'mdi:microphone',
        topic: 'The ancient science of space and agriculture for sustainability and harmony',
        speaker: 'Amshu CR',
        time: { start: '12:00', end: '12:30' },
      },
      {
        online: true,
        icon: 'mdi:microphone',
        topic: 'ASTROx Dark Sky: How to Integrate Astronomy Education into Interactive Classroom',
        speaker: 'Exodus Chun-Long Sit',
        time: { start: '12:30', end: '13:00' },
      },
      {
        icon: 'mdi:silverware-fork-knife',
        topic: 'Complimentary Lunch',
        speaker: '',
        time: { start: '13:00', end: '14:00' },
        class: 'bg-primary-950',
      },
      {
        online: false,
        icon: 'mdi:microphone',
        topic: 'Working group discussion',
        speaker: 'Ruchira, Shweta, Aishwarya',
        time: { start: '14:00', end: '15:00' },
      },
      {
        online: false,
        icon: 'mdi:microphone',
        topic: 'Stellar Education: Unveiling ISAAC',
        speaker: 'Dinesh Nisang',
        time: { start: '15:00', end: '15:30' },
      },
      {
        online: false,
        icon: 'mdi:microphone',
        topic: 'Round Table Activity',
        speaker: 'Ruchira Huchgol',
        time: { start: '15:30', end: '16:00' },
      },
      {
        icon: 'mdi:coffee',
        topic: 'Complimentary Tea',
        speaker: '',
        time: { start: '16:00', end: '16:30' },
        class: 'bg-primary-950',
      },
      {
        online: false,
        icon: 'material-symbols:line-end-circle',
        topic: 'Closing remarks',
        speaker: 'Ruchira Huchgol',
        time: { start: '16:30', end: '17:00' },
      },
      {
        icon: 'material-symbols:alarm-add',
        topic: 'Free Time',
        speaker: '',
        time: { start: '17:00', end: '19:00' },
        class: 'bg-primary-950',
      },
      {
        icon: 'material-symbols:dark-mode',
        topic: 'Stargazing (Optional)',
        speaker: '',
        time: { start: '19:00', end: '20:30' },
        class: 'bg-primary-950',
      },
      {
        icon: 'mdi:silverware-fork-knife',
        topic: 'Complimentary Dinner',
        speaker: '',
        time: { start: '20:30', end: '22:00' },
        class: 'bg-primary-950',
      },
    ],
  },
  {
    slot: 'sunday',
    label: 'Sunday',
    value: '2',
    day: 26,
    items: [
      {
        icon: 'material-symbols:breakfast-dining',
        topic: 'Complimentary Breakfast',
        speaker: '',
        time: { start: '08:30', end: '09:30' },
        class: 'bg-primary-950',
      },
      {
        online: false,
        icon: 'material-symbols:line-end-arrow-rounded',
        topic: 'Opening Remarks',
        speaker: 'Ruchira Huchgol',
        time: { start: '09:30', end: '09:40' },
      },
      {
        online: false,
        icon: 'mdi:microphone',
        topic: 'Skill Training in Astronomy for Income Generation',
        speaker: 'Shweta Kulkarni',
        time: { start: '09:40', end: '10:00' },
      },
      {
        online: false,
        icon: 'mdi:microphone',
        topic: 'Sustainable Development for Tribal Ladakhies through Astronomy',
        speaker: 'Sonam Wangchuk',
        time: { start: '10:00', end: '10:30' },
      },
      {
        online: true,
        icon: 'mdi:microphone',
        topic: 'Dark Skies and Bright Satellites',
        speaker: 'Dr. Priya Hasan',
        time: { start: '10:30', end: '11:00' },
      },
      {
        online: true,
        icon: 'mdi:microphone',
        topic:
          "Empowering Ghana's STEM Education: Bridging the Gap through Capacity Building in Astronomy Instrumentation",
        speaker: 'Albert Kuntu Forson ',
        time: { start: '11:00', end: '11:30' },
      },
      {
        online: true,
        icon: 'mdi:microphone',
        topic: 'Road to Sky',
        speaker: 'Hosien Khezri',
        time: { start: '11:30', end: '12:00' },
      },
      {
        online: false,
        icon: 'material-symbols:trophy-rounded',
        topic: 'Poster Winners Announcement',
        speaker: 'Ruchira Huchgol',
        time: { start: '12:00', end: '12:15' },
      },
      {
        online: false,
        icon: 'mdi:microphone',
        topic: 'Working group presentation',
        speaker: 'Ruchira, Shweta, Aishwarya',
        time: { start: '12:15', end: '13:00' },
      },
      {
        icon: 'mdi:silverware-fork-knife',
        topic: 'Complimentary Lunch',
        speaker: '',
        time: { start: '13:00', end: '14:00' },
        class: 'bg-primary-950',
      },
      {
        icon: 'material-symbols:group-work',
        speaker: 'Ruchira Huchgol',
        topic: 'Round Table Activity',
        time: { start: '14:00', end: '14:30' },
      },
      {
        online: false,
        icon: 'mdi:microphone',
        topic: 'Affordable Radio Astronomy Lab',
        speaker: 'Nadia Makhijani and Udhish Sharma',
        time: { start: '14:30', end: '15:00' },
      },
      {
        online: false,
        icon: 'mdi:microphone',
        topic: 'Light pollution: A Camouflaging pollution',
        speaker: 'Vedavrat Bedekar',
        time: { start: '15:00', end: '15:30' },
      },
      {
        online: false,
        icon: 'mdi:microphone',
        topic: 'Lighting for Dark Skies',
        speaker: 'Neethu Susan George',
        time: { start: '15:30', end: '16:00' },
      },
      {
        icon: 'mdi:coffee',
        topic: 'Complimentary Tea',
        speaker: '',
        time: { start: '16:00', end: '16:15' },
        class: 'bg-primary-950',
      },
      {
        online: false,
        icon: 'material-symbols:group-work',
        topic: 'Panel Discussion',
        speaker: 'Shweta Kulkarni',
        time: { start: '16:15', end: '16:45' },
      },
      {
        online: false,
        icon: 'material-symbols:line-end-circle',
        topic: 'Closing Remarks',
        speaker: 'Ruchira Huchgol',
        time: { start: '16:45', end: '17:00' },
      },
      {
        icon: 'material-symbols:alarm-add',
        topic: 'Free Time',
        speaker: '',
        time: { start: '17:00', end: '18:00' },
        class: 'bg-primary-950',
      },
      {
        icon: 'material-symbols:local-fire-department-rounded',
        topic: 'Fireside Networking / Cultural Performance',
        speaker: '',
        time: { start: '18:00', end: '19:00' },
        class: 'bg-primary-950',
      },
      {
        icon: 'material-symbols:dark-mode',
        topic: 'Stargazing (Optional)',
        speaker: '',
        time: { start: '19:00', end: '20:00' },
        class: 'bg-primary-950',
      },
      {
        icon: 'mdi:silverware-fork-knife',
        topic: 'Complimentary Dinner',
        speaker: '',
        time: { start: '20:00', end: '22:00' },
        class: 'bg-primary-950',
      },
    ],
  },
]
</script>

<template>
  <div>
    <CommonTitle
      :title="{
        main: 'Conference Schedule',
      }"
    />
    <PrimeTabs
      value="0"
      select-on-focus
    >
      <PrimeTabList pt:tablist:class="flex gap-4 pl-4 pb-4 text-lg">
        <PrimeTab
          v-for="(day, i) in schedule"
          :key="`tab-${i}`"
          :value="`${day.value}`"
        >
          <span>
            {{ `${day.label} ${day.day}th Nov` }}
          </span>
        </PrimeTab>
      </PrimeTabList>
      <PrimeTabPanels>
        <PrimeTabPanel
          v-for="(day, i) in schedule"
          :key="`tab-${i}`"
          :value="`${i}`"
        >
          <div class="border-color rounded-md border">
            <PrimeDataTable
              :value="day.items"
              :pt="{
                header: ({ props }) => ({
                  cell: 'bg-red-500',
                }),
                thead: ({ context }) => ({
                  class: 'bg-primary-800',
                }),
                bodyrow: ({ props }) => ({
                  class: 'odd:bg-gray-950 even:bg-gray-900',
                }),
              }"
              :pt-options="{ mergeSections: true, mergeProps: true }"
            >
              <PrimeColumn
                style="width: 20%"
                field="time"
                :header="`Time ${timezone}`"
              >
                <template #body="{ data }">
                  <span class="flex items-center gap-2 text-sm">
                    <Icon
                      :name="data.icon"
                      size="24px"
                    />

                    {{ convertISTtoLocal(day.day, data.time) }}
                  </span>
                </template>
              </PrimeColumn>
              <PrimeColumn
                style="width: 35%"
                field="speaker"
                header="Speaker"
              >
                <template #body="slotProps">
                  <span class="flex items-center text-sm leading-none">
                    <div
                      v-if="slotProps.data.online"
                      class="mr-1 h-3 w-3 rounded-full bg-emerald-500"
                    />
                    {{ slotProps.data.speaker }}
                  </span>
                </template>
              </PrimeColumn>
              <PrimeColumn
                style="width: 40%"
                field="topic"
                header="Topic"
              >
                <template #body="slotProps">
                  <div class="text-sm">
                    {{ slotProps.data.topic }}
                  </div>
                </template>
              </PrimeColumn>
            </PrimeDataTable>
          </div>
        </PrimeTabPanel>
      </PrimeTabPanels>
    </PrimeTabs>
  </div>
</template>

================
File: conference/ConferenceSpeakerCard.vue
================
<script setup lang="ts">
import type { SpeakerType } from '@/types/conference'

const isOpen = ref(false)

defineProps({
  speaker: {
    type: Object as PropType<SpeakerType>,
    required: true,
  },
  featured: {
    type: Boolean,
    required: false,
    default: false,
  },
})
</script>

<template>
  <LandingGlass
    hover-effect="glow"
    glow-color="purple"
    gradient="mixed"
    intensity="low"
    interactive
    isolate-content
    :padded="false"
    class="flex flex-col gap-2 relative h-full"
  >
    <template #header>
      <div class="p-2">
        <div class="absolute left-0 top-0 z-10 hidden h-full w-full bg-black/10 visible" />
        <IBImage
          :img="{
            src: `conference/speakers/${speaker.avatar}.jpg`,
            alt: `${speaker.given_name} will be presenting at the Dark Sky Conservation India Conference`,
            width: '350',
            height: '350',
            loading: 'lazy',
            quality: '80',
            format: 'webp',
          }"
          class="w-full object-cover grayscale-[20%] rounded-t-xl overflow-hidden"
        />
      </div>
    </template>
    <div class="p-6 flex flex-col justify-between flex-grow min-h-full">
      <div class="flex flex-col flex-grow gap-4 text-sm pb-4">
        <h3 class="text-2xl font-semibold">
          {{ speaker.title }} {{ speaker.given_name }} {{ speaker.surname }}
        </h3>
        <p class="flex items-center gap-2 font-semibold text-primary-600">
          <Icon
            name="mdi:account"
            class="flex-shrink-0"
            size="24px"
          />
          {{ speaker.professional_title }}
        </p>
        <p class="h-auto text-sm"> {{ speaker.bio.slice(0, 240) }}... </p>
      </div>

      <div
        v-if="speaker.abstract"
        class="border-color text-white flex w-full flex-col justify-end gap-2 rounded-md border p-4"
        :class="featured ? 'bg-black' : 'bg-primary-950'"
        @click="isOpen = true"
      >
        <h5 class="font-semibold text-white"> Abstract </h5>
        <p class="text-sm">
          {{ speaker.abstract.title }}
        </p>
        <PrimeDialog
          v-model:visible="isOpen"
          modal
          :header="speaker.abstract.title"
          :style="{ width: '60rem' }"
          :breakpoints="{ '1199px': '75vw', '575px': '90vw' }"
        >
          <p>
            {{ speaker.abstract.description }}
          </p>
        </PrimeDialog>
      </div>
    </div>
  </LandingGlass>
</template>

<style scoped></style>

================
File: conference/ConferenceSpeakers.vue
================
<script setup lang="ts">
import type { SpeakerType } from '@/types/conference'

const hosts = [
  {
    given_name: 'Ruchira',
    surname: 'Huchgol',
    professional_title: 'Organising Committee, Chairman, IDSPAC23 & Operations Manager, AstronEra.',
    bio: `Ruchira Huchgol an analog astronaut with background of
    aerospace engineering has a keen intersted in human space exploration and also works to bring in new opportunities in space sector for the Indian student community
    `,
    avatar: 'ruchira-huchgol',
  },
  {
    given_name: 'Atharva',
    surname: 'Joshi (Jhey)',
    professional_title:
      'Organising Committee, Online Chairman, IDSPAC23 & Project Co-ordinator, AstronEra.',
    bio: `Atharva Joshi is a dedicated architect with extensive experience ranging from the Southern coast to the Himalayas.
    His profound interest in astronomy brings a unique perspective to the innovative projects at AstronEra.`,
    avatar: 'atharva-joshi',
  },
]

const speakers = [
  {
    given_name: 'Sonam',
    surname: 'Wangchuk',
    professional_title: 'Engineer, Innovator and Education Reformist',
    bio: 'Recipient of the Ramon Magsaysay Award, Sonam Wangchuk, an engineer and educator, is lauded for his sustainable development efforts via SECMOL ALTERNATIVE SCHOOL. His innovative approach to environmental and educational challenges showcases a profound commitment to fostering sustainable communities.',
    abstract: {
      title: 'Sustainable Development for Tribal Ladakhies',
      description: `Mr. Sonam Wangchuk, a prominent figure in
        education reform, delivered a keynote speech at the conference, commending the
        AstronEra team's efforts and announcing a collaborative effort between SECMOL,
        HIAL, and AstronEra to safeguard Ladakh's starry skies. He drew parallels between
        Ladakh's rugged terrain and Mars, highlighting its rich cultural diversity.
        Wangchuk stressed the impact of climate change on Ladakh and emphasized the need for
        sustainable living practices to preserve the environment. Introducing SECMOL, an
        innovative school focusing on practical learning and sustainable living, Wangchuk
        emphasized Ladakh's natural sky as a gateway to understanding the universe. He advocated
        for promoting eco-friendly tourism in Ladakh, envisioning it as a pilgrimage site for
        experiencing its majestic landscapes and pristine night skies. Proposing an astrotourism
        campaign to ignite youth interest in astronomy, Wangchuk emphasized the importance of
        conserving Ladakh's dark skies while providing livelihood opportunities. Expressing concern
        over light pollution's effects on wildlife, he highlighted the "I Live Simply" movement,
        urging simplicity to combat climate change's impact.`,
    },
    avatar: 'sonam-wangchuk',
    featured: true,
    inPerson: true,
  },
  {
    title: 'Dr.',
    given_name: 'Constance (Connie)',
    surname: 'Walker',
    professional_title:
      "Head of Office of Site Protection, NSF's NOIRLab, USA and Co-Director, IAU CPS",
    bio: "Astronomer Dr. Connie E. Walker is celebrated for her dark skies education advocacy. With a journey sparked by celestial fascinations, she's devoted two decades at NSF's National Optical-Infrared Astronomy Research Lab, crafting global innovative programs. Her academic trail from Physics to a Ph.D. in Astronomy underscores a lifelong dedication to astronomical education.",
    abstract: {
      title:
        'Astronomy and Satellite Constellations: Pathways Forward for Light Pollution from Space',
      description: `Dr. Constance (Connie) Walker, the Head of
        the Office of Site Protection at NSF's NOIRLab, USA, and
        Co-Director of the IAU CPS. Her talk, titled "Astronomy and
        Satellite Constellations: Pathways Forward for Light
        Pollution from Space," highlighted the initiatives and
        programs supported by the International Astronomical
        Union (IAU) to promote and preserve Dark and Quiet Skies.
        Dr. Walker emphasised the challenge posed by satellite constellations to observational
        astronomy and discussed the collaboration of working groups from various fields such as
        engineering, law and policy, pure sciences, astrophysics, and art. She emphasised that the
        field of space and astronomy requires contributions from individuals in every discipline and
        is a common heritage for all.`,
    },
    avatar: 'connie-walker',
    featured: true,
    inPerson: false,
  },
  {
    given_name: 'Neethu',
    surname: 'Susan George',
    professional_title: 'MSLL ( Member Society of Light & Lighting ) as well as Dark Sky Advocate',
    bio: `Neethu Susan George, MSLL, WELL AP™, LEED® Green Associate™.
    Designation - Specification Manager Middle East North Africa and India - Lamp Worktitude for Light (Spain) and Griven (Italy)
    MSLL (Member Society of Light and Lighting), DarkSky Advocate, WELL AP™, LEED® Green Associate™.
    Graduate in Electrical and Electronics Engineering from Mahatma Gandhi University, and MSc. Energy with dissertation on Light Pollution and Circularity in Lighting from Heriot-Watt University

    `,
    abstract: {
      title: 'Lighting for Dark Skies',
      description: `Mrs. Neethu Susan George, a member of
        the Society of Light & Lighting (MSLL) and a Dark Sky Advocate, presented
        "Lighting for Dark Skies," focusing on fundamental strategies to combat light
        pollution. She advocated for installing motion sensors or timers to regulate light
        usage efficiently and advocated for the adoption of lower-intensity lighting to
        minimize unnecessary illumination. Mrs. George emphasized the importance of
        properly aiming and shielding outdoor lights to prevent glare, light spill, and
        skyglow. Additionally, she recommended the implementation of louvers, baffles, or shields to
        direct light where needed and prevent it from dispersing into the sky or neighboring areas. To
        further mitigate light pollution, she suggested the use of curtains or blinds indoors to contain
        light within the premises, thus safeguarding the night environment from artificial light intrusion.
        
        Ms. George emphasized the importance of educating oneself and the community about the
        impacts of light pollution on the environment, human health, and astronomical observations.
        She encouraged support for organizations like the International Dark-sky Association (IDA),
        which actively promotes responsible outdoor lighting and the preservation of dark skies.
        Additionally, Ms. George advocated for increased involvement from stakeholders,
        companies, and government bodies to engage in discussions and collaborate on
        implementable solutions to address the issue of light pollution.`,
    },
    avatar: 'neethu-george',
    featured: false,
    inPerson: true,
  },
  {
    given_name: 'Bhakti',
    surname: 'Mithagri',
    professional_title: 'MSc Astrophysics',
    bio: "Curious learner and astronomy enthusiast. Graduated with a Master's degree in Astrophysics from St. Xavier's College in Mumbai and currently preparing for Ph.D.",
    abstract: {
      title: 'Indian successors to the Indian Gamma-Ray Observatory(IGRO) Mission',
      description: `Ms. Bhakti Mithagri, an MSc Astrophysics graduate and avid astronomy
        enthusiast, delivered a presentation titled "Indian Successors to the Indian Gamma-Ray
        Observatory (IGRO) Mission." Alongside her colleague Mr. Kshititj Pawar, they elucidated
        an indigenous alternative mission concept in its initial stages. The presentation also addressed
        the issue of insufficient data democratisation within the research domain, particularly for
        students and young researchers.`,
    },
    avatar: 'bhakti-mithagri',
    featured: false,
    inPerson: true,
  },
  {
    title: 'Dr.',
    given_name: 'Anita',
    surname: 'Gupta',
    professional_title: 'Adviser/Scientist G at DST, Govt. of India',
    bio: "Dr. Anita Gupta, an Adviser/Scientist G at India's DST, has over 25 years of experience in innovation, entrepreneurship, and start-ups. As Associate Head of Innovation and Entrepreneurship, she leads initiatives like Startup India, fostering over 150 technology business incubators across premier institutes and engaging in Public-Private Partnerships with major MNCs to enhance India's innovation landscape.",
    abstract: {
      title: "Harnessing India's  potential to fight Climate Change",
      description: `Dr. Anita Gupta. Representing the Climate Change & Clean Energy (C3E) Division within
        the Department of Science and Technology, Government of India, Dr.
        Gupta underscored the government's cognizance of pressing concerns such
        as light pollution and its adverse effects on astronomy. She emphasized
        the readiness of governmental entities to engage in collaborative endeavors with
        organizations, corporations, and non-governmental organizations (NGOs) to explore
        alternative strategies and foster the adoption of clean energy practices and sustainable
        initiatives.`,
    },
    avatar: 'anita-gupta',
    featured: true,
    inPerson: false,
  },
  {
    given_name: 'Maria',
    surname: 'Alejandra Díaz',
    professional_title: 'Astronomer',
    bio: `Alejandra, with a Physics degree from UAM, Spain, has worked at the European Space Agency and is pursuing a PhD in Turku.
    Passionate about astronomy's societal impact, she's contributed to IAU's OAD projects and operates a telescope in La Palma alongside her thesis.`,
    abstract: {
      title: "Astronomy's Impact on Sustainability",
      description: `Maria Alejandra Díaz is an astronomer with a Physics degree from UAM, Spain, and is
        pursuing a PhD in Turku. Passionate about astronomy's societal impact, she's contributed to
        IAU's OAD projects and operates a telescope in La Palma alongside her thesis. Her talk was
        titled Astronomy's Impact on Sustainability. In her talk, she gave a very brief overview of the
        various 200 projects funded by the IAU OAD and how these projects highlighted exactly the
        definition of sustainability and the harmony that it helps to maintain between economy,
        society and environment. She highlighted how these projects evolved in following Goal 4:
        quality education, Goal 8: Decent work and economic growth, Goal 5: gender equality, Goal
        10: Reduced Inequality, and Goal 11: affordable clean energy. She also mentioned case
        studies that highlighted astronomy and its impact and relation with mental health,
        socio-economic development and preserving indigenous roots and knowledge of the night sky.`,
    },
    avatar: 'maria-alejandra-diaz',
    featured: false,
    inPerson: false,
  },
  {
    title: 'Dr.',
    given_name: 'Priya',
    surname: 'Hasan',
    professional_title: 'Dr. of Astrophysics and Physics',
    bio: `Dr. Priya Hasan, from Moscow State and Osmania University, is an acclaimed astrophysicist. Awarded as Women Scientist by the Department of Science & Technology,
    she's lectured at CalTech and Harvard. Currently at Maulana Azad University, she co-chairs the IAU's Women in Astronomy and champions science outreac`,
    abstract: {
      title: 'Dark Skies and Bright Satellites',
      description: `Dr. Priya Hasan, a distinguished astrophysicist
        and co-chair of the International Astronomical
        Union's Women in Astronomy, delivered a presentation titled "Dark Skies and Bright
        Satellites." Dr. Hasan highlighted the disruptive impact of the launch of numerous satellites on
        astronomical observations, particularly during twilight after dawn and dusk. She elucidated
        that the brightness of satellites depends on various factors, including inclination, altitude,
        attitude, orbital position, wavelength, and time of the year. Focusing on the Vera Rubin Observatory (LSST), which scans the skies for
        transients and near-Earth objects, Dr. Hasan discussed the adverse effects of satellite trails in
        science images. These effects encompass the loss of information on pixels, cross-talk in
        electronics, ghost images, and residual images, varying depending on the telescope and
        detector used. Furthermore, Dr. Hasan addressed potential solutions and mitigation strategies, referencing
        the SATCON1 report. These strategies include reducing reflectivity through the application of
        dark paint, redirecting light away, deploying fewer satellites to minimize the issue, designing
        smaller satellites to mitigate their impact, and ensuring predictability to facilitate scheduled observations
        `,
    },
    avatar: 'priya-hasan',
    inPerson: false,
    featured: true,
  },
  {
    given_name: 'Vedvrat',
    surname: 'Vinayak Bedekar',
    professional_title: 'BE IT Student',
    bio: 'An amateur astronomer running an astronomy club in college. Frequent stargazer and host of stargazing events. ',
    abstract: {
      title: 'Light pollution: A Camouflaging pollution',
      description: `Mr. Vedvrat Vinayak Bedekar, a BE IT student and amateur astronomer overseeing an
        astronomy club in college, presented insights as one of the youngest speakers. His talk
        centred around the proposal to include a new category, 'Average Light Pollution,' in the daily
        regional weather report to raise awareness about the severity of light pollution. He further
        suggested the observance of a designated day, 'Dark Sky Preservation Day,' during which
        residents of villages and cities would turn off their lights temporarily to observe, enjoy, study,
        and appreciate the beauty of the universe. Additionally, he advocated for the initiation of a
        nationwide movement called 'Dark Sky Preservation Mission,' similar to the 'Swachh Bharat
        Mission.' This initiative would recognize and award villages and cities making exemplary
        efforts to raise awareness and reduce light pollution with a unique 'Dark Sky Preservation
        Award' at both state and national levels.
        `,
    },
    avatar: 'vedvrat-bedekar',
    featured: false,
    inPerson: false,
  },
  {
    given_name: 'David',
    surname: 'Ault',
    professional_title: 'Director of Education For Immersive Experiences',
    bio: `David is the Director of Education for Immersive Experiences, a UK planetarium and interactives company with a global footprint.
    With an astrophysics degree from Cambridge University, he entered the planetarium space in 2006, organising science festivals and starting a number of astronomy podcasts.`,
    abstract: {
      title: 'The planetarium as a creative space',
      description: `David Ault, the Director of Education for Immersive
        Experiences, a UK-based planetarium and interactives
        company, adeptly showcased the use of domes as an
        interactive tool for educating intricate concepts in
        astronomy. Through collaborative discussions,
        plans were formulated to deploy these inflatable
        portable domes in schools and remote areas, creating a mobile planetarium.
        This initiative aims to reinstate and enhance
        outreach efforts in the field of astronomy.
        `,
    },
    avatar: 'david-ault',
    featured: false,
    inPerson: false,
  },
  {
    given_name: 'Samyukta',
    surname: 'Manikumar',
    professional_title: 'Astrotourism Consultant',
    bio: `Samyukta, director of Noctia Institute, champions dark sky conservation through astrotourism. Blending science with cultural preservation,
    she's a fellow at the International Astronomical Union, focusing on rural astrotourism resources via the 'Socio-economic development through Astronomy Flagship'.`,
    abstract: {
      title: 'Harnessing Dark Skies for Socioeconomic Development in Rural Areas',
      description: `Ms. Samyukta Manikumar,
        an Astro Tourism consultant and fellow at the
        International Astronomical Union, presented on the
        topic "Harnessing Dark Skies for Socioeconomic
        Development in Rural Areas." She highlighted the
        immense potential of astro tourism in involving,
        educating, and uplifting rural populations. Ms Manikumar emphasized that rural areas still
        have the privilege of having dark skies, which can be leveraged by tourism companies
        through collaborations with the rural population. This, in turn, can help improve the social
        and economic conditions of these areas.
        `,
    },
    avatar: 'samyukta-manikumar',
    inPerson: false,
    featured: true,
  },
  {
    given_name: 'Upasana',
    surname: 'Dasgupta',
    professional_title:
      'Postdoctoral Researcher at Canada Research Chair in International Political Economy of Université Laval ',
    bio: `Upasana Dasgupta researches space policies at Université Laval and is on ACES Worldwide's board. With a Doctorate from McGill,
    she's an expert in space law, associated with global space entities, and emphasizes on space collision prevention and dark sky conservation.`,
    avatar: 'upasana-dasgupta',
    abstract: {
      title: 'Intruders in the Dark Sky: The Megaconstellation Crisiss',
      description: ` Ms. Upasana Dasgupta, a Postdoctoral Researcher at the Canada Research Chair in
        International Political Economy of Université Laval, presented "Intruders in the Dark Sky:
        The Mega Constellation Crisis." She outlined the current space policy framework, including
        the Outer Space Treaty, liability convention, and Moon agreement. Ms. Dasgupta highlighted
        the absence of dedicated regulations for satellite constellations and debris, underscoring their
        disruptive impact on observational astronomy by introducing additional noise into datasets,
        hindering scientific research.
        `,
    },
    featured: false,
    inPerson: true,
  },
  {
    given_name: 'Dinesh',
    surname: 'Nisang',
    professional_title: 'Science Communicator',
    bio: `Dinesh founded Sunday Science School and is passionate about science communication. An astronomer, he views astronomy as a unifier for humanity.
    He enjoys astrophotography, exploring nature, and is an aspiring writer with articles and a book on scientific innovation. Focus: ISAAC.`,
    abstract: {
      title: 'Stellar Education: Unveiling ISAAC',
      description: `Mr. Dinesh Nisang, Science Communicator and founder of Sunday Science School shared
        his talk “Stellar Education: Unveiling Interactive Space and Astronomy Activity Centre”
        (ISAAC). His entire conversation was focused on how astronomy deserves and hands on
        approach to improve and enhance better understanding the concepts. He demonstrated very
        well by showing the kits of innovative models, one of them was a GMRT telescope which
        helped understand the engineering aspect as well as the working of the observatory. His talk
        very well complemented the tone of the day's inclusion of astronomy and space science in the
        educational curriculum.
        `,
    },
    avatar: 'dinesh-nisang',
    featured: false,
    inPerson: true,
  },
  {
    given_name: 'Exodus',
    surname: 'Chun-Long Sit',
    professional_title: 'Transmedia Astronomy Educator',
    bio: `Exodus CL Sit from Hong Kong is a transmedia astronomy educator and science author.
    He holds roles in IAU as the National Astronomy Education Coordinator for Hong Kong and Co-Outreach Coordinator.
    A member of the Dark Sky International Committee, he champions dark-sky protection, STEAM education, and interdisciplinary science approaches.`,
    abstract: {
      title: 'ASTROx Dark Sky: How to Integrate Astronomy Education into Interactive Classroom',
      description: `Exodus Chun-Long Sit addressed
        the integration of astronomy education in an interactive
        classroom and the escalating issue of light pollution, proposing a DIY
        light shielding solution. He also explored the interconnectedness of
        entrepreneurship and space arts with astronomy. Additionally, he
        advocated for biodiversity conservation, suggesting the
        establishment of Dark Sky Parks. Mr. Sit emphasized the IDEAS
        framework, encompassing Immersivity, Diversity, Equity, Access, and Spreading awareness, as a strategy for advancing
        astronomy education and outreach efforts.
        `,
    },
    avatar: 'exodus-chun-long-sit',
    featured: false,
    inPerson: false,
  },
  {
    given_name: 'Nadia Makhijani',
    surname: '& Udish Sharma',
    professional_title: 'BSc. Physics Students',
    bio: `We are pursuing BSc Physics hons from St. Stephen's College, University of Delhi and have mainly worked in radio astronomy,
    its applications and Cosmology. Nadia Makhijani and Udish Sharma are students in their final year at St. Stephen's College pursuing a course in physics.
    They work in the fields of Astronomy and Cosmology and are currently involved in setting up a Radio Astronomy Laboratory in their institution.
    They are also currently in the student led physics and astronomy society.`,
    avatar: 'nadia-makhijani',
    abstract: {
      title: 'Affordable Radio Astronomy Lab',
      description: `Ms. Nadia Makhijani and Mr. Udish Sharma, both BSc Physics students with a primary focus
        on radio astronomy, its applications, and cosmology, presented a talk titled "Affordable Radio
        Astronomy Lab." During their presentation, they introduced an economically viable radio
        telescope – a pyramidal horn – that was constructed in-house using low-cost equipment. This
        telescope is designed for use in college laboratories and outreach programs, providing an
        accessible platform for students. The duo utilized the horn antenna for a Radio Frequency
        Interference (RFI) survey of their campus, observed the H-21 emission from our galaxy, and
        plotted the rotation curve. They also highlighted the versatility of this affordable setup for
        various experiments in college laboratories, such as satellite and meteor tracking, receiving
        weather images, and collecting GPS data. The objective of their presentation was to
        emphasize how cost-effective experiments can be implemented in undergraduate labs.
        `,
    },
    featured: false,
    inPerson: false,
  },
  {
    title: 'Dr.',
    given_name: 'Kiran',
    surname: 'Kulkarni',
    professional_title: 'Indian Administrative Service Officer',
    bio: "Dr. Kulkarni has significantly contributed to tribal development, notably as Tribal Development Commissioner. While his work doesn't directly involve astronomy, his extensive outreach in education and governance innovations hints at a potential for fostering astronomy-related initiatives within tribal communities. His campaigns like Dream Melghat showcase his commitment to community upliftment, possibly providing a platform for intertwining traditional tribal knowledge with astronomical insights.",
    abstract: {
      title: 'Sustainable Development through Astronomy: A Tribal Perspective',
      description: `Dr. Kiran Kulkarni (IAS), former Commissioner of the
        Tribal Development Department, Gov. of Maharashtra. While Dr. Kulkarni's primary
        professional focus may not directly involve astronomy, his extensive involvement in
        education and governance innovations suggests potential avenues for fostering
        astronomy-related initiatives within tribal communities. His talk was titled
        "Sustainable Development through Astronomy: A Tribal Perspective."
        During his presentation, Dr. Kulkarni drew attention to the critical distinctions
        between tribal and rural communities. He prompted contemplation on the unique
        characteristics of the locations inhabited by tribal populations, characterized by their remoteness, isolation, and freedom from the
        impact of pollution, including light pollution. Dr. Kulkarni suggested that these remote and
        quiet locations might be ideal for establishing dark skies, encouraging further assessment and
        consideration for similar initiatives.
        `,
    },
    avatar: 'kiran-kulkarni',
    featured: true,
    inPerson: true,
  },
  {
    given_name: 'Amshu',
    surname: 'CR',
    professional_title: 'Entrepreneur, Thapasu foods LLP',
    bio: 'Forest value chains, Land degradation, Biodynamic Agriculture, Tribal produce supply chains, Food security, knowledge preservation, Sustainablity ',
    abstract: {
      title: 'The ancient science of space and agriculture for sustainability and harmony',
      description: `Amshu CR, an entrepreneur from Thapasu Foods LLP, presented on "The
        Ancient Science of Space and Agriculture for Sustainability and Harmony." She effectively
        explained the significance of Vedic knowledge in assessing the night skies based on seasons
        and how this knowledge can be applied to enhance agricultural conditions. Emphasizing the
        revision and implementation of this ancient approach in the form of Biodynamic farming,
        Amshu CR left the audience with thought-provoking insights. The presentation highlighted
        how actual sky observations, in addition to satellite imagery and mapping, can assist farmers
        in optimizing their agricultural practices.
        `,
    },
    avatar: 'amshu-cr',
    featured: false,
    inPerson: false,
  },
  {
    given_name: 'Albert',
    surname: 'Kuntu Forson',
    professional_title: 'PhD Research Student',
    bio: 'Albert, an engineer specializing in Radio Astronomy Instrumentation and radio interferometer designs at the University of Mauritius, holds the esteemed role of IAU-OAD National Astronomy Education Coordinator for Ghana. Additionally, he serves as the President for PRAGSAC and is highly enthusiastic about science communication.',
    abstract: {
      title:
        "Empowering Ghana's STEM Education: Bridging the Gap through Capacity Building in Astronomy Instrumentation",
      description: `Mr. Albert Kuntu Forson, a Ph.D. Research Student and
        the IAU-OAD National Astronomy Education Coordinator for Ghana,
        presented on "Empowering Ghana's STEM Education: Bridging the Gap
        through Capacity Building in Astronomy Instrumentation." Mr.
        Forson emphasized Africa's growing presence in the field of space sciences
        and discussed initiatives such as the AtroPhy project. This project serves
        as a catalyst for graduate and undergraduate students, offering hands-on experience in radio telescope engineering and
        operational techniques. Utilizing the Table Top Radio Telescope (TTRT) for Galactic
        Hydrogen Emission (HI) studies and developing small parabolic dish antennas, AtroPhy
        contributes significantly to addressing socio-economic challenges, including poverty, hunger,
        and illegal mining in Ghana. By nurturing practical skills, fostering scientific curiosity, and
        promoting collaboration, AtroPhy plays a pivotal role in advancing STEM education and
        capacity building in the region.
        `,
    },
    avatar: 'albert-forson',
    featured: false,
    inPerson: false,
  },
  {
    given_name: 'Aishwarya',
    surname: 'Khade',
    professional_title: 'Mental Health Practitioner / Expressive Arts ',
    bio: 'A seasoned Psychologist and Mental Health Professional, Aishwarya Khade employs art and movement-based facilitation in educational and corporate settings. Specialized in corporate wellness, her drive is to enhance mental health and well-being through innovative methodologies.',
    abstract: {
      title: 'Mental Health Arts and Astronomy',
      description: `The final presentation of the day addressed the intersection of Mental Health, Arts, and
        Astronomy, delivered by Ms. Aishwarya Khade, a seasoned Psychologist and Mental Health
        Professional. Ms. Khade employs art and movement-based facilitation techniques in both
        educational and corporate settings. She provided a detailed account of her experiences while
        collaborating with the AstoTribe project in Nashik in 2022 and Ladakh in 2023. Ms Khade
        emphasized her work with tribal children who were undergoing training to become Astro
        guides. The incorporation of artistic elements proved instrumental in creating a comfortable
        environment, allowing the children to share their indigenous tribal stories related to
        constellations. This approach also facilitated discussions about the beliefs and superstitions
        prevalent in their respective tribal communities.
        `,
    },
    avatar: 'aishwarya-khade',
    featured: false,
    inPerson: true,
  },
  {
    given_name: 'Hosein',
    surname: 'Khezri',
    professional_title: 'Associate of Commission C1 WG Astronomy Education Research & Methods',
    bio: 'Affiliated with multiple astronomical unions including the IAU, Hosein Khezri is dedicated to elevating astronomy education and its cultural integration. His association with the Iranian Teachers Astronomy Union and various International Astronomical Union commissions reflects a broad engagement in promoting astronomy in diverse cultural landscapes.',
    abstract: {
      title: 'Road to Sky',
      description: 'Cancelled due to technical issues',
    },
    avatar: 'hossein-khezri',
    featured: false,
    inPerson: false,
  },
  {
    given_name: 'Shweta',
    surname: 'Kulkarni',
    professional_title: 'Founder/Director of AstronEra',
    bio: 'Astropreneur Shweta Kulkarni, listed among top 100 women entrepreneurs, spearheads Astronera, marrying business acumen with astronomy for innovative solutions. As a Fellow of the Royal Astronomical Society of England, her venture reflects a novel approach to integrating astronomy with enterprise.',
    abstract: {
      title: 'Skill Training in Astronomy for Income Generation',
      description: `Shweta, the director of AstronEra and CEO of Astron
        SHK Trust, initiated the conference to bridge the link between conserving dark skies and
        sustainable socio-economic development. She introduced herself as an "AstroPreneur,"
        emphasizing her dual roles as a part-time astronomer and full-time entrepreneur. Shweta
        identified key problems including the lack of authentic astronomy knowledge, scientific
        temperament in society, and diminishing dark skies due to light pollution.
        She introduced the "AstroTribe" Project, funded by IAU and OAD, aimed at training tribal
        children in astronomy to empower them economically. This initiative incentivizes students by
        enabling them to generate income through bridging technical astronomy with entertainment
        through astrotourism, thereby promoting awareness about dark skies and addressing SDGs of
        quality education and sustainable economic growth.
        Shweta outlined action points post-conference, focusing on understanding the problem of
        light pollution, identifying target areas and audiences, determining mediums and expected
        outcomes, and establishing frameworks aligned with the human right to dark skies. She
        emphasized leveraging resources available on darksky.org to find solutions and highlighted
        the historical contributions to astronomy, underscoring the responsibility to conserve night
        skies for future generations.
        Following Shweta's talk, a significant event took place where the Astroguide's batch in
        Manali was honored with certificates and recognized for the income they earned from their
        stargazing event. This event served as their graduation ceremony, marking the culmination of
        their training. The Astroguides introduced themselves and shared their experiences gained
        through the training program. They expressed heartfelt gratitude towards the AstronEra team
        for their support and guidance throughout the journey. This ceremony not only celebrated the
        achievements of the Astroguides but also highlighted the impact of empowering individuals
        with astronomical knowledge and skills for economic sustainability in the region.`,
    },
    avatar: 'shweta-kulkarni',
    featured: true,
    inPerson: true,
  },
] as SpeakerType[]

const filterSpeakers = (featured: boolean, toSort = false) => {
  return speakers
    .filter((s: Speaker): boolean | undefined => s.featured === featured)
    .sort((a: Speaker, b: Speaker) => {
      if (!toSort) return 0
      if (a.given_name < b.given_name) {
        return -1
      }
      if (a.given_name > b.given_name) {
        return 1
      }
      return 0
    })
}
</script>

<template>
  <div class="w-full">
    <CommonTitle
      :title="{
        main: 'Meet The IDSPC2023 Group',
      }"
    />
    <p class="text-primary-700 text-sm font-bold uppercase"> offline / online Chairperson </p>
    <ConferenceChairperson
      class="pt-6"
      :hosts="hosts"
    />
    <p class="text-primary-700 text-sm font-bold uppercase pt-4 lg:pt-8"> Conference Speakers </p>
    <div class="pt-4 lg:pt-8 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 lg:gap-8">
      <ConferenceSpeakerCard
        v-for="speaker in filterSpeakers(true)"
        :key="speaker.given_name"
        :speaker="speaker"
        featured
      />
      <ConferenceSpeakerCard
        v-for="speaker in filterSpeakers(false, true)"
        :key="speaker.given_name"
        :speaker="speaker"
      />
    </div>
  </div>
</template>

<style scoped></style>

================
File: conference/ConferenceVenue.vue
================
<script setup lang="ts">
const venue = {
  title: {
    main: 'Conference Venue, Manu Allaya',
    subtitle: 'Manali, Himachal Pradesh, India',
  },
  website: 'https://www.manuallaya.com/',
  about: `Nestled in the heart of Himachal Pradesh in India, ManuAllaya served as a celestial
    gateway, offering guests an enchanting experience under the vast expanse of the night sky
    adorned with a myriad of stars. Manu Allaya not only provided a luxurious setting but also
    embraced the rich history, art, and culture of the region, seamlessly blending it with modern
    elegance. Overall, the choice of ManuAllaya as the conference venue and the thoughtful selection of
    presentation themes contributed to creating an immersive and intellectually stimulating
    environment, enabling participants to engage deeply with the subject matter and further the
    objectives of the conference.`,
}
const image = {
  src: 'conference/manu-allaya-milkyway-poster.jpg',
  alt: 'Manu Allaya resort at night with the milky way in the background',
}
</script>

<template>
  <div class="relative grid grid-cols-1 items-start gap-6 lg:grid-cols-2 xl:gap-12">
    <CommonTitle
      class="row-start-1"
      :title="venue.title"
    >
      <div class="row-start-2 h-full w-full space-y-4 text-left leading-6">
        <p class="font-normal">
          {{ venue.about }}
        </p>
        <PrimeButton
          as="a"
          href="https://www.manuallaya.com/"
          target="_blank"
          variant="outlined"
        >
          Manu Allaya Website
        </PrimeButton>
      </div>
    </CommonTitle>
    <div class="h-full w-full">
      <IBImage
        :img="{
          src: image.src,
          alt: image.alt,
          width: '440',
          height: '520',
        }"
        class="mx-auto w-full rounded-md"
      />
    </div>
  </div>
</template>

================
File: darksky/Hero.vue
================
<script setup lang="ts">
import type { TitleType, ImageType } from '../../types/content'

defineProps({
  fit: {
    type: String,
    default: 'cover',
  },
  objectPosition: {
    type: String,
    default: 'center',
  },
  title: {
    type: Object as () => TitleType,
    required: true,
  },
  img: {
    type: Object as () => ImageType,
    required: true,
  },
})

// consider turning the images into short videos using AI
// consider using mix-blend-mode for cool text effect with video
</script>

<template>
  <div :class="`relative flex items-center ${objectPosition == 'center' ? 'justify-center' : ''}`">
    <IBImage
      :img="{
        src: img.src,
        alt: img.alt,
        width: img.width,
        height: img.height,
      }"
      :class="`w-full object-${fit} ${objectPosition} h-screen`"
    />
    <div class="absolute z-10 flex flex-col gap-8 px-4 text-white lg:flex-row lg:gap-16 xl:px-8">
      <div class="flex flex-col gap-4">
        <h2
          :class="`rounded-md bg-black/30 px-4 py-1 text-2xl font-bold shadow-xl xl:px-8 text-${title.centered ? 'center' : 'left'}`"
        >
          {{ title.main }}
        </h2>
        <h2
          v-if="title.subtitle"
          :class="`inline-block w-auto rounded-sm px-4 pb-4 font-semibold xl:px-8`"
        >
          {{ title.subtitle }}
        </h2>
      </div>
    </div>
    <div class="absolute left-0 top-0 h-full w-full bg-black/50" />
  </div>
</template>

<style scoped></style>

================
File: event/EventContent.vue
================
<script setup lang="ts">
defineProps<{
  title: string
  categoryClass: string
  icon: string
  description: string
  time: string
  openEvent: () => void
}>()
</script>

<template>
  <div
    v-tooltip="{
      value: description,
      pt: {
        text: '!bg-black !w-fit !rounded !p-2 !text-white !font-medium',
      },
    }"
    :class="`hidden md:flex md:p-2 text-white text-wrap rounded ${categoryClass}`"
  >
    <Icon
      v-if="icon"
      :name="icon"
    />
    <span>{{ title }}</span>
  </div>
  <PrimeButton
    class="flex md:hidden"
    @click="openEvent"
  >
    <Icon
      v-if="icon"
      :name="icon"
    />
  </PrimeButton>
</template>

<style scoped />

================
File: event/EventSchedule.vue
================
<script setup lang="ts">
defineProps({
  schedule: {
    type: Array,
    required: true,
  },
})

function convertISTtoLocal(day: number, time: { start: string; end: string }) {
  const start = `2025-03-01T${time.start}:00+05:30` // '+05:30' is the offset for IST
  const end = `2025-03-01T${time.end}:00+05:30` // '+05:30' is the offset for IST

  // Creating a Date object
  const startIST = new Date(start)
  const endIST = new Date(end)

  // Converting to local time string
  const startLocal = startIST.toLocaleTimeString([], {
    hour: '2-digit',
    minute: '2-digit',
    hour12: false,
  })

  const endLocal = endIST.toLocaleTimeString([], {
    hour: '2-digit',
    minute: '2-digit',
    hour12: false,
  })

  return `${startLocal} - ${endLocal}`
}

function getOrdinalIndicator(day: number) {
  if ([1, 21, 31].includes(day)) {
    return 'st'
  } else if ([2, 22].includes(day)) {
    return 'nd'
  } else if ([3, 23].includes(day)) {
    return 'rd'
  } else {
    return 'th'
  }
}

const timezone = computed(() => Intl.DateTimeFormat().resolvedOptions().timeZone)
</script>

<template>
  <div class="w-full">
    <CommonTitle
      :title="{
        main: 'Schedule',
      }"
    />
    <PrimeTabs
      value="0"
      select-on-focus
    >
      <PrimeTabList pt:tablist:class="flex gap-4 pl-4 pb-4 text-lg">
        <PrimeTab
          v-for="(day, i) in schedule"
          :key="`tab-${i}`"
          :value="`${day.value}`"
        >
          {{ `${day.label} ${day.day}${getOrdinalIndicator(day.day)} ${day.month} ${day.year}` }}
        </PrimeTab>
      </PrimeTabList>
      <PrimeTabPanels>
        <PrimeTabPanel
          v-for="(day, i) in schedule"
          :key="`tab-${i}`"
          :value="`${i}`"
        >
          <div class="border-color rounded-md border">
            <PrimeDataTable
              :value="day.items"
              :pt="{
                header: ({ props }) => ({
                  cell: 'bg-red-500',
                }),
                thead: ({ context }) => ({
                  class: 'bg-primary-800',
                }),
                bodyrow: ({ props }) => ({
                  class: 'odd:bg-gray-950 even:bg-gray-900',
                }),
              }"
              :pt-options="{ mergeSections: true, mergeProps: true }"
            >
              <PrimeColumn
                style="width: 20%"
                field="time"
                :header="`Time ${timezone}`"
              >
                <template #body="{ data }">
                  <span class="flex items-center gap-2 text-sm">
                    {{ convertISTtoLocal(day.day, data.time) }}
                  </span>
                </template>
              </PrimeColumn>
              <PrimeColumn
                style="width: 40%"
                field="activiy"
                header="Activity"
              >
                <template #body="slotProps">
                  <div class="text-sm">
                    {{ slotProps.data.activity }}
                  </div>
                </template>
              </PrimeColumn>

              <PrimeColumn
                style="width: 40%"
                field="description"
                header="Description"
              >
                <template #body="slotProps">
                  <ul
                    v-for="description in slotProps.data.description"
                    class="text-sm"
                  >
                    <li>{{ description }}</li
                    ><li> </li
                  ></ul>
                </template>
              </PrimeColumn>
            </PrimeDataTable>
          </div>
        </PrimeTabPanel>
      </PrimeTabPanels>
    </PrimeTabs>
  </div>
</template>

================
File: event/EventSidebar.vue
================
<script setup lang="ts">
defineProps({
  categories: {
    type: Array<Record<string, any>>,
    required: true,
  },
})
</script>

<template>
  <div class="flex flex-col gap-4 p-3">
    <h2 class="text-xl">Monthly Calendar Astronomical Events</h2>
    <div>
      <h3 class="text-xl">Event Categories</h3>
      <ul class="flex justify-between flex-wrap md:block">
        <li
          class="flex gap-1 items-center"
          v-for="category in categories"
        >
          <div :class="`rounded bg-${category.color}-${category.colorIntensity} w-5 h-3`" />
          {{ category.name }}
        </li>
      </ul>
      <i class="mdi:event-heart" />
    </div>
  </div>
</template>

<style scoped />

================
File: footer/FooterBottomBar.vue
================
<script setup lang="ts">
const policies = ['privacy-policy', 'terms-of-use', 'cookies-policy', 'refund-policy']
const currentYear = new Date().getFullYear()
</script>

<template>
  <div class="relative w-full">
    <LandingGlass
      hover-effect="glow"
      glow-color="purple"
      gradient="mixed"
      intensity="low"
      interactive
      isolate-content
    >
      <div class="flex flex-col gap-6 text-sm">
        <!-- Policies Links -->
        <div class="flex flex-wrap justify-center gap-x-6 gap-y-2">
          <NuxtLink
            v-for="policy in policies"
            :key="policy"
            :to="`/policies/${policy}`"
            class="policy-link relative"
          >
            <span
              class="text-gray-400 hover:text-primary-400 transition-colors duration-300 capitalize"
            >
              {{ policy.replace('-', ' ') }}
            </span>
          </NuxtLink>
        </div>

        <!-- Copyright Text -->
        <div class="text-center text-gray-400">
          <p class="inline-flex items-center gap-1">
            ©2018 - {{ currentYear }} AstronEra. All rights reserved - Made with
            <span class="inline-block animate-pulse text-red-500">❤️</span>
            by
            <a
              href="https://www.incubrain.org/"
              target="_blank"
              class="incubrain-link relative ml-1 text-primary-400 hover:text-primary-300 transition-colors duration-300"
            >
              Incubrain
            </a>
          </p>
        </div>
      </div>
    </LandingGlass>
  </div>
</template>

<style scoped>
/* Policy link hover effect */
.policy-link::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -1px;
  width: 0;
  height: 1px;
  background-color: var(--primary-400);
  transition: width 0.3s ease;
}

.policy-link:hover::after {
  width: 100%;
}

/* Incubrain link hover effect */
.incubrain-link::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -1px;
  width: 0;
  height: 1px;
  background-color: var(--primary-400);
  transition: width 0.3s ease;
}

.incubrain-link:hover::after {
  width: 100%;
}

/* Heart animation */
@keyframes heartbeat {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

.animate-heartbeat {
  animation: heartbeat 1.5s ease-in-out infinite;
}
</style>

================
File: footer/FooterCategories.vue
================
<script setup lang="ts">
type Category = {
  title: string
  links: string[]
}

defineProps<{
  category: Category
}>()
</script>

<template>
  <ul>
    <li>
      <p class="text-lg font-semibold tracking-wide text-white">
        {{ category.title }}
      </p>
    </li>
    <li
      v-for="(link, linkIndex) in category.links"
      :key="`footer-link-${linkIndex}`"
      class="mt-6"
    >
      <a
        href=""
        class="text-base tracking-wide text-white"
      >
        {{ link }}
      </a>
    </li>
  </ul>
</template>

<style scoped></style>

================
File: footer/FooterWebsite.vue
================
<script setup lang="ts">
const { socials } = useSocialLinks()

const websiteLinks = [
  {
    key: 'about-us',
    label: 'About Us',
    icon: 'material-symbols:info',
    visible: true,
    disabled: false,
    items: [
      {
        key: 'about',
        label: 'About',
        icon: 'material-symbols:info',
        url: '/about',
        visible: true,
        disabled: false,
      },
      {
        key: 'team',
        label: 'Team',
        icon: 'material-symbols:emoji-people',
        url: '/team',
        visible: true,
        disabled: false,
      },
      {
        key: 'contact',
        label: 'Contact',
        icon: 'material-symbols:call',
        url: '/contact',
        visible: true,
        disabled: false,
      },
    ],
  },
  {
    key: 'projects',
    label: 'Projects',
    icon: 'material-symbols:work',
    visible: true,
    disabled: false,
    items: [
      {
        key: 'dark-sky-conference-2023',
        label: 'Conference',
        icon: 'material-symbols:mic-rounded',
        url: '/projects/dark-sky-conference-2023',
        visible: true,
        disabled: false,
      },
    ],
  },
  {
    key: 'blog',
    label: 'Blog',
    icon: 'material-symbols:menu-book-outline',
    visible: true,
    disabled: false,
    items: [
      {
        key: 'blog-home',
        label: 'All',
        icon: 'material-symbols:menu-book-outline',
        url: '/blog/category/all',
        visible: true,
        disabled: false,
      },
      {
        key: 'blog-dark-sky-conservation',
        label: 'Conservation',
        icon: 'material-symbols:menu-book-outline',
        url: '/blog/category/dark-sky-conservation',
        visible: true,
        disabled: false,
      },
      {
        key: 'blog-people-of-space',
        label: 'People',
        icon: 'material-symbols:menu-book-outline',
        url: '/blog/category/people-of-space',
        visible: true,
        disabled: false,
      },
      {
        key: 'blog-space-exploration',
        label: 'Exploration',
        icon: 'material-symbols:menu-book-outline',
        url: '/blog/category/space-exploration',
        visible: true,
        disabled: false,
      },
      {
        key: 'blog-sustainable-development',
        label: 'Sustainability',
        icon: 'material-symbols:menu-book-outline',
        url: '/blog/category/sustainable-development',
        visible: true,
        disabled: false,
      },
    ],
  },
]
</script>

<template>
  <footer class="wrapper py-8 gap-8 w-full relative flex flex-col">
    <LandingGlass
      hover-effect="glow"
      glow-color="purple"
      gradient="mixed"
      intensity="low"
      interactive
    >
      <!-- Content -->
      <div class="relative z-10 flex flex-col gap-8 w-full lg:grid lg:grid-cols-[140px_3fr_140px]">
        <!-- Logo Section -->
        <div class="flex items-center justify-center lg:items-start lg:justify-start">
          <NuxtLink
            to="/"
            class="flex items-center gap-4 group"
          >
            <div class="flex gap-4 rounded-md p-1">
              <div
                class="relative flex h-[36px] w-[36px] items-center justify-center rounded-md border bg-white p-1 md:h-[44px] md:w-[44px]"
              >
                <IBImage
                  :img="{ src: '/astronera-logo.jpg' }"
                  class="h-full w-full opacity-90"
                />
              </div>
              <div class="flex justify-center">
                <h1
                  class="mt-[2px] flex cursor-pointer flex-col items-start justify-start pr-2 text-sm font-bold uppercase leading-none tracking-normal"
                >
                  Astron
                  <strong class="font-extrabold text-primary-400">Era</strong>
                </h1>
              </div>
            </div>
          </NuxtLink>
        </div>

        <!-- Links Section -->
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 xl:gap-8 w-full shrink-0">
          <div
            v-for="link in websiteLinks"
            :key="link.key"
            class="space-y-4"
          >
            <h4 class="font-space text-lg text-white text-center lg:text-left">
              {{ link.label }}
            </h4>
            <ul class="space-y-2">
              <li
                v-for="item in link.items"
                :key="item.key"
                class="text-center lg:text-left"
              >
                <NuxtLink
                  :to="item.url"
                  class="text-gray-400 hover:text-sky-400 transition-colors duration-300 text-sm inline-block"
                >
                  {{ item.label }}
                </NuxtLink>
              </li>
            </ul>
          </div>
        </div>

        <!-- Social Links -->
        <div class="flex flex-row justify-center gap-4 lg:flex-col lg:items-end lg:justify-start">
          <NuxtLink
            v-for="social in socials"
            :key="social.id"
            :to="social.url"
            target="_blank"
            class="group relative p-2 rounded-lg transition-all duration-300 hover:bg-sky-500/10 flex"
          >
            <Icon
              :name="social.icon"
              class="text-gray-400 group-hover:text-sky-400 transition-colors duration-300"
              size="24px"
            />
          </NuxtLink>
        </div>
      </div>
    </LandingGlass>
    <FooterBottomBar class="relative z-10" />
  </footer>
</template>

<style>
@keyframes glow {
  0%,
  100% {
    box-shadow:
      0 0 0 1px rgba(74, 222, 255, 0.1),
      0 0 8px rgba(74, 222, 255, 0.1),
      inset 0 0 4px rgba(74, 222, 255, 0.1);
  }
  50% {
    box-shadow:
      0 0 0 1px rgba(74, 222, 255, 0.2),
      0 0 16px rgba(74, 222, 255, 0.2),
      inset 0 0 8px rgba(74, 222, 255, 0.2);
  }
}

.animate-glow {
  animation: glow 4s ease-in-out infinite;
}
</style>

================
File: home/FeatureGroup.vue
================
<script setup lang="ts">
interface Feature {
  icon: string
  title: string
  description: string
  link: string
  linkText: string
}

interface Props {
  title: string
  description: string
  features: Feature[]
}

const props = defineProps<Props>()
</script>

<template>
  <div class="px-4 py-8">
    <h1 class="mb-4 text-center text-4xl font-bold">
      {{ title }}
    </h1>
    <p class="mb-8 text-center text-xl">
      {{ description }}
    </p>
    <div
      class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 rounded-lg border border-color overflow-hidden"
    >
      <div
        v-for="feature in features"
        :key="feature.title"
        class="foreground border-color flex flex-col border p-4 lg:p-8 shadow-md"
      >
        <div class="flex items-center gap-2 pb-2">
          <Icon
            :name="feature.icon"
            class="text-xl text-primary-900"
          />
          <h3 class="text-xl font-semibold">
            {{ feature.title }}
          </h3>
        </div>
        <span class="text-sm"
          >{{ feature.description }}

          <NuxtLink
            :to="feature.link"
            class="text-blue-800 hover:underline"
            >{{ feature.linkText }}
          </NuxtLink>
        </span>
      </div>
    </div>
  </div>
</template>

================
File: home/HomeButton.vue
================
<script setup lang="ts">
defineProps({
  cta: {
    type: String as PropType<string>,
    required: true,
  },
  hasIcon: {
    type: Boolean as PropType<boolean>,
    default: false,
  },
  icon: {
    type: String as PropType<string>,
    default: '',
  },
})
</script>

<template>
  <PrimeButton
    color="primary"
    size="large"
  >
    <Icon
      :class="hasIcon ? 'flex' : 'hidden absolute'"
      :name="icon"
    />
    {{ cta }}
  </PrimeButton>
</template>

<style scoped></style>

================
File: home/HomeCtaMain.vue
================
<script setup lang="ts">
defineProps({
  title: {
    type: String as PropType<string>,
    required: true,
  },
  body: {
    type: String as PropType<string>,
    required: true,
  },
  cta: {
    type: String as PropType<string>,
    required: true,
  },
})
</script>

<template>
  <div
    class="relative flex items-center text-white justify-center w-full p-10 mx-auto md:py-20 lg:py-40 bg-black"
  >
    <div class="flex flex-col items-center justify-center gap-4 text-center text-light">
      <h2 class="text-3xl font-bold">
        {{ title }}
      </h2>
      <p class="max-w-sm text-lg leading-snug text-center">
        {{ body }}
      </p>
      <NuxtLink to="auth/register">
        <PrimeButton
          class="p-2"
          color="primary"
          size="large"
        >
          {{ cta }}
        </PrimeButton>
      </NuxtLink>
    </div>
  </div>
</template>

<style scoped></style>

================
File: home/HomeFeatures.vue
================
<script setup lang="ts">
import features from '../../data/home/features.json'

// must list out icons for them to work, for some reason they don't load directly from JSON (nuxthq/ui bug)
const icons = [
  'material-symbols:group-add',
  'material-symbols:calendar-month',
  'material-symbols:android-messages-outline',
  'mdi:briefcase',
  'mdi:telescope',
  'material-symbols:circle-notifications',
]
</script>

<template>
  <div class="mx-auto py-[40px] md:py-[80px] lg:py-[160px]">
    <div class="mx-auto">
      <HomeHeading
        class="pb-16 md:pb-24"
        heading="What is AstroTribe?"
        subheading="Built By Astronomers For Astronomers"
      />
      <div
        class="grid grid-cols-1 items-start justify-center gap-4 md:grid-cols-2 md:gap-8 xl:grid-cols-3"
      >
        <div
          v-for="feature in features"
          :key="feature.id"
          class="text-white relative mx-auto h-full overflow-hidden rounded-lg p-8 shadow-md"
        >
          <IBImage
            :img="{
              src: feature.bgImg,
              alt: `${feature.title} background image`,
              height: '366px',
              width: '290px',
              quality: '70',
              format: 'webp',
            }"
            class="absolute left-0 top-0 h-full w-full object-cover"
          />
          <div class="absolute left-0 top-0 h-full w-full bg-zinc-900/80" />
          <div class="text-light relative z-50">
            <Icon
              :name="feature.icon"
              size="28px"
            />
            <div class="pt-4">
              <h1 class="text-lg font-semibold tracking-wider lg:text-2xl">
                {{ feature.title }}
              </h1>
              <p class="mt-2 w-11/12 text-sm leading-normal tracking-wider">
                {{ feature.description }}
              </p>
              <p
                v-if="!feature.isAvailable"
                class="text-success-test pt-2 text-xs font-semibold"
              >
                Coming soon
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<style scoped></style>

================
File: home/HomeFeatureTabs.vue
================
<script setup lang="ts">
const productSteps = [
  {
    id: 1,
    tabName: 'tab1',
    tabTitle: 'News',
    title: 'Stay Updated with Astronomy News',
    info: '10+ News Sources',
    body: 'We aggregate news from all major space agencies like NASA and ISRO, as well as private companies.',
    points: [
      'News from NASA, ISRO, and more',
      'Daily updates',
      'AI-powered article summaries',
      'Comprehensive coverage of private companies',
    ],
    cta: 'Check it out',
    available: true,
  },
  {
    id: 2,
    tabName: 'tab2',
    tabTitle: 'Companies',
    info: '20+ Companies Onboarded',
    title: 'Explore Government and Private Sector Companies',
    body: 'Our database will include all major government and private sector companies from around the world, our initial focus is Indian private companies.',
    points: [
      'Database of major government agencies',
      'Insights into private companies',
      'Follow companies of interest - coming soon',
      'Linked social profiles - coming soon',
    ],
    cta: 'Check it out',
    available: true,
  },
  {
    id: 3,
    tabName: 'tab3',
    tabTitle: 'People',
    info: '50+ People',
    title: 'Connect with Astronomy Enthusiasts',
    body: 'Join a global community of astronomy enthusiasts.',
    points: [
      'Connect with global enthusiasts',
      'Share your passion for astronomy',
      'Foster collaboration',
      'Hire AstroGuides',
    ],
    cta: 'Check it out',
    available: true,
  },
  {
    id: 4,
    tabName: 'tab4',
    tabTitle: 'Launches',
    info: 'Upcoming Launches',
    title: 'Never Miss a Launch',
    body: 'Stay informed about all upcoming launches from launch providers worldwide.',
    points: [
      'Database of upcoming launches',
      'Global launch providers',
      'Stay informed about space events',
      'Never miss an important launch',
    ],
    cta: 'Coming Q2 2024',
    available: false,
  },
]

const dummyData = {
  news: {
    id: 1,
    created_at: '2024-03-23 06:30:24.736222+00',
    updated_at: '2024-03-23 06:30:24.736222+00',
    title: 'Elastocaloric Refrigeration for Spaceflight Applications (ESRA)',
    body: 'Jun Cui Iowa State University ESI23 Cui Quadchart.pdf Elastocaloric materials heat up when exposed to a mechanical force and cool down, removing the same amount of heat from their environment, when the force is removed. Professor Cui will use the recently established DFT\\/machine learning guided metals development methodology to unravel the complex relationships between compositions, crystal structures, phase transformation, and fatigue behavior of the elastocaloric materials. He will develop novel, new elastocaloric materials and use them as the basis of a high-performance refrigeration system for NASA exploration applications. Back to ESI 2023',
    category_id: 16,
    author: null,
    description:
      'Jun Cui Iowa State University ESI23 Cui Quadchart.pdf Elastocaloric materials heat up when exposed to a mechanical force and cool down, removing the same amount of heat from their environment, when the force is removed. Professor Cui will use the\u2026',
    featured_image:
      'https://www.nasa.gov/wp-content/themes/nasa/assets/images/default-thumbnail.jpg',
    has_summary: false,
    published_at: '2024-03-21 18:30:00+00',
    source: 'nasa',
    url: 'https://www.nasa.gov/directorates/stmd/space-tech-research-grants/esi/elastocaloric-refrigeration-for-spaceflight-applications-esra/',
  },

  company: {
    id: 1,
    name: 'Agnikul Cosmos',
    description:
      'Agnikul Cosmos is a space tech company building small satellite launch vehicles. We are building a full stack launch vehicle to take small satellites to space.',
    founding_year: 2017,
    logo_url: 'agnikul-logo.jpg',
    url: 'https://agnikul.in/#/',
    is_government: false,
    category_id: 1,
    scrape_frequency: 'bi_weekly',
    social_media: {
      linkedin_url: 'https://www.linkedin.com/company/agnikul-cosmos/',
      twitter_url: 'https://twitter.com/@agnikulcosmos',
      instagram_url: 'https://instagram.com/agnikul/',
      youtube_url: 'https://www.youtube.com/@agnikulcosmos1404',
    },
  },
  user: {
    id: 'e1bf12c6-aad4-4905-bda2-127c027504a3',
    email: 'shwetakk6@gmail.com',
    given_name: 'Shweta',
    surname: 'Kulkarni',
    username: 'Shweta',
    dob: '1995-11-16',
    gender_id: 2,
    created_at: '2023-08-11 16:49:09.163+00',
    updated_at: '2023-08-11 16:49:09.163+00',
    last_seen: '2023-08-11 16:49:09.163+00',
    avatar: 'shweta-kulkarni.jpg',
    introduction: null,
    quote: null,
    followed_count: 1,
    followers_count: 1,
    plan: 'free',
    role: 'admin',
  },
} as const

const getDummyData = (type: string) => {
  return dummyData[type as keyof typeof dummyData]
}
</script>

<template>
  <div>
    <IBTabView :tabs="productSteps">
      <template
        v-for="feat in productSteps"
        :key="feat.id"
        #[feat.tabName]
      >
        <div class="grid grid-cols-1 gap-8 md:grid-cols-2">
          <div class="background border-color space-y-4 rounded-md border p-4 lg:p-8">
            <h3 class="text-2xl">
              {{ feat.title }}
            </h3>
            <!-- <p> {{ feat.body }}</p> -->
            <ul class="list-inside list-disc">
              <li
                v-for="point in feat.points"
                :key="point"
              >
                {{ point }}
              </li>
            </ul>
            <PrimeMessage severity="info">
              {{ feat.info }}
            </PrimeMessage>
          </div>
          <div class="space-y-4">
            <NewsCard
              v-if="feat.id === 1"
              :news="getDummyData('news')"
            />
            <CompanyCard
              v-else-if="feat.id === 2"
              :company="getDummyData('company')"
            />
            <UserCard
              v-else-if="feat.id === 3"
              :user="getDummyData('user')"
            />
            <div v-else>
              <PrimeMessage severity="info"> Coming Very Soon </PrimeMessage>
            </div>
            <PrimeButton class="flex w-full justify-center"> Join to see more </PrimeButton>
          </div>
        </div>
      </template>
    </IBTabView>
  </div>
</template>

<style scoped></style>

================
File: home/HomeHeading.vue
================
<script setup lang="ts">
defineProps({
  heading: {
    type: String,
    required: true,
  },
  subheading: {
    type: String,
    required: true,
  },
})
</script>

<template>
  <div class="flex flex-col justify-center items-center text-center lg:pl-8">
    <p class="mb-4 text-base font-bold uppercase tracking-tight text-primary-600">
      {{ heading }}
    </p>
    <h2 class="text-3xl font-semibold leading-normal max-w-80">
      {{ subheading }}
    </h2>
  </div>
</template>

<style scoped></style>

================
File: home/HomeHero.vue
================
<script setup lang="ts">
const video = {
  url: 'https://www.youtube.com/embed/x5ijmeCJ42s?si=V_t46bCe9ClaKmrN?mute=0&autoplay=1',
  thumbnail: 'images/hero-image.jpg',
  alt: 'Astron Era Hero Video',
}

const bgImg = 'images/hero-image.jpg'
</script>

<template>
  <div class="relative min-h-screen text-white w-full">
    <IBImage
      :img="{
        src: bgImg,
        quality: '80',
        format: 'webp',
      }"
      class="absolute left-0 top-0 h-full w-full bg-center bg-no-repeat object-cover"
    />
    <div class="absolute left-0 top-0 z-10 h-full w-full bg-zinc-900" />
    <div
      class="relative mx-auto grid max-w-[1920px] gap-8 px-4 py-32 md:px-16 lg:grid-cols-[1.5fr_1.75fr] xl:gap-16 xl:px-32"
    >
      <!-- Hero Left -->
      <div
        class="relative z-50 flex h-full w-full flex-col items-center gap-8 text-center lg:items-start lg:text-left"
      >
        <div
          class="h-16 w-16 overflow-hidden rounded-full bg-white p-2 shadow-lg lg:h-24 lg:w-24 xl:p-4"
        >
          <IBImage
            :img="{
              src: '/astronera-logo.jpg',
            }"
          />
        </div>
        <h1 class="max-w-lg text-4xl font-bold leading-tight lg:text-5xl">
          Explore The Universe And Grow With Us
        </h1>
        <p class="max-w-sm text-xl font-semibold">
          AstroTribe is a community of astronomers and enthusiasts unveiling the mysteries of the
          cosmos together.
        </p>
        <div>
          <NuxtLink :to="`${$config.public.authURL}/register`">
            <PrimeButton> Signup, it's FREE! </PrimeButton>
          </NuxtLink>
        </div>
      </div>
      <div class="relative z-50 mx-auto flex h-full w-full items-center justify-center">
        <AppVideoModal :video="video" />
      </div>
    </div>
  </div>
</template>

================
File: home/HomeProductStep.vue
================
<script setup lang="ts">
defineProps({
  title: {
    type: String as PropType<string>,
    required: true,
  },
  body: {
    type: String as PropType<string>,
    required: true,
  },
  cta: {
    type: String as PropType<string>,
    required: true,
  },
  imageRight: {
    type: Boolean as PropType<boolean>,
    required: true,
  },
  imgSrc: {
    type: String as PropType<string>,
    required: true,
  },
})
</script>

<template>
  <div
    :class="
      imageRight
        ? 'mx-auto flex w-full flex-col items-center justify-between gap-10 md:flex-row-reverse'
        : 'mx-auto flex w-full flex-col items-center justify-between gap-10 md:flex-row'
    "
  >
    <div class="relative aspect-auto h-[360px] shadow-2xl md:w-[70%]">
      <IBImage
        :img="{
          src: imgSrc,
          alt: `${title} AstroTribe feature`,
          format: 'webp',
        }"
        class="h-full w-full overflow-hidden rounded-lg object-cover object-left"
      />
      <div class="absolute left-0 top-0 h-full w-full rounded-lg bg-zinc-900/10 block" />
    </div>
    <div class="px-4 md:w-[50%]">
      <h4 class="mb-4 text-xl font-bold">
        {{ title }}
      </h4>
      <p class="pb-2 text-sm">
        {{ body }}
      </p>
      <a class="text-success-600 text-sm font-semibold">{{ cta }}</a>
    </div>
  </div>
</template>

<style scoped></style>

================
File: home/HomeTestimonial.vue
================
<script setup lang="ts">
import testimonials from '../../data/home/testimonials.json'

interface Testimonial {
  image: string
  name: string
  company: string
  quote: string
}
</script>

<template>
  <div>
    <HomeHeading
      heading="Hear From The Community"
      subheading="Discover How We're Making a Difference"
      class="pb-16 md:pb-24"
    />
    <AppSwiper
      :items="testimonials"
      type="testimonial"
    >
      <template #default="{ item }: { item: Testimonial }">
        <div class="background h-full rounded-md border border-color p-6">
          <div class="flex h-auto items-center">
            <IBImage
              :img="{
                src: item.image,
                alt: item.name,
                width: '60px',
                height: '60px',
                loading: 'lazy',
                quality: '80',
                format: 'webp',
              }"
              class="h-14 w-14 rounded-full"
            />
            <div class="flex flex-col items-start pl-4">
              <h3 class="text-xl font-semibold">
                {{ item.name }}
              </h3>
              <p class="text-sm">
                {{ item.company }}
              </p>
            </div>
          </div>
          <div class="pt-8">
            <p class="relative m-2 h-auto rounded-sm bg-primary-950 p-3 text-sm italic">
              <Icon
                name="mdi:format-quote-open"
                class="absolute -top-4 left-4 text-white"
                size="28px"
              />
              {{ item.quote }}
              <Icon
                name="mdi:format-quote-close"
                class="absolute -bottom-4 right-4 text-white"
                size="28px"
              />
            </p>
          </div>
        </div>
      </template>
    </AppSwiper>
  </div>
</template>

<style></style>

================
File: home/HomeTrusted.vue
================
<script setup lang="ts">
const trustedImages = [
  'images/trusted/dst.png',
  'images/trusted/iau-oad.png',
  'images/trusted/in-fed.png',
  'images/trusted/iimb-nsrcel.png',
]
</script>

<template>
  <div class="flex flex-col gap-8 rounded-b-xl p-12 px-6 bg-zinc-200">
    <h4 class="text-lg block gap-4 text-center font-bold uppercase text-black"> Our Partners </h4>
    <div class="grid w-full grid-cols-2 justify-between gap-4 md:grid-cols-4">
      <IBImage
        v-for="(image, index) in trustedImages"
        :key="index"
        :img="{ src: image }"
        class="mx-auto h-16 lg:h-20"
      />
    </div>
  </div>
</template>

================
File: landing/LandingCTASocial.vue
================
<script setup lang="ts">
import { onMounted } from 'vue'
import { useAnimation } from '~/composables/useAnimation'

const { fadeInUp, scaleIn } = useAnimation()

const { socials } = useSocialLinks()

const socialMedia = computed(() => {
  return socials.map((social) => {
    return {
      name: social.platform,
      icon: social.icon,
      link: social.url,
      gradient: `from-${social.color.from}-500 to-${social.color.to}-600`,
      hoverGradient: `hover:from-${social.color.from}-400 hover:to-${social.color.to}-500`,
    }
  })
})

onMounted(() => {
  fadeInUp('.social-media-cta')
  scaleIn('.social-button')
})

const firstLetterUpperCase = (str: string) => {
  return str.charAt(0).toUpperCase() + str.slice(1)
}
</script>

<template>
  <section>
    <LandingGlass
      hover-effect="glow"
      glow-color="purple"
      gradient="mixed"
      intensity="low"
      interactive
      isolate-content
    >
      <div class="social-media-cta space-y-12">
        <!-- Social Media Section -->
        <div class="text-center">
          <h2 class="text-3xl md:text-4xl font-bold text-white mb-4 font-space">
            Let's stay in touch
          </h2>
          <p class="text-gray-300 mb-8 max-w-2xl mx-auto">
            Join the community and stay updated with the latest space news and platform updates
          </p>

          <!-- Social Buttons -->
          <div class="flex flex-wrap justify-center gap-4">
            <NuxtLink
              v-for="platform in socialMedia"
              :key="platform.name"
              :href="platform.link"
              class="social-button group"
            >
              <div class="relative">
                <!-- Button -->
                <PrimeButton
                  class="relative z-10 border-none min-w-[160px] bg-gradient-to-r transition-all duration-300"
                  :class="[platform.gradient, platform.hoverGradient]"
                  size="large"
                >
                  <template #icon>
                    <Icon
                      :name="platform.icon"
                      size="24"
                    />
                  </template>
                  {{ firstLetterUpperCase(platform.name) }}
                </PrimeButton>

                <!-- Glow Effect -->
                <div
                  class="absolute inset-0 opacity-0 group-hover:opacity-100 blur-xl transition-opacity duration-300 bg-gradient-to-r"
                  :class="platform.gradient"
                />
              </div>
            </NuxtLink>
          </div>
        </div>

        <!-- Newsletter Section -->
        <!-- <div class="max-w-2xl mx-auto w-full space-y-6">
          <h3 class="text-xl text-center text-white">Subscribe to Our Newsletter</h3>

          <div class="relative">
            <div class="flex gap-4">
              <PrimeInputText
                class="flex-1 bg-primary-900/50 border-primary-800/50 focus:border-sky-500/50 rounded-lg"
                placeholder="Enter your email"
              />
              <PrimeButton
                label="Subscribe"
                class="bg-gradient-to-r from-sky-500 to-blue-600 hover:from-sky-400 hover:to-blue-500 transition-all duration-300"
              />
            </div>

            <p class="text-xs text-gray-400 mt-2 text-center">
              By subscribing, you agree to receive space-related updates. Unsubscribe at any time.
            </p>
          </div>
        </div> -->
      </div>
    </LandingGlass>
  </section>
</template>

<style scoped>
:deep(.p-inputtext) {
  background: rgba(15, 23, 42, 0.5);
  border-color: rgba(30, 41, 59, 0.5);
  color: white;
}

:deep(.p-inputtext:focus) {
  border-color: rgba(14, 165, 233, 0.5);
  box-shadow: none;
}

:deep(.p-inputtext::placeholder) {
  color: rgba(148, 163, 184, 0.7);
}
</style>

================
File: landing/LandingFeatures.vue
================
<script setup lang="ts">
import { ref, onMounted } from 'vue'
import { gsap } from 'gsap'
import { useId } from '#app'

const features = [
  {
    id: useId(),
    title: '24/7 News Coverage',
    subtitle: '20+ trusted space news sources in one place',
    icon: 'mdi:earth',
    metrics: ['Live updates', 'Global coverage'],
  },
  {
    id: useId(),
    title: 'Community-Driven',
    subtitle: 'Quality content rises to the top',
    icon: 'mdi:thumb-up',
    metrics: ['Upvote/Downvote', 'Trending news'],
  },
  {
    id: useId(),
    title: 'Custom Categories',
    subtitle: 'Follow what interests you',
    icon: 'mdi:tune-vertical',
    metrics: ['Personalized feed', 'Topic filters'],
  },
  {
    id: useId(),
    title: 'Smart Bookmarks',
    subtitle: 'Save and organize your reading list',
    icon: 'mdi:bookmark-multiple',
    metrics: ['Custom folders', 'Quick access'],
  },
]

onMounted(() => {
  gsap.from('.feature-card', {
    y: 40,
    opacity: 0,
    duration: 0.8,
    stagger: 0.2,
    ease: 'power2.out',
    scrollTrigger: {
      trigger: '.features-grid',
      start: 'top bottom-=100px',
      toggleActions: 'play none none reverse',
    },
  })
})

const { loginURL, authURL } = useRuntimeConfig().public
</script>

<template>
  <section>
    <LandingGlass
      gradient="blue"
      intensity="low"
      class="mb-24"
      isolate-content
    >
      <div class="py-8 md:py-12 space-y-8">
        <LandingTitle
          title="Your Space Hub"
          subtitle="All your space in one place"
          class="!pb-8"
        />

        <div class="features-grid grid grid-cols-1 md:grid-cols-2 gap-6">
          <div
            v-for="feature in features"
            :key="feature.id"
            class="feature-card"
          >
            <PrimeCard
              class="h-full bg-primary-900/30 border border-primary-900/50 hover:border-sky-500/30 transition-all duration-300"
            >
              <template #title>
                <div class="flex items-center space-x-3">
                  <div class="p-2 flex rounded-lg bg-sky-500/10">
                    <Icon
                      :name="feature.icon"
                      class="text-sky-400"
                      size="24"
                    />
                  </div>
                  <div>
                    <h3 class="text-lg font-medium text-white">{{ feature.title }}</h3>
                    <p class="text-sm text-gray-400">{{ feature.subtitle }}</p>
                  </div>
                </div>
              </template>

              <template #content>
                <div class="flex flex-wrap gap-2 mt-4">
                  <span
                    v-for="(metric, index) in feature.metrics"
                    :key="index"
                    class="px-3 py-1 rounded-full text-xs bg-sky-900/30 text-sky-300 border border-sky-900/50"
                  >
                    {{ metric }}
                  </span>
                </div>
              </template>
            </PrimeCard>
          </div>
        </div>
      </div>
    </LandingGlass>
    <div class="mt-6 flex justify-center">
      <NuxtLink
        :to="String(`${authURL}${loginURL}`)"
        external
        class="relative group"
      >
        <PrimeButton
          size="large"
          class="flex !text-2xl gap-4 min-w-[280px] relative z-10 bg-gradient-to-r from-primary-600 via-primary-500 to-primary-700 hover:from-primary-500 hover:via-primary-400 hover:to-primary-600 transition-all duration-300 text-lg shadow-lg shadow-primary-600/30 hover:shadow-primary-500/40 hover:-translate-y-0.5"
        >
          Start Exploring Today,
          <strong> It's Free </strong>
          <Icon
            name="mdi:rocket"
            size="48"
            class="text-white"
          />
        </PrimeButton>
        <div
          class="absolute inset-0 bg-gradient-to-r from-primary-600/20 to-primary-400/20 blur-xl group-hover:blur-2xl transition-all duration-300 z-0"
        ></div>
      </NuxtLink>
    </div>
  </section>
</template>

<style scoped>
@keyframes twinkle {
  0%,
  100% {
    opacity: 0.4;
  }
  50% {
    opacity: 1;
  }
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-4px);
  }
}

.animate-twinkle {
  animation: twinkle 2s ease-in-out infinite;
}

.animate-twinkle-delayed {
  animation: twinkle 2s ease-in-out infinite;
  animation-delay: 1s;
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

.animate-float-delayed {
  animation: float 3s ease-in-out infinite;
  animation-delay: 1.5s;
}
</style>

================
File: landing/LandingFuture.vue
================
<script setup lang="ts">
import { ref, onMounted } from 'vue'
import gsap from 'gsap'
import { useAnimation } from '~/composables/useAnimation'

const { pulseAnimation } = useAnimation()

const features = [
  {
    icon: 'mdi:robot',
    title: 'AI News Summaries',
    description: 'Get concise, AI-generated summaries of the latest space news.',
    color: 'from-blue-500/20 to-purple-600/20',
    gradient: 'bg-gradient-to-br from-blue-500 to-purple-600',
    comingSoon: 'Q4 2024',
  },
  {
    icon: 'mdi:file-document-outline',
    title: 'Latest Research',
    description: 'Stay updated with simplified summaries of recent arXiv papers.',
    color: 'from-green-500/20 to-teal-600/20',
    gradient: 'bg-gradient-to-br from-green-500 to-teal-600',
    comingSoon: 'Q4 2024',
  },
  {
    icon: 'mdi:rocket-launch',
    title: 'Company Updates',
    description: 'Follow the latest news and updates from your favorite space companies.',
    color: 'from-red-500/20 to-orange-600/20',
    gradient: 'bg-gradient-to-br from-red-500 to-orange-600',
    comingSoon: 'Q1 2025',
  },
  {
    icon: 'mdi:account-group',
    title: 'Networking',
    description: 'Connect with other space enthusiasts and professionals in the community.',
    color: 'from-yellow-500/20 to-amber-600/20',
    gradient: 'bg-gradient-to-br from-yellow-500 to-amber-600',
    comingSoon: 'Q2 2025',
  },
]

const featureItems = ref([])
const ctaButton = ref(null)

onMounted(() => {
  // Fade in feature items
  gsap.fromTo(
    featureItems.value,
    { y: 50, opacity: 0 },
    {
      y: 0,
      opacity: 1,
      duration: 0.8,
      stagger: 0.2,
      scrollTrigger: {
        trigger: '.features-grid',
        start: 'top bottom',
        toggleActions: 'play none none reverse',
      },
    },
  )

  // Pulse animation for CTA button
  if (ctaButton.value) {
    pulseAnimation(ctaButton.value)
  }
})
</script>

<template>
  <section>
    <LandingGlass
      gradient="mixed"
      intensity="low"
      interactive
      isolate-content
    >
      <LandingTitle
        title="Into the Future"
        subtitle="Elevate Your Space Exploration Experience"
        gradient="mixed"
        intensity="low"
      />
      <div class="features-grid grid grid-cols-1 md:grid-cols-2 gap-8 mb-16">
        <div
          v-for="(feature, index) in features"
          :key="index"
          ref="featureItems"
          class="group/feature relative"
        >
          <!-- Feature Card -->
          <div
            class="relative h-full rounded-xl bg-primary-900/30 backdrop-blur-sm p-8 border border-primary-800/30 transition-all duration-500 hover:border-sky-500/30"
          >
            <!-- Hover Gradient -->
            <div
              class="absolute inset-0 bg-gradient-to-br opacity-0 group-hover/feature:opacity-100 transition-opacity duration-500 rounded-xl"
              :class="feature.color"
            ></div>

            <!-- Content -->
            <div class="relative z-10 flex flex-col h-full">
              <!-- Icon -->
              <div
                class="w-16 h-16 rounded-xl flex items-center justify-center mb-6"
                :class="feature.gradient"
              >
                <Icon
                  :name="feature.icon"
                  size="32"
                  class="text-white"
                />
              </div>

              <!-- Text Content -->
              <h3 class="text-xl font-bold text-white mb-3">{{ feature.title }}</h3>
              <p class="text-gray-300 mb-6">{{ feature.description }}</p>

              <!-- Coming Soon Badge -->
              <div class="mt-auto flex items-center gap-2">
                <span class="text-sky-400 text-sm">Coming</span>
                <span
                  class="px-2 py-1 rounded-full text-xs bg-sky-500/10 border border-sky-500/20 text-sky-400"
                >
                  {{ feature.comingSoon }}
                </span>
              </div>
            </div>
          </div>

          <!-- Card Glow -->
          <div
            class="absolute inset-0 bg-sky-500/5 group-hover/feature:bg-sky-500/10 blur-xl transition-all duration-500 -z-10 rounded-xl"
          />
        </div>
      </div>
    </LandingGlass>
  </section>
</template>

================
File: landing/LandingGlass.vue
================
<script setup lang="ts">
interface Props {
  padded?: boolean
  gradient?: keyof typeof gradientConfigs
  intensity?: keyof typeof intensityConfigs
  interactive?: boolean
  glowColor?: string
  borderColor?: string
  hoverEffect?: keyof typeof hoverEffects
  isolateContent?: boolean
  rounded?: boolean
  overflow?: boolean
}

// Move configurations outside component for better reuse and performance
const gradientConfigs = {
  blue: ['bg-sky-500', 'bg-blue-500', 'bg-sky-400'],
  purple: ['bg-purple-500', 'bg-indigo-500', 'bg-violet-500'],
  mixed: ['bg-sky-500', 'bg-purple-500', 'bg-blue-500'],
  green: ['bg-emerald-500', 'bg-green-500', 'bg-teal-500'],
  orange: ['bg-orange-500', 'bg-amber-500', 'bg-yellow-500'],
} as const

const intensityConfigs = {
  low: {
    backdrop: 'backdrop-blur-lg',
    bgOpacity: 'bg-primary-950/30',
    blobOpacity: 'opacity-5',
    hoverBgOpacity: 'hover:bg-primary-950/40',
  },
  medium: {
    backdrop: 'backdrop-blur-xl',
    bgOpacity: 'bg-primary-950/50',
    blobOpacity: 'opacity-10',
    hoverBgOpacity: 'hover:bg-primary-950/60',
  },
  high: {
    backdrop: 'backdrop-blur-2xl',
    bgOpacity: 'bg-primary-950/70',
    blobOpacity: 'opacity-15',
    hoverBgOpacity: 'hover:bg-primary-950/80',
  },
} as const

const hoverEffects = {
  glow: (color: string) => `hover:shadow-[0_0_30px_rgba(var(--color-${color}-500),0.3)]`,
  scale: 'hover:scale-[1.02]',
  blur: 'hover:backdrop-blur-2xl',
  none: '',
} as const

// Default props with better typing
const props = withDefaults(defineProps<Props>(), {
  padded: true,
  gradient: 'blue',
  intensity: 'medium',
  interactive: false,
  glowColor: 'sky',
  borderColor: 'sky',
  hoverEffect: 'none',
  isolateContent: true,
  rounded: true,
  overflow: false,
})

// Memoize complex computations
const gradientConfig = computed(() => gradientConfigs[props.gradient])
const intensityConfig = computed(() => intensityConfigs[props.intensity])

const baseClasses = computed(() => [
  'relative group w-full',
  intensityConfig.value.backdrop,
  intensityConfig.value.bgOpacity,
  'transition-all duration-500',
  props.rounded ? 'rounded-2xl' : 'rounded-none',
  props.overflow ? '' : 'overflow-hidden',
])

const hoverClasses = computed(() => {
  if (!props.interactive) return ''

  const effect =
    typeof hoverEffects[props.hoverEffect] === 'function'
      ? hoverEffects[props.hoverEffect](props.glowColor)
      : hoverEffects[props.hoverEffect]

  return `transition-all duration-500 ${effect} ${intensityConfig.value.hoverBgOpacity}`
})

const borderClasses = computed(() => ({
  ['border-' + props.borderColor + '-500/' + (props.intensity === 'low' ? '20' : '30')]: true,
  'rounded-2xl': props.rounded,
  [`group-hover:border-${props.borderColor}-500/50`]: props.interactive,
}))

const contentClasses = computed(() => ({
  'p-12': props.padded,
  'isolation-auto': props.isolateContent,
}))
</script>

<template>
  <div :class="[baseClasses, hoverClasses]">
    <div
      class="absolute inset-0 transition-opacity duration-500"
      :class="[intensityConfig.blobOpacity, { 'group-hover:opacity-[0.15]': interactive }]"
    >
      <template
        v-for="(gradientClass, index) in gradientConfig"
        :key="index"
      >
        <div
          :class="[
            'absolute rounded-full mix-blend-multiply filter blur-3xl',
            gradientClass,
            {
              'top-0 -left-40 w-96 h-96': index === 0,
              'top-0 -right-40 w-96 h-96 animation-delay-2000': index === 1,
              '-bottom-32 left-20 w-96 h-96 animation-delay-4000': index === 2,
            },
          ]"
        />
      </template>
    </div>

    <!-- Noise texture -->
    <div
      class="absolute inset-0 bg-noise pointer-events-none transition-opacity duration-500"
      :class="{
        'opacity-[0.02] group-hover:opacity-[0.03]': interactive,
        'opacity-[0.02]': !interactive,
      }"
    />

    <!-- Electric edges -->
    <div class="absolute inset-1">
      <div
        class="absolute inset-0 border transition-colors duration-500"
        :class="borderClasses"
      />
      <div
        class="absolute inset-0"
        :class="{ 'rounded-2xl': rounded }"
        :style="{
          '--glow-color': `var(--color-${glowColor}-500)`,
        }"
      />
    </div>

    <!-- Content -->
    <slot name="header" />
    <div
      class="relative z-10"
      :class="contentClasses"
    >
      <slot />
    </div>
  </div>
</template>

<style scoped>
.bg-noise {
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
}
</style>

================
File: landing/LandingHero.vue
================
<script setup lang="ts">
import { ref, onMounted, onUnmounted } from 'vue'
import { gsap } from 'gsap'

// Simplified and more impactful word rotation
const highlightedWords = ['Discover', 'Explore', 'Experience']
const currentWord = ref(highlightedWords[0])
const isTransitioning = ref(false)
const videoLoaded = ref(false)
const videoElement = ref<HTMLVideoElement | null>(null)

const rotateWords = () => {
  if (isTransitioning.value) return

  isTransitioning.value = true
  const currentIndex = highlightedWords.indexOf(currentWord.value)
  const nextIndex = (currentIndex + 1) % highlightedWords.length

  gsap.to('.highlight-word', {
    y: 40,
    opacity: 0,
    duration: 0.4,
    onComplete: () => {
      currentWord.value = highlightedWords[nextIndex]
      gsap.fromTo('.highlight-word', { y: -40, opacity: 0 }, { y: 0, opacity: 1, duration: 0.4 })
      isTransitioning.value = false
    },
  })
}

const handleVideoLoad = () => {
  videoLoaded.value = true
  if (videoElement.value) {
    videoElement.value.play().catch(console.error)
  }
  gsap.to('.video-fade-in', {
    opacity: 1,
    duration: 1.5,
    ease: 'power2.out',
  })
}

let wordRotationInterval: number | null = null

onMounted(() => {
  if (import.meta.client) {
    gsap.from('.hero-content', {
      y: 30,
      opacity: 0,
      duration: 1,
      ease: 'power3.out',
    })

    if (videoElement.value) {
      videoElement.value.play().catch(console.error)
    }

    wordRotationInterval = setInterval(rotateWords, 3000)
  }
})

onUnmounted(() => {
  if (wordRotationInterval) {
    clearInterval(wordRotationInterval)
  }
})

const { loginURL, authURL } = useRuntimeConfig().public
</script>

<template>
  <div class="relative w-full h-screen overflow-hidden">
    <div class="absolute inset-0">
      <ClientOnly>
        <template #fallback>
          <NuxtImg
            src="images/hero-image.jpg"
            alt="Space background"
            class="absolute inset-0 w-full h-full object-cover"
          />
        </template>

        <NuxtImg
          v-show="!videoLoaded"
          src="images/hero-image.jpg"
          alt="Space background"
          class="absolute inset-0 w-full h-full object-cover transition-opacity duration-500"
        />

        <video
          ref="videoElement"
          class="video-fade-in absolute inset-0 w-full h-full object-cover"
          :class="{ 'opacity-0': !videoLoaded }"
          muted
          loop
          playsinline
          preload="auto"
          poster="/images/hero-image.jpg"
          @loadeddata="handleVideoLoad"
        >
          <source
            src="/videos/astronera-hero-video.mp4"
            type="video/mp4"
          />
        </video>
      </ClientOnly>

      <!-- Gradient overlay -->
      <div
        class="absolute inset-0"
        style="
          background: linear-gradient(
            to right,
            rgba(2, 6, 23, 0.95) 0%,
            rgba(2, 6, 23, 0.8) 40%,
            rgba(2, 6, 23, 0.1) 100%
          );
        "
      ></div>
    </div>

    <!-- Hero Content -->
    <div
      class="relative z-10 wrapper mx-auto px-6 min-h-screen flex items-center justify-center text-center"
    >
      <div class="hero-content max-w-4xl py-20">
        <div class="space-y-8">
          <!-- Main tagline -->
          <h1
            class="font-space-grotesk text-5xl md:text-7xl lg:text-8xl font-bold text-white leading-tight tracking-tight"
          >
            A Cosmos to
            <div class="relative block mt-4">
              <span
                :key="currentWord"
                class="highlight-word block text-sky-400 bg-gradient-to-r from-sky-400 to-blue-500 bg-clip-text text-transparent"
              >
                {{ currentWord }}
              </span>
            </div>
          </h1>

          <!-- Enhanced subtitle -->
          <p class="font-inter text-xl md:text-2xl text-gray-300 max-w-2xl mx-auto leading-relaxed">
            Your gateway to space exploration. Breaking news, mission updates, and astronomical
            discoveries —
            <span class="text-sky-400">100% free</span>.
          </p>

          <!-- CTA section -->
          <div class="flex flex sm:flex-row justify-center gap-4 pt-8">
            <NuxtLink
              :to="String(`${authURL}${loginURL}`)"
              external
            >
              <PrimeButton
                size="large"
                class="font-inter bg-gradient-to-r from-sky-500 to-blue-600 hover:from-sky-400 hover:to-blue-500 transition-all duration-300 text-lg px-8"
              >
                🚀 Start Reading
              </PrimeButton>
            </NuxtLink>
            <NuxtLink to="/darksky">
              <PrimeButton
                size="large"
                class="font-inter bg-gradient-to-r from-sky-500 to-blue-600 hover:from-sky-400 hover:to-blue-500 transition-all duration-300 text-lg px-8"
              >
                🌃 Dark Sky
              </PrimeButton>
            </NuxtLink>
          </div>
        </div>
      </div>
    </div>

    <!-- Scroll indicator -->
    <div class="absolute bottom-8 w-full flex justify-center">
      <div class="flex flex-col items-center gap-2">
        <span class="font-inter text-sm text-gray-400">Scroll to explore</span>
        <div class="w-6 h-10 border-2 border-white/20 rounded-full flex justify-center">
          <div class="w-1.5 h-3 bg-sky-400 rounded-full mt-2 animate-bounce"></div>
        </div>
      </div>
    </div>
  </div>
</template>

<style scoped>
@import url('https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap');
.video-fade-in {
  transition: opacity 1.5s ease-out;
}

.highlight-word {
  transition: all 0.4s ease-out;
}
</style>

================
File: landing/LandingImageCycle.vue
================
<script setup lang="ts">
import { ref, onMounted, onUnmounted } from 'vue'

const props = defineProps({
  images: {
    type: Array as () => string[],
    required: true,
  },
  interval: {
    type: Number,
    default: 7000,
  },
})

const currentImageIndex = ref(0)
let intervalId: number | null = null

const nextImage = () => {
  currentImageIndex.value = (currentImageIndex.value + 1) % props.images.length
}

onMounted(() => {
  intervalId = setInterval(nextImage, props.interval)
})

onUnmounted(() => {
  if (intervalId !== null) {
    clearInterval(intervalId)
  }
})
</script>

<template>
  <div class="absolute inset-0 w-full h-full">
    <TransitionGroup
      name="fade"
      tag="div"
    >
      <div
        v-for="(image, index) in images"
        v-show="index === currentImageIndex"
        :key="image"
        class="absolute inset-0 w-full h-full bg-cover bg-center transition-opacity duration-1000"
        :style="{ backgroundImage: `url(${image})` }"
      ></div>
    </TransitionGroup>
  </div>
</template>

<style scoped>
.fade-enter-active,
.fade-leave-active {
  transition: opacity 1s ease;
}
.fade-enter-from,
.fade-leave-to {
  opacity: 0;
}
</style>

================
File: landing/LandingPricing.vue
================
<script setup lang="ts">
import { onMounted } from 'vue'
import { useAnimation } from '~/composables/useAnimation'

const { fadeInUp } = useAnimation()

const features = [
  {
    text: 'Comprehensive News Feed',
    description: 'Access space news from 20+ trusted sources, updated 24/7',
    icon: 'mdi:newspaper-variant-outline',
  },
  {
    text: 'Community-Driven Content',
    description: 'Upvote and downvote articles to surface the best content',
    icon: 'mdi:thumb-up-outline',
  },
  {
    text: 'Personalized Experience',
    description: 'Customize your feed by selecting specific space categories',
    icon: 'mdi:tune-vertical',
  },
  {
    text: 'Smart Bookmarking',
    description: 'Save and organize articles into custom folders',
    icon: 'mdi:bookmark-outline',
  },
]

const comingSoon = [
  {
    text: 'Research Integration',
    description: 'Access latest space research papers and findings',
    icon: 'mdi:file-document-outline',
  },
  {
    text: 'AI-Powered Summaries',
    description: 'Get quick, accurate summaries of long articles',
    icon: 'mdi:robot-outline',
  },
  {
    text: 'Space Company Profiles',
    description: 'Track developments from leading space companies',
    icon: 'mdi:office-building-outline',
  },
]

onMounted(() => {
  fadeInUp('.pricing-content')
})
</script>

<template>
  <section class="py-12 md:py-24">
    <LandingGlass
      gradient="mixed"
      intensity="low"
    >
      <LandingTitle
        title="Your Gateway to Space News"
        subtitle="One platform for all your space news needs - completely free"
      />
      <div class="pricing-content flex flex-col items-center px-4 md:px-6">
        <!-- Price Tag -->
        <div class="flex items-baseline gap-2 mb-8">
          <span class="text-4xl md:text-6xl font-bold text-sky-400">$0</span>
          <span class="text-xl text-gray-400">/</span>
          <span
            class="ml-2 px-4 py-1 text-sm bg-emerald-500/10 border border-emerald-500/20 text-emerald-400"
          >
            FOREVER FREE
          </span>
        </div>

        <!-- Current Features -->
        <h3 class="text-xl text-white mb-6 font-medium">Available Now</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 lg:gap-6 mb-12 w-full max-w-4xl">
          <div
            v-for="feature in features"
            :key="feature.text"
            class="group relative flex"
          >
            <div
              class="relative rounded-xl bg-primary-900/30 backdrop-blur-sm p-4 border border-primary-800/30 transition-all duration-300 hover:border-sky-500/30 w-full"
            >
              <div
                class="absolute inset-0 bg-gradient-to-br from-sky-500/5 to-blue-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-xl"
              />
              <div class="relative z-10 flex items-start gap-3">
                <Icon
                  :name="feature.icon"
                  class="text-sky-400 flex-shrink-0 mt-1"
                  size="24"
                />
                <div>
                  <h4 class="font-medium text-white mb-1">{{ feature.text }}</h4>
                  <p class="text-sm text-gray-400">{{ feature.description }}</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Coming Soon Features -->
        <h3 class="text-xl text-white mb-6 font-medium">Coming Soon</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 lg:gap-6 mb-12 w-full max-w-4xl">
          <div
            v-for="feature in comingSoon"
            :key="feature.text"
            class="group relative flex"
          >
            <div
              class="relative rounded-xl bg-primary-900/20 backdrop-blur-sm p-4 border border-primary-800/20 transition-all duration-300 w-full"
            >
              <div class="relative z-10 flex items-start gap-3">
                <Icon
                  :name="feature.icon"
                  class="text-gray-400 flex-shrink-0 mt-1"
                  size="24"
                />
                <div>
                  <h4 class="font-medium text-gray-300 mb-1">{{ feature.text }}</h4>
                  <p class="text-sm text-gray-500">{{ feature.description }}</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- CTA Section -->
      </div>
      <div class="text-center space-y-6 max-w-2xl">
        <p class="text-gray-300">Start exploring the cosmos today - no credit card required!</p>
        <div class="flex flex-col sm:flex-row justify-center gap-4">
          <PrimeButton
            label="Start Reading Now"
            icon="mdi:rocket-launch-outline"
            size="large"
            class="min-w-[200px] bg-gradient-to-r from-sky-500 to-blue-600 hover:from-sky-400 hover:to-blue-500 transition-all duration-300"
          />
            <!-- <PrimeButton
              label="How It Works"
              size="large"
              outlined
              severity="secondary"
              class="min-w-[200px] border-sky-500/30 hover:border-sky-500/50 text-sky-400 transition-all duration-300"
            /> -->
        </div>
        <p class="text-sm text-gray-400">
          Join the growing community of space enthusiasts at AstronEra
        </p>
      </div>
    </LandingGlass>
  </section>
</template>

================
File: landing/LandingProductSteps.vue
================
<script setup lang="ts">
import { ref, onMounted } from 'vue'

const { fadeInUp } = useAnimation()

const steps = [
  {
    icon: 'mdi:earth',
    title: 'Global Space Coverage',
    description:
      'Stay informed with comprehensive space news coverage from every corner of the globe.',
    img: '/images/features/news.jpeg',
    color: 'from-blue-500/20 to-purple-500/20',
  },
  {
    icon: 'mdi:newspaper-variant-outline',
    title: 'Daily Newsletter',
    description:
      'Get curated summaries of the most important space sector developments, delivered daily.',
    img: '/images/features/summaries.jpeg',
    color: 'from-sky-500/20 to-blue-500/20',
  },
  {
    icon: 'mdi:telescope',
    title: 'Industry Insights',
    description:
      'Track the latest developments from leading space tech companies and emerging startups.',
    img: '/images/features/companies.jpeg',
    color: 'from-purple-500/20 to-blue-500/20',
  },
  {
    icon: 'mdi:briefcase-search',
    title: 'Career Opportunities',
    description:
      'Discover your next role in the space sector with our curated job listings and career resources.',
    img: '/images/features/jobs.jpeg',
    color: 'from-indigo-500/20 to-sky-500/20',
  },
]

onMounted(() => {
  fadeInUp('.step-item')
})
</script>

<template>
  <section class="wrapper">
    <LandingTitle
      class="mb-12"
      title="Not Just News"
      subtitle="Just like the universe... we're expanding!"
    />

    <!-- Steps Grid -->
    <div class="grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-4 gap-8 max-w-5xl mx-auto">
      <div
        v-for="(step, index) in steps"
        :key="index"
        class="step-item group relative"
      >
        <!-- Step Number -->
        <!-- <div
          class="absolute -top-6 -left-6 w-12 h-12 rounded-full bg-primary-900/50 backdrop-blur-lg flex items-center justify-center border border-sky-500/20 z-10 transition-all duration-300 group-hover:border-sky-500/40 group-hover:bg-primary-900/70"
        >
          <span class="font-space text-sky-400 text-xl">{{ index + 1 }}</span>
        </div> -->

        <PrimeCard
          class="h-full bg-slate-900/30 backdrop-blur-md border border-slate-800/30 hover:border-sky-500/30 transition-all duration-500 overflow-hidden"
        >
          <!-- Content -->
          <template #header>
            <div class="relative w-full aspect-square rounded-lg overflow-hidden bg-slate-950/50">
              <!-- Replace with actual GIF -->
              <div class="absolute inset-0 flex items-center justify-center">
                <NuxtImg
                  :src="step.img"
                  :width="260"
                  :height="260"
                  alt="Featured image"
                  class="relative md:rounded-md"
                />
              </div>

              <!-- Overlay with icon -->
              <div
                class="absolute inset-0 bg-gradient-to-t from-primary-900/80 to-transparent group-hover:from-primary-900/90 transition-all duration-500"
              >
                <Icon
                  :name="step.icon"
                  size="32"
                  class="absolute bottom-4 right-4 text-sky-400/80 transition-transform duration-300 group-hover:scale-110"
                />
              </div>
            </div>
          </template>

          <template #title>
            <h3 class="text-xl font-space text-white mb-2 relative z-10">
              {{ step.title }}
            </h3>
          </template>

          <template #content>
            <div
              class="absolute inset-0 bg-gradient-to-br opacity-0 group-hover:opacity-40 transition-opacity duration-500"
              :class="step.color"
            ></div>
            <p class="text-gray-300 relative z-10">{{ step.description }}</p>
          </template>
        </PrimeCard>

        <!-- Card Glow -->
        <div
          class="absolute inset-0 bg-sky-500/5 group-hover:bg-sky-500/10 blur-xl transition-all duration-500 -z-10"
        ></div>
      </div>
    </div>
  </section>
</template>

<style scoped>
/* Ensure proper stacking */
.how-to-use-section {
  isolation: isolate;
}
</style>

================
File: landing/LandingSidescroll.vue
================
<script setup lang="ts">
import EmblaCarousel, { type EmblaCarouselType, type EmblaOptionsType } from 'embla-carousel'
import AutoScroll from 'embla-carousel-auto-scroll'
// News sources/partners
const partners = [
  { name: 'Aadyah Aerospace', id: useId(), type: 'Private Space' },
  { name: 'Aeroin Space', id: useId(), type: 'Private Space' },
  { name: 'Agnikul', id: useId(), type: 'Private Space' },
  { name: 'Astrogate Labs', id: useId(), type: 'Private Space' },
  { name: 'Bellatrix Aerospace', id: useId(), type: 'Private Space' },
  { name: 'CNSA', id: useId(), type: 'Space Agency' },
  { name: 'CSA', id: useId(), type: 'Space Agency' },
  { name: 'Dhruva Space', id: useId(), type: 'Private Space' },
  { name: 'ESA', id: useId(), type: 'Space Agency' },
  { name: 'ISRO', id: useId(), type: 'Space Agency' },
  { name: 'JAXA', id: useId(), type: 'Space Agency' },
  { name: 'NASA', id: useId(), type: 'Space Agency' },
  { name: 'Pixxel', id: useId(), type: 'Private Space' },
  { name: 'Roscosmos', id: useId(), type: 'Space Agency' },
  { name: 'Skyroot Aerospace', id: useId(), type: 'Private Space' },
]

const emblaRef = ref<HTMLElement | null>(null)
let emblaApi: EmblaCarouselType | undefined

onMounted(() => {
  // Initialize partner carousel
  if (emblaRef.value) {
    const OPTIONS: EmblaOptionsType = { loop: true }

    emblaApi = EmblaCarousel(emblaRef.value, OPTIONS, [
      AutoScroll({
        playOnInit: true,
        speed: 0.7,
        direction: 'forward',
      }),
    ])
  }
})

onUnmounted(() => {
  if (emblaApi?.destroy) {
    emblaApi.destroy()
  }
})
</script>

<template>
  <div>
    <LandingTitle
      title="Global Space News"
      subtitle="The only newsfeed you need to stay updated on the latest space news."
    />
    <LandingStats class="wrapper pb-10" />

    <div class="relative border-x border-primary-900/30 rounded-lg py-8">
      <div
        ref="emblaRef"
        class="embla overflow-hidden"
      >
        <div class="embla__container flex">
          <div
            v-for="partner in partners"
            :key="partner.id"
            class="embla__slide flex-shrink-0 mx-6"
          >
            <div class="flex flex-col items-center space-y-3 group/partner">
              <div
                class="w-36 h-36 bg-primary-900/50 rounded-xl p-4 flex items-center justify-center transition-transform duration-300 group-hover/partner:scale-110"
              >
                <NuxtImg
                  :src="`/images/logos/${partner.name.toLowerCase().replace(' ', '-')}-logo.jpg`"
                  :alt="partner.name"
                  class="w-full h-full object-contain opacity-70 group-hover/partner:opacity-100"
                  width="160"
                  height="160"
                />
              </div>
              <span class="text-base font-medium text-gray-400">{{ partner.name }}</span>
              <span class="text-sm text-gray-500">{{ partner.type }}</span>
            </div>
          </div>
        </div>
      </div>
      <div
        class="absolute top-0 left-0 h-full w-32 bg-gradient-to-r from-primary-950 to-transparent"
      ></div>
      <div
        class="absolute top-0 right-0 h-full w-32 bg-gradient-to-l from-primary-950 to-transparent"
      ></div>
    </div>
    <LandingTrusted class="wrapper" />
  </div>
</template>

<style scoped></style>

================
File: landing/LandingStats.vue
================
<script setup lang="ts">
import { gsap } from 'gsap'

// Stats to showcase platform reach
const stats = [
  { id: useId(), value: 50, suffix: '+', label: 'News Sources' },
  { id: useId(), value: 50, suffix: '+', label: 'Space Agencies & Companies' },
  { id: useId(), value: 24, suffix: '/7', label: 'Coverage' },
]

onMounted(() => {
  // Animate stats - trigger earlier
  gsap.from('.stat-value', {
    textContent: 0,
    duration: 2,
    ease: 'power1.out',
    snap: { textContent: 1 },
    stagger: 0.2,
    scrollTrigger: {
      trigger: '.stats-grid',
      start: 'top bottom', // Changed from bottom-=100px
      toggleActions: 'play none none reverse',
    },
  })
})
</script>

<template>
  <div>
    <div class="stats-grid grid grid-cols-2 md:grid-cols-3 gap-8 w-full">
      <div
        v-for="stat in stats"
        :key="stat.id"
        class="text-center flex flex-col w-full justify-center items-center"
      >
        <span class="flex items-center">
          <h3
            class="stat-value text-4xl md:text-5xl font-bold text-primary-400 mb-2"
            :data-stat-id="stat.id"
          >
            {{ stat.value }}
          </h3>
          <p class="text-2xl font-bold pl-1">{{ stat.suffix }}</p>
        </span>
        <p class="text-gray-400 text-sm md:text-base">{{ stat.label }}</p>
      </div>
    </div>
  </div>
</template>

<style lang="scss" scoped></style>

================
File: landing/LandingTestimonials.vue
================
<script setup lang="ts">
import { onMounted } from 'vue'
import { useAnimation } from '~/composables/useAnimation'
import testimonials from '@/data/home/testimonials.json'

const { carouselFadeIn } = useAnimation()

interface Testimonial {
  image: string
  name: string
  company: string
  quote: string
}

onMounted(() => {
  carouselFadeIn('.testimonial-item')
})
</script>

<template>
  <section>
    <LandingTitle
      title="Hear From The Community"
      subtitle="Discover How We're Making a Difference"
      class="!pb-12"
    />
    <!-- Testimonials Carousel -->
    <AppSwiper
      :items="testimonials"
      type="testimonial"
      class="testimonials-carousel"
    >
      <template #default="{ item }: { item: Testimonial }">
        <div class="testimonial-item group">
          <!-- Card with glass effect -->
          <!-- Hover gradient -->
          <div
            class="absolute inset-0 bg-gradient-to-br from-sky-500/5 to-purple-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-xl"
          ></div>

          <LandingGlass
            hover-effect="glow"
            glow-color="purple"
            gradient="mixed"
            intensity="low"
            interactive
            isolate-content
          >
            <!-- Content -->
            <div class="relative z-10">
              <!-- Profile section -->
              <div class="flex items-center mb-8">
                <div class="relative">
                  <IBImage
                    :img="{
                      src: item.image,
                      alt: item.name,
                      width: '60px',
                      height: '60px',
                      loading: 'lazy',
                      quality: '80',
                      format: 'webp',
                    }"
                    class="min-h-16 min-w-16 rounded-full ring-2 ring-sky-500/20"
                  />
                  <!-- Glow behind image -->
                  <div class="absolute inset-0 bg-sky-500/20 blur-xl -z-10"></div>
                </div>

                <div class="flex flex-col pl-4">
                  <h3 class="text-xl font-semibold text-white">{{ item.name }}</h3>
                  <p class="text-sky-400">{{ item.company }}</p>
                </div>
              </div>

              <!-- Quote section -->
              <div class="relative">
                <div class="relative rounded-xl foreground p-6">
                  <Icon
                    name="mdi:format-quote-open"
                    class="absolute -top-4 left-4 text-sky-400/40"
                    size="32px"
                  />
                  <p class="text-gray-300 italic relative z-10">{{ item.quote }}</p>
                  <Icon
                    name="mdi:format-quote-close"
                    class="absolute -bottom-4 right-4 text-sky-400/40"
                    size="32px"
                  />
                </div>
              </div>
            </div>
          </LandingGlass>
        </div>
      </template>
    </AppSwiper>
  </section>
</template>

<style scoped>
.testimonials-carousel :deep(.swiper-pagination-bullet) {
  background: theme('colors.sky.400');
  opacity: 0.5;
}

.testimonials-carousel :deep(.swiper-pagination-bullet-active) {
  opacity: 1;
}

/* Optional: Enhanced navigation buttons */
.testimonials-carousel :deep(.swiper-button-next),
.testimonials-carousel :deep(.swiper-button-prev) {
  color: blue;
  background: blue;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  backdrop-filter: blur(8px);
}

.testimonials-carousel :deep(.swiper-button-next:after),
.testimonials-carousel :deep(.swiper-button-prev:after) {
  font-size: 20px;
}
</style>

================
File: landing/LandingTitle.vue
================
<script setup lang="ts">
defineProps({
  title: {
    type: String,
    required: true,
  },
  subtitle: {
    type: String,
    required: false,
    default: '',
  },
  padding: {
    type: String,
    required: false,
    default: 'pb-8',
  },
})
</script>

<template>
  <div
    class="flex flex-col text-center gap-4"
    :class="padding"
  >
    <h2
      class="text-3xl md:text-5xl font-bold tracking-wider relative font-orbitron max-w-3xl text-wrap mx-auto"
    >
      <!-- Main text - Make this solid white initially -->
      <span class="relative text-white">{{ title }}</span>

      <!-- Glow effect - Position behind the main text -->
      <span
        class="absolute inset-0 blur-sm bg-gradient-to-r from-white via-gray-100 to-gray-300 opacity-50 bg-clip-text text-transparent -z-10"
        aria-hidden="true"
      >
        {{ title }}
      </span>
    </h2>

    <h4
      v-if="subtitle"
      class="text-lg md:text-2xl font-light tracking-wide font-sourcecodepro relative max-w-xl mx-auto"
    >
      <!-- Main subtitle text - Solid color -->
      <span class="relative text-sky-400">{{ subtitle }}</span>

      <!-- Subtitle glow - Behind main text -->
      <span
        class="absolute inset-0 blur-sm text-sky-400/30 -z-10"
        aria-hidden="true"
      >
        {{ subtitle }}
      </span>
    </h4>
  </div>
</template>

<style scoped>
/* Optional: Add hover effect */

h2 {
  text-wrap: normal !important; /* Override the text-wrap-balance */
  animation: textPulse 4s ease-in-out infinite;
}

h2:hover span:first-child {
  opacity: 0.7;
  transition: opacity 0.3s ease;
}

.font-space {
  font-family: 'Orbitron', sans-serif;
}

.font-subtitle {
  font-family: 'Space Grotesk', sans-serif;
}

/* Optional: Add text shadow animation */
@keyframes textPulse {
  0%,
  100% {
    text-shadow: 0 0 8px rgba(255, 255, 255, 0.1);
  }
  50% {
    text-shadow: 0 0 12px rgba(255, 255, 255, 0.2);
  }
}

h2 {
  animation: textPulse 4s ease-in-out infinite;
}
</style>

================
File: landing/LandingTrusted.vue
================
<script setup lang="ts">
import { ref, onMounted } from 'vue'
import LandingTitle from './LandingTitle.vue'
import { useAnimation } from '~/composables/useAnimation'

const { fadeInUp, scaleOnHover } = useAnimation()

interface TrustedPartner {
  image: string
  name: string
  invert?: boolean
  category: 'research' | 'education' | 'space' | 'tech'
  description: string
}

const trustedPartners = ref<TrustedPartner[]>([
  {
    image: 'images/trusted/dst.png',
    name: 'DST',
    invert: true,
    category: 'research',
    description:
      "Department of Science and Technology - Government of India's premier scientific research organization.",
  },
  {
    image: 'images/trusted/iau-oad.png',
    name: 'IAU-OAD',
    invert: true,
    category: 'education',
    description: 'International Astronomical Union Office of Astronomy for Development.',
  },
  {
    image: 'images/trusted/in-fed.png',
    name: 'IN-FED',
    invert: true,
    category: 'space',
    description: 'Indian Federation of Space Research and Technology.',
  },
  {
    image: 'images/trusted/iimb-nsrcel.png',
    name: 'IIMB-NSRCEL',
    invert: true,
    category: 'tech',
    description: "IIM Bangalore's Innovation & Entrepreneurship Center.",
  },
])

const categoryColors = {
  research: 'from-blue-500/10 to-sky-500/10',
  education: 'from-purple-500/10 to-blue-500/10',
  space: 'from-sky-500/10 to-indigo-500/10',
  tech: 'from-indigo-500/10 to-purple-500/10',
}

onMounted(() => {
  fadeInUp('.partner-logo')
  scaleOnHover('.partner-logo')
})
</script>

<template>
  <section class="pt-16">
    <LandingTitle title="Supported by" />
    <!-- Partner Stats -->

    <!-- Partners Grid -->
    <div class="grid grid-cols-2 gap-8 items-center justify-items-center mb-16">
      <div
        v-for="(partner, index) in trustedPartners"
        :key="index"
        class="partner-logo group relative w-full"
      >
        <!-- Partner Card -->
        <div
          class="relative rounded-xl bg-primary-900/30 backdrop-blur-sm p-6 border border-primary-800/30 transition-all duration-500 hover:border-sky-500/30 !bg-gray-200"
        >
          <!-- Hover Gradient -->
          <div
            class="absolute inset-0 bg-gradient-to-br opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-xl"
            :class="categoryColors[partner.category]"
          ></div>

          <!-- Logo -->
          <div class="relative z-10 w-full">
            <NuxtImg
              :id="'partner-logo-' + index"
              v-tooltip="partner.description"
              :src="partner.image"
              :alt="partner.name"
              :class="[' w-full object-contain transition-all duration-300 group-hover:scale-110']"
            />
          </div>
        </div>

        <!-- Card Glow -->
        <div
          class="absolute inset-0 bg-sky-500/5 group-hover:bg-sky-500/10 blur-xl transition-all duration-500 -z-10 rounded-xl"
        ></div>
      </div>
    </div>

    <!-- CTA Section -->
    <!-- <div class="text-center space-y-6">
        <p class="text-xl text-gray-300">Ready to Join Our Network?</p>
        <div class="flex gap-4 justify-center">
          <PrimeButton
            label="Partner With Us"
            size="large"
            class="min-w-[200px] bg-gradient-to-r from-sky-500 to-blue-600 hover:from-sky-400 hover:to-blue-500 transition-all duration-300"
          />
          <PrimeButton
            label="Learn More"
            size="large"
            outlined
            severity="secondary"
            class="min-w-[200px] border-sky-500/30 hover:border-sky-500/50 text-sky-400 transition-all duration-300"
          />
        </div>
        <p class="text-sm text-gray-400 max-w-md mx-auto">
          Join our growing network of space industry leaders and help shape the future of space
          exploration
        </p>
      </div> -->
  </section>
</template>

<style scoped>
.filter.invert {
  filter: invert(1);
}
</style>

================
File: landing/LandingWebSeries.vue
================
<script setup lang="ts">
import { ref, onMounted } from 'vue'
import { useAnimation } from '~/composables/useAnimation'

const { fadeInUp } = useAnimation()
const loadVideo = ref(false)

const patreonPerks = [
  'Behind-the-scenes content',
  'Early access to episodes',
  'Monthly Q&A sessions',
  'Exclusive tutorials',
  'Development insights',
]

onMounted(() => {
  fadeInUp('.content-section')
})
</script>

<template>
  <section class="space-y-8">
    <!-- Optional Title Section -->
    <LandingTitle
      title="Startups Guide to the Galaxy"
      subtitle="Follow our journey building AstronEra and learn from our experiences"
    />
    <div class="content-section space-y-8">
      <!-- Main Grid -->
      <!-- <div class="grid md:grid-cols-2 gap-8">
        <LandingGlass
          hover-effect="glow"
          glow-color="purple"
          gradient="mixed"
          intensity="low"
          interactive
          isolate-content
        >
          <div class="relative group">
            <div
              class="relative rounded-xl transition-all duration-500 hover:border-sky-500/30 h-full"
            >
              <div class="relative z-10 h-full flex flex-col">
                <Icon
                  name="mdi:video-vintage"
                  size="48"
                  class="text-sky-400 mb-6"
                />
                <h3 class="text-2xl font-bold text-white mb-4 font-space"> Building in Public </h3>
                <p class="text-gray-300 mb-6">
                  Watch as we navigate the challenges of building a space-tech startup. From
                  ideation to launch, we share every step of our journey.
                </p>
                <div class="mt-auto">
                  <span
                    class="px-3 py-1 rounded-full text-xs bg-sky-500/10 border border-sky-500/20 text-sky-400"
                  >
                    New Episode Every Two Weeks
                  </span>
                </div>
              </div>
            </div>
          </div>
        </LandingGlass>

        <LandingGlass
          hover-effect="glow"
          glow-color="purple"
          gradient="mixed"
          intensity="low"
          interactive
          isolate-content
        >
          <div class="relative group">
            <div
              class="relative rounded-xl transition-all duration-500 hover:border-sky-500/30 h-full"
            >
              <div class="relative z-10 h-full flex flex-col">
                <Icon
                  name="mdi:patreon"
                  size="48"
                  class="text-red-400 mb-6"
                />
                <h3 class="text-2xl font-bold text-white mb-4 font-space">
                  Support Us on Patreon
                </h3>
                <div class="space-y-3 mb-6">
                  <div
                    v-for="perk in patreonPerks"
                    :key="perk"
                    class="flex items-center gap-2"
                  >
                    <Icon
                      name="mdi:check"
                      class="text-emerald-400"
                    />
                    <span class="text-gray-300">{{ perk }}</span>
                  </div>
                </div>
                <div class="mt-auto">
                  <NuxtLink
                    to="https://www.patreon.com/YourPatreonLink"
                    target="_blank"
                  >
                    <PrimeButton
                      size="large"
                      class="w-full bg-gradient-to-r from-orange-500 to-red-600 hover:from-orange-400 hover:to-red-500 transition-all duration-300"
                    >
                      Become a Patron
                    </PrimeButton>
                  </NuxtLink>
                </div>
              </div>
            </div>
          </div>
        </LandingGlass>
      </div> -->

      <!-- Video Section -->
      <LandingGlass
        hover-effect="glow"
        glow-color="purple"
        gradient="mixed"
        intensity="low"
        interactive
        isolate-content
      >
        <div class="relative group">
          <div class="relative rounded-xl transition-all duration-500 hover:border-sky-500/30">
            <!-- Video Container -->
            <div class="aspect-video relative rounded-lg overflow-hidden">
              <img
                v-if="!loadVideo"
                src="https://img.youtube.com/vi/gMG621m6QRE/maxresdefault.jpg"
                alt="Startups Guide to the Galaxy - AstronEra"
                class="w-full h-full object-cover cursor-pointer transition-transform duration-300 hover:scale-105"
                @click="loadVideo = true"
              />
              <div
                v-if="!loadVideo"
                class="absolute inset-0 flex items-center justify-center bg-black/50 hover:bg-black/40 transition-colors duration-300"
              >
                <Icon
                  name="mdi:play-circle"
                  size="72"
                  class="text-white/90 hover:text-white transition-colors duration-300"
                />
              </div>
              <iframe
                v-else
                src="https://www.youtube.com/embed/gMG621m6QRE?start=488&autoplay=1"
                title="Startups Guide to the Galaxy - AstronEra"
                frameborder="0"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                allowfullscreen
                class="absolute inset-0 w-full h-full"
              />
            </div>
          </div>
        </div>
      </LandingGlass>
      <LazyLandingCTASocial />
    </div>
  </section>
</template>

<style scoped></style>

================
File: project/ProjectCard.vue
================
<script setup lang="ts">

defineProps({
  project: {
    type: Object,
    required: true,
  },
})
</script>

<template>
  <PrimeCard v-if="project">
    <template #header>
      <NuxtImg
        :src="project.image.src"
        width="400"
        height="300"
        quality="80"
        class="aspect-video w-full object-cover"
      />
    </template>
    <template #title>
      <NuxtLink :to="project.slug">
        <h3 class="text-xl font-bold lg:text-xl">
          {{ project.title }}
        </h3>
      </NuxtLink>
    </template>
    <template #subtitle>
      <div class="flex flex-row gap-2 text-sm">
        <p class="text-primary">
          {{ project.date }}
        </p>
      </div>
    </template>
    <template #content>
      <div class="flex w-full flex-col items-start justify-center gap-2">
        <p class="text-sm">
          {{ project.description }}
        </p>
      </div>
    </template>
    <template #footer>
      <div class="flex w-full justify-end">
        <NuxtLink :to="project.slug">
          <PrimeButton outlined> Read More </PrimeButton>
        </NuxtLink>
      </div>
    </template>
  </PrimeCard>
</template>

<style scoped></style>

================
File: svg/SvgStars.vue
================
<script setup lang="ts">
defineProps({
  size: {
    type: Number,
    required: true,
  },
  svgColor: {
    type: String,
    required: false,
    default: '#3d3d3d',
  },
})
</script>

<template>
  <svg
    class="absolute"
    xmlns="http://www.w3.org/2000/svg"
    :width="size"
    :height="size"
    viewBox="0 0 24 24"
  >
    <path
      :fill="svgColor"
      d="m14.43 10l-1.47-4.84c-.29-.95-1.63-.95-1.91 0L9.57 10H5.12c-.97 0-1.37 1.25-.58 1.81l3.64 2.6l-1.43 4.61c-.29.93.79 1.68 1.56 1.09l3.69-2.8l3.69 2.81c.77.59 1.85-.16 1.56-1.09l-1.43-4.61l3.64-2.6c.79-.57.39-1.81-.58-1.81h-4.45z"
    />
  </svg>
</template>

================
File: symposium/SymposiumAbout.vue
================
<template>
  <div class="flex flex-col items-start gap-6 xl:gap-12">
    <CommonTitle
      class="col-start-1 full-width"
      :title="{ main: 'About the Symposium' }"
    >
      <p
        >AstronEra proudly presents India's Dark Sky Policy & Sustainability Symposium, a platform
        dedicated to tackling the critical issue of light pollution. Excessive artificial lighting
        disrupts ecosystems, harms human health, wastes energy, and diminishes cultural and
        astronomical heritage. This event aims to bring together policymakers, lighting companies,
        and global experts to inspire actionable solutions for India, starting with Maharashtra.
      </p>
    </CommonTitle>
    <CommonTitle
      class="col-start-1 full-width"
      :title="{ main: 'Why Attend?' }"
    >
      <ul class="list-disc">
        <li>Understand the ecological, health, and cultural impacts of light pollution.</li>
        <li>Learn from global experts on successful dark sky conservation initiatives.</li>
        <li>Collaborate with policymakers and industries to create sustainable solutions.</li>
        <li>Be a part of drafting policies and frameworks for dark sky policy in India.</li>
      </ul>
      <IBImage
        :img="{
          src: '/symposium/light_pollution_map.jpeg',
          alt: 'https://djlorenz.github.io/astronomy/lp2022/',
        }"
      />
    </CommonTitle>
    <CommonTitle
      class="col-start-1 full-width"
      :title="{ main: 'Objectives' }"
    >
      <ul class="list-disc">
        <li
          >Raise awareness about light pollution and its impacts on nature, humans, and
          astronomy.</li
        >
        <li
          >Inspire pilot projects in rural areas to measure the impact of dark sky conservation
          efforts.</li
        >
        <li
          >Initiate conversations about drafting policies for sustainable urban planning, light
          pollution mitigation, and creation of dark sky reserves.</li
        >
        <li>Highlight dark skies as a fundamental right for every global citizen.</li>
      </ul>
      <div class="flex justify-center gap-2 flex-col md:flex-row">
        <IBImage
          :img="{
            src: 'symposium/before_and_after_germany.jpeg',
            alt: 'https://www.instagram.com/darksky_intl?igsh=MWJqOGV1dGNrbGZ1OQ==',
            width: '500',
            height: '500',
          }"
        />
        <IBImage
          :img="{
            src: 'symposium/before_and_after_wales.jpeg',
            width: '360',
            height: '360',
          }"
        />
      </div>
    </CommonTitle>
    <CommonTitle
      class="col-start-1 full-width"
      :title="{ main: 'Be the Changemaker' }"
    >
      <p
        >This symposium offers a unique opportunity for, policymakers, and lighting companies to
        take a leadership role in combating light pollution. Together, let's create a sustainable
        future by preserving our nightscapes.</p
      >
      <IBImage
        :img="{
          src: 'symposium/five_principals_for_lighting.jpeg',
        }"
      />
    </CommonTitle>
  </div>
</template>

<style scoped>
.full-width {
  max-width: 100% !important; /* Forces full-width override */
}
</style>

================
File: symposium/SymposiumPDFResource.vue
================
<script setup lang="ts">
const props = defineProps({
  pdf: {
    type: String,
    required: true,
  },
  label: {
    type: String,
    required: true,
  },
})

const downloadPdf = () => {
  const link = document.createElement('a')
  link.href = props.pdf
  link.download = `${props.label}.pdf`
  document.body.appendChild(link)
  link.click()
  document.body.removeChild(link)
}
</script>

<template>
  <div class="relative w-full max-w-lg mx-auto">
    <!-- Blurred PDF Preview -->
    <div class="relative h-screen overflow-hidden rounded-lg border border-gray-300 shadow-lg">
      <iframe
        :src="`${pdf}#page=1&zoom=FitH&toolbar=0&navpanes=0&scrollbar=0`"
        frameborder="0"
        class="w-full h-full blur-sm pointer-events-none"
      ></iframe>
      <PrimeButton
        @click="downloadPdf"
        class="!absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg shadow-md transition duration-300"
      >
        Download {{ label }}
      </PrimeButton>
    </div>
  </div>
</template>

================
File: symposium/SymposiumSchedule.vue
================
<script setup lang="ts">
function convertISTtoLocal(day: number, time: { start: string; end: string }) {
  const start = `2025-03-01T${time.start}:00+05:30` // '+05:30' is the offset for IST
  const end = `2025-03-01T${time.end}:00+05:30` // '+05:30' is the offset for IST

  // Creating a Date object
  const startIST = new Date(start)
  const endIST = new Date(end)

  // Converting to local time string
  const startLocal = startIST.toLocaleTimeString([], {
    hour: '2-digit',
    minute: '2-digit',
    hour12: false,
  })

  const endLocal = endIST.toLocaleTimeString([], {
    hour: '2-digit',
    minute: '2-digit',
    hour12: false,
  })

  return `${startLocal} - ${endLocal}`
}

const timezone = computed(() => Intl.DateTimeFormat().resolvedOptions().timeZone)

const schedule = [
  {
    slot: 'saturday',
    value: '0',
    label: 'Saturday',
    day: 1,
    items: [
      {
        online: true,
        icon: 'mdi:microphone',
        topic: 'Welcome Address',
        speaker: 'Ruchira Huchgol',
        time: { start: '11:00', end: '11:05' },
        class: 'bg-primary-950',
      },
      {
        online: true,
        icon: 'mdi:microphone',
        topic: 'Introduction',
        speaker: 'Shweta Kulkarni',
        time: { start: '11:05', end: '11:10' },
        class: 'bg-primary-950',
      },
      {
        online: true,
        icon: 'mdi:microphone',
        topic: 'Impacts of light pollution and efforts towards Dark Sky Policy',
        speaker: 'Dan Oakley',
        time: { start: '11:10', end: '11:30' },
      },
      {
        online: true,
        icon: 'mdi:microphone',
        topic: 'Growing Trend on Regulating Light Pollution',
        speaker: 'Yana Yakushina',
        time: { start: '11:30', end: '11:50' },
      },
      {
        online: true,
        icon: 'mdi:microphone',
        topic: 'Dark Sky Policies and the learnings from the adaptation in New Zealand',
        speaker: 'Nalayini  Brito-Davies ',
        time: { start: '11:50', end: '12:10' },
      },
      {
        online: true,
        icon: 'mdi:microphone',
        topic: 'Q&A',
        speaker: 'All Speakers',
        time: { start: '12:10', end: '12:30' },
        class: 'bg-primary-950',
      },
      {
        online: true,
        icon: 'mdi:microphone',
        topic: 'Closing Session',
        speaker: 'AstronEra Team',
        time: { start: '12:30', end: '12:35' },
      },
    ],
  },
]
</script>

<template>
  <div class="w-full">
    <CommonTitle
      :title="{
        main: 'Conference Schedule',
      }"
    />
    <PrimeTabs
      value="0"
      select-on-focus
    >
      <PrimeTabList pt:tablist:class="flex gap-4 pl-4 pb-4 text-lg">
        <PrimeTab
          v-for="(day, i) in schedule"
          :key="`tab-${i}`"
          :value="`${day.value}`"
        >
          <span>
            {{ `${day.label} ${day.day}th March 2025` }}
          </span>
        </PrimeTab>
      </PrimeTabList>
      <PrimeTabPanels>
        <PrimeTabPanel
          v-for="(day, i) in schedule"
          :key="`tab-${i}`"
          :value="`${i}`"
        >
          <div class="border-color rounded-md border">
            <PrimeDataTable
              :value="day.items"
              :pt="{
                header: ({ props }) => ({
                  cell: 'bg-red-500',
                }),
                thead: ({ context }) => ({
                  class: 'bg-primary-800',
                }),
                bodyrow: ({ props }) => ({
                  class: 'odd:bg-gray-950 even:bg-gray-900',
                }),
              }"
              :pt-options="{ mergeSections: true, mergeProps: true }"
            >
              <PrimeColumn
                style="width: 20%"
                field="time"
                :header="`Time ${timezone}`"
              >
                <template #body="{ data }">
                  <span class="flex items-center gap-2 text-sm">
                    <Icon
                      :name="data.icon"
                      size="24px"
                    />

                    {{ convertISTtoLocal(day.day, data.time) }}
                  </span>
                </template>
              </PrimeColumn>
              <PrimeColumn
                style="width: 35%"
                field="speaker"
                header="Speaker"
              >
                <template #body="slotProps">
                  <span class="flex items-center text-sm leading-none">
                    <div
                      v-if="slotProps.data.online"
                      class="mr-1 h-3 w-3 rounded-full bg-emerald-500"
                    />
                    {{ slotProps.data.speaker ?? 'TBA' }}
                  </span>
                </template>
              </PrimeColumn>
              <PrimeColumn
                style="width: 40%"
                field="topic"
                header="Topic"
              >
                <template #body="slotProps">
                  <div class="text-sm">
                    {{ slotProps.data.topic }}
                  </div>
                </template>
              </PrimeColumn>
            </PrimeDataTable>
          </div>
        </PrimeTabPanel>
      </PrimeTabPanels>
    </PrimeTabs>
  </div>
</template>

================
File: symposium/SymposiumSpeakerCard.vue
================
<script setup lang="ts">
const isOpen = ref(false)

defineProps({
  speaker: {
    type: Object,
    required: true,
  },
  featured: {
    type: Boolean,
    required: false,
    default: false,
  },
})
</script>

<template>
  <LandingGlass
    hover-effect="glow"
    glow-color="purple"
    gradient="mixed"
    intensity="low"
    interactive
    isolate-content
    :padded="false"
    class="flex flex-col gap-2 relative h-full"
  >
    <template #header>
      <div class="p-2">
        <div class="absolute left-0 top-0 z-10 hidden h-full w-full bg-black/10 visible" />
        <IBImage
          :img="{
            src: `/symposium/speakers/${speaker.avatar}.jpeg`,
            alt: `${speaker.given_name} will be presenting at the Dark Sky Conservation India Conference`,
            width: '350',
            height: '350',
            loading: 'lazy',
            quality: '80',
            format: 'webp',
          }"
          class="w-full object-cover grayscale-[20%] rounded-t-xl overflow-hidden"
        />
      </div>
    </template>
    <div class="p-6 flex flex-col justify-between flex-grow min-h-full">
      <div class="flex flex-col flex-grow gap-4 text-sm pb-4">
        <h3 class="text-2xl font-semibold">
          {{ speaker.title }} {{ speaker.given_name }} {{ speaker.surname }}
        </h3>
        <p class="flex items-center gap-2 font-semibold text-primary-600">
          <Icon
            name="mdi:account"
            class="flex-shrink-0"
            size="24px"
          />
          {{ speaker.professional_title }}
        </p>
        <p class="h-auto text-sm">
          {{ isOpen ? speaker.bio : `${speaker.bio.slice(0, 240)}...` }}
          <NuxtLink v-ripple
            ><PrimeButton
              outlined
              as="a"
              class="!p-0"
              @click="isOpen = !isOpen"
              >{{ isOpen ? 'Read Less' : 'Read More' }}</PrimeButton
            ></NuxtLink
          >
        </p>
      </div>
    </div>
  </LandingGlass>
</template>

<style scoped></style>

================
File: symposium/SymposiumSpeakers.vue
================
<script setup lang="ts">
const speakers = [
  {
    given_name: 'Nalayini',
    surname: 'Brito-Davies',
    professional_title: 'President, Dark Sky International',
    bio: `Nalayini was instrumental in successfully establishing Aotea / Great Barrier Island as a certified Dark Sky Sanctuary.
    She also co-leads the promotion of New Zealand’s journey to become a dark sky nation and has spoken at Dark Sky conferences and workshops around the world.
    She is currently the immediate past president and Fellow of the Royal Astronomical Society of New Zealand (RASNZ) and is a co-founder of the Aotearoa Astrotourism Academy, a non-profit that promotes dark skies and the education of astronomy (integrating indigenous astronomy) through the provision of nationwide immersion training courses for those seeking a solid foundation of knowledge and practical skills to pursue astronomy and astrotourism. `,
    avatar: 'nalayini_bitro_davis',
    featured: true,
    inPerson: true,
  },
  {
    given_name: 'Dan',
    surname: 'Oakley',
    professional_title: 'Director, Darkscape Consulting',
    bio: `Dan Oakley previously worked at BAE-Systems on a number of areas including Torpedo analysis, systems engineering, and radiation safety.
    After a rather liberating experience at the Glastonbury Festival, he changed careers and now works for the South Downs National Park Authority and has done for the last 15 years.
    Starting from a conservation volunteer, he is lead ranger for the Wealden Heaths and the dark skies officer for the park. At the Park, he was instrumental in developing and submitting Moore’s’ Reserve Dark Sky Places application in May 2016.`,
    avatar: 'dan_oakley',
    featured: true,
    inPerson: true,
  },
  {
    given_name: 'Yana',
    surname: 'Yakushina',
    professional_title: 'Policy Analyst and Advocate',
    bio: `Yana is an experienced legal researcher, policy analyst, and advocate for the protection of the nocturnal environment and the advancement of space law.
    Her expertise lies in conducting comprehensive analyses of legal and policy instruments, interpreting obtained data, and delivering clear, valuable conclusions.
    Currently pursuing a Ph.D. at the University of Ghent (Belgium) as part of the Horizon EU PLAN-B project she is  working on the development of the legal and policy framework for recognising light pollution as an environmental concern.
    As a scientific coordinator of the PLAN-B project, she leads the project's efforts towards a better understanding of light and noise pollution impacts and the development of the most effective solutions for their mitigation.`,
    avatar: 'yana_yakushina',
    featured: true,
    inPerson: true,
  },
  {
    given_name: 'Shweta',
    surname: 'Kulkarni',
    professional_title: 'Dark Sky Defender Asia',
    bio: 'Astropreneur Shweta Kulkarni, listed among top 100 women entrepreneurs, spearheads Astronera, marrying business acumen with astronomy for innovative solutions. As a Fellow of the Royal Astronomical Society of England, her venture reflects a novel approach to integrating astronomy with enterprise.',
    abstract: {
      title: 'Skill Training in Astronomy for Income Generation',
      description: `Shweta, the director of AstronEra and CEO of Astron
        SHK Trust, initiated the conference to bridge the link between conserving dark skies and
        sustainable socio-economic development. She introduced herself as an "AstroPreneur,"
        emphasizing her dual roles as a part-time astronomer and full-time entrepreneur. Shweta
        identified key problems including the lack of authentic astronomy knowledge, scientific
        temperament in society, and diminishing dark skies due to light pollution.
        She introduced the "AstroTribe" Project, funded by IAU and OAD, aimed at training tribal
        children in astronomy to empower them economically. This initiative incentivizes students by
        enabling them to generate income through bridging technical astronomy with entertainment
        through astrotourism, thereby promoting awareness about dark skies and addressing SDGs of
        quality education and sustainable economic growth.
        Shweta outlined action points post-conference, focusing on understanding the problem of
        light pollution, identifying target areas and audiences, determining mediums and expected
        outcomes, and establishing frameworks aligned with the human right to dark skies. She
        emphasized leveraging resources available on darksky.org to find solutions and highlighted
        the historical contributions to astronomy, underscoring the responsibility to conserve night
        skies for future generations.
        Following Shweta's talk, a significant event took place where the Astroguide's batch in
        Manali was honored with certificates and recognized for the income they earned from their
        stargazing event. This event served as their graduation ceremony, marking the culmination of
        their training. The Astroguides introduced themselves and shared their experiences gained
        through the training program. They expressed heartfelt gratitude towards the AstronEra team
        for their support and guidance throughout the journey. This ceremony not only celebrated the
        achievements of the Astroguides but also highlighted the impact of empowering individuals
        with astronomical knowledge and skills for economic sustainability in the region.`,
    },
    avatar: 'shweta-kulkarni',
    featured: true,
    inPerson: true,
  },
]

const filterSpeakers = (featured: boolean, toSort = false) => {
  return speakers
    .filter((s: Speaker): boolean | undefined => s.featured === featured)
    .sort((a: Speaker, b: Speaker) => {
      if (!toSort) return 0
      if (a.given_name < b.given_name) {
        return -1
      }
      if (a.given_name > b.given_name) {
        return 1
      }
      return 0
    })
}
</script>

<template>
  <div class="w-full">
    <CommonTitle
      class="col-start-1 full-width"
      :title="{
        main: 'Meet The IDPS Symposium 2025 Speakers',
      }"
    />
    <p class="text-primary-700 text-sm font-bold uppercase pt-4 lg:pt-8"> Speakers </p>
    <div class="pt-4 lg:pt-8 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 lg:gap-8">
      <SymposiumSpeakerCard
        v-for="speaker in filterSpeakers(true)"
        :key="speaker.given_name"
        :speaker="speaker"
        featured
      />
    </div>
  </div>
</template>

<style scoped>
.full-width {
  max-width: 100% !important; /* Forces full-width override */
}
</style>

================
File: symposium/SymposiumVenue.vue
================
<script setup lang="ts">
const venues = [
  {
    icon: 'mdi:video-box',
    main: 'Zoom*',
    button: 'Zoom',
    website: 'https://www.zoom.com/',
    about:
      '<b><u>*For Invitees Only</u></b><br/>The meeting ID and password will be shared <b>with the invitees</b>',
    color: 'blue',
  },
  {
    icon: 'mdi:youtube',
    about: 'The event will be broadcasted live on our website as well as on our YouTube channel',
    main: 'YouTube',
    button: 'YouTube',
    website: 'https://www.youtube.com/live/_Du8pF2pru4?si=f1dlgDd6imcA1Duq',
    color: 'red',
  },
]
</script>

<template>
  <div>
    <CommonTitle :title="{ main: 'Venue' }" />
    <div class="relative grid grid-cols-1 items-start gap-6 lg:grid-cols-2 xl:gap-12">
      <div
        class="border-2 p-2 rounded"
        v-for="venue in venues"
      >
        <CommonTitle
          class="row-start-1"
          :title="venue"
        />
        <p v-html="venue.about" />
        <div class="mt-2 row-start-2 h-full w-full space-y-4 text-left leading-6">
          <PrimeButton
            class="gap-2 border-white"
            as="a"
            :href="venue.website"
            target="_blank"
            variant="outlined"
          >
            <Icon
              :name="venue.icon"
              :class="`text-${venue.color}-400 group-hover:text-sky-400 transition-colors duration-300`"
              size="36px"
            />
            {{ venue.button }}
          </PrimeButton>
        </div>
      </div>
    </div>
  </div>
</template>

================
File: team/TeamCard.vue
================
<script setup lang="ts">
import type { TeamMemberType } from '@/types/team'

defineProps({
  member: {
    type: Object as PropType<TeamMemberType>,
    required: true,
  },
})
</script>

<template>
  <LandingGlass
    hover-effect="glow"
    glow-color="purple"
    gradient="mixed"
    intensity="low"
    interactive
    isolate-content
  >
    <div class="absolute h-full w-full animate-pulse">
      <SvgStars
        class="bottom-46 left-12"
        :size="15"
        svg-color="#303030"
      />
      <SvgStars
        class="bottom-22 left-36"
        :size="8"
        svg-color="#303030"
      />
      <SvgStars
        class="right-14 top-24"
        :size="12"
        svg-color="#303030"
      />
      <SvgStars
        class="bottom-12 left-44"
        :size="20"
        svg-color="#303030"
      />
      <SvgStars
        class="left-12 top-52"
        :size="14"
        svg-color="#303030"
      />
    </div>

    <div class="relative flex items-start justify-center px-10 pb-4">
      <div class="w-20 overflow-hidden rounded-full border md:w-24">
        <IBImage
          :img="{
            src: member.avatar,
            alt: member.name,
            loading: 'lazy',
            width: '100',
            height: '100',
          }"
        />
      </div>
    </div>
    <div class="flex flex-col items-center justify-center space-y-3">
      <p class="rounded-sm text-center text-base font-semibold leading-none">
        {{ member.name }}
      </p>
      <p class="text-center text-sm font-semibold leading-none">
        {{ member.position.title }}
      </p>
      <div class="z-10 space-y-3 pt-12">
        <AppSocialBlock
          :socials="member.socials"
          :has-title="false"
          class="relative flex items-center justify-center space-x-2"
        />
        <div>
          <NuxtLink :to="`/team/${member.name.toLowerCase().replaceAll(' ', '-')}`">
            <PrimeButton> View Profile </PrimeButton>
          </NuxtLink>
        </div>
      </div>
    </div>
  </LandingGlass>
</template>

<style scoped></style>

================
File: AppBackButton.vue
================
<script setup lang="ts"></script>

<template>
  <div class="background flex items-center justify-center gap-2 rounded-md p-2">
    <NuxtLink to="/">
      <PrimeButton label="Go back"> Go Home </PrimeButton>
    </NuxtLink>
    <!-- <AppThemeToggle v-slot="{ toggle, isDark }">
      <Icon
        :name="isDark ? 'heroicons:sun' : 'heroicons:moon'"
        class="cursor-pointer"
                      size="24px"

        @click="toggle"
      />
    </AppThemeToggle> -->
  </div>
</template>

<style scoped></style>

================
File: AppCarousel.vue
================
<script setup lang="ts" generic="T">
import { ref, onMounted, watch, computed } from 'vue'
import useEmblaCarousel from 'embla-carousel-vue'
import AutoPlay from 'embla-carousel-autoplay'

const [emblaRef] = useEmblaCarousel(
  {
    loop: true,
    align: 'start',
  },
  [AutoPlay({ delay: 5000 })],
)

const carouselLoaded = ref(false)
onMounted(async () => {
  await new Promise((resolve) => setTimeout(resolve, 1000))
  carouselLoaded.value = true
})

defineProps<{
  items: T[]
  type: string
}>()
</script>

<template>
  <div
    v-if="items.length > 0"
    ref="emblaRef"
    class="embla overflow-hidden"
  >
    <div class="embla__container">
      <div
        v-for="(item, index) in items"
        :key="`${type}-${index}`"
        class="embla__slide"
      >
        <slot :item="item" />
      </div>
    </div>
  </div>
</template>

<style scoped>
.embla {
  --slide-size: 100%;
}
.embla__container {
  display: flex;
  touch-action: pan-y pinch-zoom;
}
.embla__slide {
  flex: 0 0 var(--slide-size);
}
</style>

================
File: AppDetectBottom.vue
================
<template>
  <div ref="sentinel" />
</template>

<script setup lang="ts">
const sentinel = ref<HTMLElement | null>(null)

const emit = defineEmits(['bottom-trigger'])

watchEffect((onCleanup) => {
  if (!sentinel.value) {
    // The sentinel element is not yet in the DOM.
    return
  }

  const options = {
    root: null,
    rootMargin: '0px',
    threshold: 0.5,
  }

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        console.info('intersecting')
        emit('bottom-trigger')
      }
    })
  }, options)

  observer.observe(sentinel.value)

  // Remove Sentinel On UnMounted
  onCleanup(() => {
    if (observer && sentinel.value) {
      observer.unobserve(sentinel.value)
    }
  })
})
</script>

<style scoped></style>

================
File: AppFeatures.vue
================
<script setup lang="ts">
const organization = {
  key: '1',
  label: 'CEO',
  type: 'person',
  styleClass: 'ui-person',
  expanded: true,
  data: { name: 'Walter White', title: 'CEO', image: 'images/organization/walter.jpg' },
  children: [
    {
      key: '2',
      label: 'CFO',
      type: 'person',
      styleClass: 'ui-person',
      expanded: true,
      data: { name: 'Saul Goodman', title: 'CFO', image: 'images/organization/saul.jpg' },
      children: [
        {
          key: '3',
          label: 'Tax',
          type: 'person',
          styleClass: 'ui-person',
          data: { name: 'Skyler White', title: 'Tax', image: 'images/organization/skyler.jpg' },
        },
        {
          key: '4',
          label: 'Legal',
          type: 'person',
          styleClass: 'ui-person',
          data: { name: 'Jesse Pinkman', title: 'Legal', image: 'images/organization/jesse.jpg' },
        },
      ],
    },
    {
      key: '5',
      label: 'COO',
      type: 'person',
      styleClass: 'ui-person',
      data: { name: 'Mike E.', title: 'COO', image: 'images/organization/mike.jpg' },
    },
    {
      key: '6',
      label: 'CTO',
      type: 'person',
      styleClass: 'ui-person',
      data: { name: 'Gus Fring', title: 'CTO', image: 'images/organization/gus.jpg' },
    },
  ],
}

const selection = ref([])
</script>

<template>
  <PrimeOrganizationChart
    v-model:selection-keys="selection"
    :value="organization"
  >
    <template #person="slotProps">
      <div class="flex flex-col items-center rounded-lg shadow-md">
        <span class="font-bold mb-2">{{ slotProps.node.data.name }}</span>
        <span>{{ slotProps.node.data.title }}</span>
      </div>
    </template>
    <template #default="slotProps">
      <span>{{ slotProps.node.label }}</span>
    </template>
  </PrimeOrganizationChart>
</template>

<style scoped></style>

================
File: AppSocialBlock.vue
================
<script setup lang="ts">
import type { UserSocialType } from '#types/users'

defineProps({
  socials: {
    type: Array as PropType<UserSocialType[]>,
    required: true,
  },
  hasTitle: {
    type: Boolean,
    default: true,
  },
  position: {
    type: String,
    required: false,
    default: 'justify-center',
  },
  iconSize: {
    type: Number,
    default: 24,
  },
})
</script>

<template>
  <div class="flex flex-col space-y-2">
    <h2
      v-if="hasTitle"
      class="text-xl font-semibold leading-normal"
    >
      Follow us
    </h2>
    <div :class="`flex w-full gap-2 ${position}`">
      <a
        v-for="s in socials"
        :key="s.id"
        class="cursor-pointer"
        target="_blank"
        :href="s.url"
      >
        <Icon
          :name="`mdi:${s.platform}`"
          :size="`${iconSize}px`"
        />
      </a>
    </div>
  </div>
</template>

<style scoped></style>

================
File: AppStars.vue
================
<script setup lang="ts">
// todo:med:1 - turn this into a baseStar component, then use in places like rating etc
defineProps({
  rating: {
    type: Number as PropType<number>,
    required: true,
  },
  starSize: {
    type: Number as PropType<number>,
    default: 14,
  },
})

const isStarFilled = (index: number, rating: number) => {
  if (index <= Math.floor(rating)) {
    return 'material-symbols:star'
  } else if (index - 0.5 <= rating) {
    return 'material-symbols:star-half'
  } else {
    return 'material-symbols:star-outline'
  }
}
</script>

<template>
  <div>
    <div class="h-full">
      <div class="flex h-full gap-2 leading-4">
        <div class="group relative flex h-full items-center justify-center gap-1">
          <Icon
            v-for="i in 5"
            :key="i"
            :name="isStarFilled(i, rating / 2)"
            class="text-yellow-400"
            :size="`${starSize}px`"
          />
          <div
            class="absolute left-1/2 top-full mt-2 -translate-x-1/2 transform rounded p-2 text-xs opacity-0 shadow-lg transition duration-200 ease-in-out group-hover:opacity-100 group-focus:opacity-100"
          >
            {{ rating.toPrecision(2) }}
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<style scoped>
.group:focus .group-focus\:opacity-100 {
  opacity: 100 !important;
}
</style>

================
File: AppSwiper.vue
================
<script setup lang="ts" generic="T">
import { ref, onMounted, watch, computed } from 'vue'
import useEmblaCarousel from 'embla-carousel-vue'
import AutoPlay from 'embla-carousel-autoplay'

const [emblaRef, emblaApi] = useEmblaCarousel(
  {
    loop: false,
    align: 'start',
  },
  [AutoPlay({ delay: 7000 })],
)

const breakpoints = computed(() => ({
  '(min-width: 1280px)': { slidesPerView: 3, rows: 2 },
  '(min-width: 768px)': { slidesPerView: 2, rows: 1 },
  '(min-width: 640px)': { slidesPerView: 1, rows: 1 },
}))

const carouselLoaded = ref(false)
onMounted(async () => {
  await new Promise((resolve) => setTimeout(resolve, 1000))
  carouselLoaded.value = true
})

defineProps<{
  items: T[]
  type: string
}>()
</script>

<template>
  <div
    v-if="items.length > 0"
    ref="emblaRef"
    class="embla max-w-full overflow-hidden rounded-xl"
  >
    <div class="embla__container grid gap-8 grid-cols-2 md:grid-cols-2 lg:grid-cols-3">
      <div
        v-for="(item, index) in items"
        :key="`${type}-${index}`"
        class="embla__slide"
      >
        <slot :item="item" />
      </div>
    </div>
  </div>
</template>

<style scoped>
.embla__container {
  display: flex;
}
.embla__slide {
  min-width: 340px;
}
</style>

================
File: AppThemeToggle.client.vue
================
<script setup lang="ts">
import { usePrimeVue } from 'primevue/config'

const mode = useColorMode()

const PrimeVue = usePrimeVue()
const isDark = computed(() => true)
// const isDark = computed(() => mode.preference === 'dark')

const toggle = () => {
  mode.preference = isDark.value = true
}

const darkTheme = 'aura-dark-teal'
const lightTheme = 'aura-light-teal'

watch(
  isDark,
  (isDarkNow) => {
    if (isDarkNow) {
      console.log('going dark')
      PrimeVue.changeTheme(lightTheme, darkTheme, 'theme-link', () => {})
    } else {
      // console.log('going light')
      // PrimeVue.changeTheme(darkTheme, lightTheme, 'theme-link', () => {})
    }
  },
  { immediate: true },
)

onMounted(() => {
  // const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches
  // mode.preference = prefersDarkMode ? 'dark' : 'light'
})

const context = reactive({
  isDark,
  toggle,
})
</script>

<template>
  <div class="flex">
    <!-- <AppThemeToggle v-slot="{ toggle, isDark }">
      <Icon
      :name="isDark ? 'heroicons:sun' : 'heroicons:moon'"
      class="cursor-pointer"
      size="24px"
      @click="toggle"
      />
    </AppThemeToggle>
    -->
    <slot v-bind="context" />
  </div>
</template>

================
File: AppTipTap.vue
================
<template>
  <div>
    <div v-if="editor">
      <PrimeButton
        :disabled="!editor.can().chain().focus().toggleBold().run()"
        :class="{ 'is-active': editor.isActive('bold') }"
        @click="editor.chain().focus().toggleBold().run()"
      >
        bold
      </PrimeButton>
      <PrimeButton
        :disabled="!editor.can().chain().focus().toggleItalic().run()"
        :class="{ 'is-active': editor.isActive('italic') }"
        @click="editor.chain().focus().toggleItalic().run()"
      >
        italic
      </PrimeButton>
      <PrimeButton
        :disabled="!editor.can().chain().focus().toggleStrike().run()"
        :class="{ 'is-active': editor.isActive('strike') }"
        @click="editor.chain().focus().toggleStrike().run()"
      >
        strike
      </PrimeButton>
      <PrimeButton
        :disabled="!editor.can().chain().focus().toggleCode().run()"
        :class="{ 'is-active': editor.isActive('code') }"
        @click="editor.chain().focus().toggleCode().run()"
      >
        code
      </PrimeButton>
      <PrimeButton @click="editor.chain().focus().unsetAllMarks().run()"> clear marks </PrimeButton>
      <PrimeButton @click="editor.chain().focus().clearNodes().run()"> clear nodes </PrimeButton>
      <PrimeButton
        :class="{ 'is-active': editor.isActive('paragraph') }"
        @click="editor.chain().focus().setParagraph().run()"
      >
        paragraph
      </PrimeButton>
      <PrimeButton
        :class="{ 'is-active': editor.isActive('heading', { level: 1 }) }"
        @click="editor.chain().focus().toggleHeading({ level: 1 }).run()"
      >
        h1
      </PrimeButton>
      <PrimeButton
        :class="{ 'is-active': editor.isActive('heading', { level: 2 }) }"
        @click="editor.chain().focus().toggleHeading({ level: 2 }).run()"
      >
        h2
      </PrimeButton>
      <PrimeButton
        :class="{ 'is-active': editor.isActive('heading', { level: 3 }) }"
        @click="editor.chain().focus().toggleHeading({ level: 3 }).run()"
      >
        h3
      </PrimeButton>
      <PrimeButton
        :class="{ 'is-active': editor.isActive('heading', { level: 4 }) }"
        @click="editor.chain().focus().toggleHeading({ level: 4 }).run()"
      >
        h4
      </PrimeButton>
      <PrimeButton
        :class="{ 'is-active': editor.isActive('heading', { level: 5 }) }"
        @click="editor.chain().focus().toggleHeading({ level: 5 }).run()"
      >
        h5
      </PrimeButton>
      <PrimeButton
        :class="{ 'is-active': editor.isActive('heading', { level: 6 }) }"
        @click="editor.chain().focus().toggleHeading({ level: 6 }).run()"
      >
        h6
      </PrimeButton>
      <PrimeButton
        :class="{ 'is-active': editor.isActive('bulletList') }"
        @click="editor.chain().focus().toggleBulletList().run()"
      >
        bullet list
      </PrimeButton>
      <PrimeButton
        :class="{ 'is-active': editor.isActive('orderedList') }"
        @click="editor.chain().focus().toggleOrderedList().run()"
      >
        ordered list
      </PrimeButton>
      <PrimeButton
        :class="{ 'is-active': editor.isActive('codeBlock') }"
        @click="editor.chain().focus().toggleCodeBlock().run()"
      >
        code block
      </PrimeButton>
      <PrimeButton
        :class="{ 'is-active': editor.isActive('blockquote') }"
        @click="editor.chain().focus().toggleBlockquote().run()"
      >
        blockquote
      </PrimeButton>
      <PrimeButton @click="editor.chain().focus().setHorizontalRule().run()">
        horizontal rule
      </PrimeButton>
      <PrimeButton @click="editor.chain().focus().setHardBreak().run()"> hard break </PrimeButton>
      <PrimeButton
        :disabled="!editor.can().chain().focus().undo().run()"
        @click="editor.chain().focus().undo().run()"
      >
        undo
      </PrimeButton>
      <PrimeButton
        :disabled="!editor.can().chain().focus().redo().run()"
        @click="editor.chain().focus().redo().run()"
      >
        redo
      </PrimeButton>
    </div>
    <TiptapEditorContent :editor="editor" />
  </div>
</template>

<script setup lang="ts">
const editor = useEditor({
  content: '<p>I\'m running Tiptap with Vue.js. 🎉</p>',
  extensions: [TiptapStarterKit],
})

onBeforeUnmount(() => {
  unref(editor).destroy()
})
</script>

================
File: AppVideoModal.vue
================
<script setup lang="ts">
const isOpen = ref(false)

const handleClicked = () => {
  isOpen.value = true
}

type VideoType = {
  url: string
  thumbnail: string
  alt: string
}

defineProps({
  video: {
    type: Object as PropType<VideoType>,
    default: () => ({
      url: '',
      thumbnail: '',
      alt: '',
    }),
  },
})
</script>

<template>
  <PrimeCard
    :pt="{
      body: 'py-2 px-1',
    }"
    :pt-options="{ mergeProps: true, mergeSections: true }"
  >
    <template #content>
      <PrimeButton
        class="relative flex items-center justify-center"
        link
        @click="handleClicked()"
      >
        <IBImage
          :img="{
            src: video.thumbnail,
            alt: video.alt,
            height: '480px',
            width: '840px',
            sizes: '100vw lg:50vw',
          }"
        />
        <Icon
          name="mdi:play"
          class="absolute"
          size="72px"
        />
      </PrimeButton>

      <PrimeDialog
        v-model:visible="isOpen"
        modal
        :style="{ width: '60rem' }"
        :breakpoints="{ '1199px': '75vw', '575px': '90vw' }"
      >
        <template #header>
          <h2 class="text-2xl font-semibold"> Watch the video </h2>
        </template>
        <div class="relative flex aspect-[16/9] w-full max-w-[1140px]">
          <iframe
            :src="video.url"
            title="YouTube video player"
            frameborder="0"
            class="aspect-video w-full"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowfullscreen
          />
        </div>
      </PrimeDialog>
    </template>
  </PrimeCard>
</template>

<style></style>

================
File: LoginButton.vue
================
<template>
  <button @click="initiateLogin"> Login </button>
</template>

<script setup lang="ts">
const user = ref(null)

const initiateLogin = () => {
  const authWindow = window.open(
    'https://auth.domain.com/auth-handler',
    'Auth',
    'width=600,height=600',
  )

  window.addEventListener(
    'message',
    (event) => {
      if (event.origin !== 'https://auth.domain.com') return

      if (event.data.type === 'AUTH_RESULT') {
        if (event.data.success) {
          user.value = event.data.user
          // Handle successful login
        } else {
          // Handle login error
        }
      }
    },
    false,
  )
}
</script>

================
File: Mascot.vue
================
<script setup lang="ts">
const isOpen = ref(false)

const message = `Hi, I’m Tara the Firefly—your quirky little mascot for saving the dark skies!
  Why me? Well, as a firefly, I know the magic of natural light—I shine brightest when the night is dark and calm.
  But with all the harsh artificial lights around, not only are the stars disappearing, but it’s confusing creatures like me, disturbing humans’ sleep, and even affecting health!
  Protecting the night sky isn’t just for stargazing—it’s about keeping our planet in balance.
  That’s why I’m on a mission to fight light pollution, and I’m thrilled to see experts and policymakers joining forces at events like India's Dark Sky Policy and Sustainability Symposium.
  Together, we can turn down the glare and bring back the beauty of the night for everyone!`
</script>

<template>
  <div class="hidden md:flex z-50 fixed items-start bottom-5 right-5">
    <IBImage
      class="h-auto flex-shrink-0"
      :img="{
        src: '/images/mascot_tara.png',
        alt: 'Tara the Firefly',
        height: 200,
      }"
    />
    <div
      class="relative max-w-xs p-4 bg-black bg-opacity-70 border-2 border-black rounded-lg shadow-[0_0_15px_4px_rgba(255,215,0,0.4)]"
    >
      <p>
        {{ isOpen ? message : `${message.slice(0, 240)}...` }}
        <NuxtLink v-ripple
          ><PrimeButton
            outlined
            as="a"
            class="!p-0"
            @click="isOpen = !isOpen"
            >{{ isOpen ? 'Read Less' : 'Read More' }}</PrimeButton
          ></NuxtLink
        >
      </p></div
    >
  </div>
</template>

================
File: NavTop.vue
================
<script setup lang="ts">
interface NavItem {
  key: string
  label: string
  icon: string
  visible: boolean
  disabled: boolean
  url?: string
  items?: NavItem[]
}

const websiteLinks: NavItem[] = [
  {
    key: 'about-us',
    label: 'About Us',
    icon: 'i-mdi-information-outline',
    visible: true,
    disabled: false,
    items: [
      {
        key: 'about',
        label: 'About',
        icon: 'i-mdi-information-outline',
        url: '/about',
        visible: true,
        disabled: false,
      },
      {
        key: 'team',
        label: 'Team',
        icon: 'i-mdi-account-group-outline',
        url: '/team',
        visible: true,
        disabled: false,
      },
      {
        key: 'contact',
        label: 'Contact',
        icon: 'i-mdi-phone-outline',
        url: '/contact',
        visible: true,
        disabled: false,
      },
    ],
  },
  {
    key: 'blog',
    label: 'Blog',
    icon: 'i-mdi-book-open-outline',
    visible: true,
    disabled: false,
    items: [
      {
        key: 'blog-home',
        label: 'All',
        icon: 'i-mdi-book-open-outline',
        url: '/blog/category/all',
        visible: true,
        disabled: false,
      },
      {
        key: 'blog-dark-sky-conservation',
        label: 'Conservation',
        icon: 'i-mdi-nature-outline',
        url: '/blog/category/dark-sky-conservation',
        visible: true,
        disabled: false,
      },
      {
        key: 'blog-people-of-space',
        label: 'People',
        icon: 'i-mdi-account-group-outline',
        url: '/blog/category/people-of-space',
        visible: true,
        disabled: false,
      },
      {
        key: 'blog-space-exploration',
        label: 'Exploration',
        icon: 'i-mdi-rocket-launch-outline',
        url: '/blog/category/space-exploration',
        visible: true,
        disabled: false,
      },
      {
        key: 'blog-sustainable-development',
        label: 'Sustainability',
        icon: 'i-mdi-leaf-outline',
        url: '/blog/category/sustainable-development',
        visible: true,
        disabled: false,
      },
    ],
  },
  {
    key: 'astronomy_events',
    label: 'Events',
    icon: 'i-mdi-calendar-month-outline',
    visible: true,
    disabled: false,
    items: [
      {
        key: 'astronomy_events',
        label: 'Astronomy Events',
        icon: 'i-mdi-rocket-launch-outline',
        url: '/events/astronomy-events',
        visible: true,
        disabled: false,
      },
      {
        key: 'telescope_workshop_2025',
        label: 'Telescope Workshop 2025',
        icon: 'i-mdi-telescope',
        url: '/events/telescope-workshop-2025',
        visible: true,
        disabled: false,
      },
    ],
  },
  {
    key: 'darksky',
    label: 'Dark Sky',
    icon: 'i-mdi-weather-night',
    visible: true,
    disabled: false,
    items: [
      {
        key: 'darkskyAbout',
        label: 'About',
        icon: 'i-mdi-weather-night',
        url: '/darksky',
        visible: true,
        disabled: false,
      },
      {
        key: 'conferences',
        label: 'Conferences',
        icon: 'i-mdi-presentation',
        url: '/conferences',
        visible: true,
        disabled: false,
      },
      {
        key: 'symposiums',
        label: 'Symposiums',
        icon: 'i-mdi-school-outline',
        url: '/symposiums',
        visible: true,
        disabled: false,
      },
    ],
  },
]

// Props
const props = defineProps({
  isCompact: {
    type: Boolean,
    default: false,
  },
  compactOnScroll: {
    type: Boolean,
    default: false,
  },
})

// Window scroll handling
const { y } = useWindowScroll()
const lastScrollY = ref(y.value)
const isScrollingDown = ref(false)
const isNavbarVisible = ref(true)

// Scroll threshold to trigger navbar changes
const scrollThreshold = 50
const isScrolled = computed(() => y.value > scrollThreshold)

// Navbar classes based on scroll position
const navbarClasses = computed(() => {
  const classes = []

  // Hide navbar when scrolling down beyond threshold
  if (!isNavbarVisible.value) {
    classes.push('animate-slide-up')
  } else if (isScrolled.value) {
    classes.push('animate-slide-down')
  }

  // Apply compact style when scrolled
  if (props.compactOnScroll && isScrolled.value) {
    classes.push('navbar-compact')
  }

  return classes.join(' ')
})

// Navbar background opacity and blur based on scroll
const glassStyle = computed(() => {
  const opacity = 0.1
  const blur = 16

  return {
    backgroundColor: `rgba(0, 0, 0, ${opacity})`,
    backdropFilter: `blur(${blur}px)`,
    borderBottom: isScrolled.value ? '1px solid rgba(100, 100, 150, 0.1)' : 'none',
  }
})

// Mobile menu handling
const isMobileMenuOpen = ref(false)
const isMobile = ref(false)

// Detect mobile size on component mount and window resize
onMounted(() => {
  checkMobile()
  window.addEventListener('resize', checkMobile)
})

onBeforeUnmount(() => {
  window.removeEventListener('resize', checkMobile)
})

function checkMobile() {
  isMobile.value = window.innerWidth < 1024
  if (isMobile.value) {
    isNavbarVisible.value = true
  }
}

// Watch scroll position to show/hide navbar
watch(y, (newY) => {
  if (isMobile.value) {
    isNavbarVisible.value = true
    return
  }

  isScrollingDown.value = newY > lastScrollY.value

  // Only hide navbar when scrolling down and past the threshold
  if (isScrollingDown.value && newY > scrollThreshold + 50) {
    isNavbarVisible.value = false
  } else if (!isScrollingDown.value) {
    isNavbarVisible.value = true
  }

  lastScrollY.value = newY
})

// Search component integration
const isSearchOpen = ref(false)
</script>

<template>
  <header
    class="fixed top-0 left-0 right-0 z-50 transition-all duration-300"
    :class="navbarClasses"
    :style="glassStyle"
  >
    <div class="wrapper mx-auto px-4">
      <div
        class="flex items-center justify-between h-16"
        :class="{ 'h-14': props.compactOnScroll && isScrolled }"
      >
        <!-- Logo and Brand -->
        <div class="flex-shrink-0 flex items-center gap-2">
          <NuxtLink
            to="/"
            class="flex items-center gap-2"
          >
            <div
              class="h-9 w-9 bg-white rounded-md p-1 flex items-center justify-center border border-primary-100/20"
            >
              <IBImage
                :img="{ src: '/astronera-logo.jpg' }"
                class="h-full w-full"
              />
            </div>
            <div class="flex flex-col leading-none">
              <span class="text-primary-400 font-bold text-sm">Astron</span>
              <span class="text-white font-bold text-sm">Era</span>
            </div>
          </NuxtLink>
        </div>

        <!-- Desktop Navigation -->
        <nav class="hidden lg:flex items-center space-x-1">
          <div
            v-for="item in websiteLinks"
            :key="item.key"
            class="relative group"
          >
            <button
              class="px-3 py-2 rounded-md text-white font-medium hover:bg-primary-50/50 hover:text-primary-600 transition-colors"
              @click="item.items && item.items.length ? null : navigateTo(item.url || '/')"
            >
              <div class="flex items-center gap-1">
                <Icon
                  :name="item.icon"
                  class="w-4 h-4"
                />
                <span>{{ item.label }}</span>
                <Icon
                  v-if="item.items && item.items.length"
                  name="i-mdi-chevron-down"
                  class="w-4 h-4"
                />
              </div>
            </button>

            <!-- Dropdown for desktop -->
            <div
              v-if="item.items && item.items.length"
              class="absolute top-full left-0 mt-1 w-48 rounded-md shadow-lg background backdrop-blur-md border border-color opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50"
            >
              <div class="py-1">
                <NuxtLink
                  v-for="subItem in item.items"
                  :key="subItem.key"
                  :to="subItem.url || '/'"
                  class="block px-4 py-2 text-sm text-gray-100 hover:bg-primary-50/50 hover:text-primary-600"
                >
                  <div class="flex items-center gap-2">
                    <Icon
                      :name="subItem.icon"
                      class="w-4 h-4"
                    />
                    <span>{{ subItem.label }}</span>
                  </div>
                </NuxtLink>
              </div>
            </div>
          </div>
        </nav>

        <!-- Right side actions -->
        <div class="flex items-center gap-2">
          <!-- Search Button -->
          <BlogSearch
            :collection="['blog', 'docs']"
            button-class="text-white"
            button-label=""
            auto-navigate
          />

          <!-- Authentication buttons -->
          <div class="hidden lg:flex items-center gap-2">
            <NuxtLink
              to="https://github.com/incubrain/astrotribe"
              target="_blank"
              class="p-2 text-white"
            >
              <Icon
                name="i-mdi-github"
                size="20"
              />
            </NuxtLink>

            <NuxtLink
              v-ripple
              :to="$config.public.authURL"
            >
              <PrimeButton
                severity="secondary"
                link
                class="px-4 py-2"
                label="Login"
              />
            </NuxtLink>

            <NuxtLink
              v-ripple
              :to="`${$config.public.authURL}/register`"
            >
              <PrimeButton
                severity="primary"
                class="px-4 py-2 bg-primary-600 hover:bg-primary-700"
                label="Join AstronEra"
              />
            </NuxtLink>
          </div>

          <!-- Mobile menu button -->
          <button
            class="lg:hidden p-2 rounded-md text-white focus:outline-none"
            @click="isMobileMenuOpen = !isMobileMenuOpen"
          >
            <Icon
              :name="isMobileMenuOpen ? 'i-mdi-close' : 'i-mdi-menu'"
              size="20"
            />
          </button>
        </div>
      </div>
    </div>

    <!-- Mobile Navigation -->
    <div
      v-if="isMobileMenuOpen"
      class="lg:hidden bg-black/05 backdrop-blur-md border-t border-primary-100/30 shadow-lg"
    >
      <div class="px-2 pt-2 pb-3 space-y-1">
        <div
          v-for="item in websiteLinks"
          :key="item.key"
          class="mobile-nav-item"
        >
          <div
            class="px-3 py-2 rounded-md text-white font-medium cursor-pointer"
            @click="item.url ? navigateTo(item.url) : null"
          >
            <div class="flex items-center justify-between">
              <div class="flex items-center gap-2">
                <Icon
                  :name="item.icon"
                  size="20"
                />
                <span>{{ item.label }}</span>
              </div>
              <Icon
                v-if="item.items && item.items.length"
                name="i-mdi-chevron-down"
                size="20"
              />
            </div>
          </div>

          <div
            v-if="item.items && item.items.length"
            class="pl-4 mt-1 space-y-1"
          >
            <NuxtLink
              v-for="subItem in item.items"
              :key="subItem.key"
              :to="subItem.url || '/'"
              class="block px-3 py-2 rounded-md text-white text-sm"
            >
              <div class="flex items-center gap-2">
                <Icon
                  :name="subItem.icon"
                  size="20"
                />
                <span>{{ subItem.label }}</span>
              </div>
            </NuxtLink>
          </div>
        </div>

        <!-- Mobile auth buttons -->
        <div class="pt-4 border-t border-primary-100 flex flex-col gap-2">
          <NuxtLink
            v-ripple
            :to="$config.public.authURL"
            class="w-full"
          >
            <PrimeButton
              severity="secondary"
              outlined
              class="w-full"
              label="Login"
            />
          </NuxtLink>

          <NuxtLink
            v-ripple
            :to="`${$config.public.authURL}/register`"
            class="w-full"
          >
            <PrimeButton
              severity="primary"
              class="w-full"
              label="Join AstronEra"
            />
          </NuxtLink>
        </div>
      </div>
    </div>
  </header>
</template>

<style scoped>
/* Animations for navbar */
@keyframes slide-down {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slide-up {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-100%);
  }
}

.animate-slide-down {
  animation: slide-down 0.3s ease forwards;
}

.animate-slide-up {
  animation: slide-up 0.3s ease forwards;
}

/* Transition for compact navbar */
.navbar-compact {
  box-shadow:
    0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

/* Ensure smooth transitions */
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}
</style>

================
File: Pagination.vue
================
<script setup lang="ts">
defineProps({
  currentPage: {
    type: Number,
    required: true,
  },
  totalPages: {
    type: Number,
    required: true,
  },
  baseUrl: {
    type: String,
    required: true,
  },
})
</script>

<template>
  <div
    v-if="totalPages > 1"
    class="flex justify-center my-8"
  >
    <div class="flex gap-2">
      <!-- Previous page -->
      <NuxtLink
        v-if="currentPage > 1"
        :to="
          currentPage === 2 && baseUrl.includes('/page')
            ? baseUrl.replace('/page', '')
            : `${baseUrl}/${currentPage - 1}`
        "
        class="px-4 py-2 rounded bg-primary-800 hover:bg-primary-700"
      >
        <Icon
          name="i-lucide-chevron-left"
          class="w-5 h-5"
        />
      </NuxtLink>

      <!-- Page numbers -->
      <template
        v-for="page in totalPages"
        :key="page"
      >
        <NuxtLink
          v-if="page === 1 && baseUrl.includes('/page')"
          :to="baseUrl.replace('/page', '')"
          :class="[
            'px-4 py-2 rounded',
            currentPage === 1 ? 'bg-primary-600' : 'bg-primary-800 hover:bg-primary-700',
          ]"
        >
          {{ page }}
        </NuxtLink>
        <NuxtLink
          v-else
          :to="page === 1 ? baseUrl : `${baseUrl}/${page}`"
          :class="[
            'px-4 py-2 rounded',
            currentPage === page ? 'bg-primary-600' : 'bg-primary-800 hover:bg-primary-700',
          ]"
        >
          {{ page }}
        </NuxtLink>
      </template>

      <!-- Next page -->
      <NuxtLink
        v-if="currentPage < totalPages"
        :to="`${baseUrl}/${currentPage + 1}`"
        class="px-4 py-2 rounded bg-primary-800 hover:bg-primary-700"
      >
        <Icon
          name="i-lucide-chevron-right"
          class="w-5 h-5"
        />
      </NuxtLink>
    </div>
  </div>
</template>



================================================================
End of Codebase
================================================================
