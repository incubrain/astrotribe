{{! templates/schema/transform.methods.hbs }}
/** * Transformation methods for
{{model.name}}
*/ export class
{{model.name}}Transformer { /** * Transform entity to DTO */ static toDTO(entity: any):
{{model.name}}DTO { return plainToClass({{model.name}}DTO, entity, { excludeExtraneousValues: true,
enableImplicitConversion: true }); } /** * Transform DTO to entity */ static fromDTO(dto:
{{model.name}}DTO): any { return classToPlain(dto, { excludeExtraneousValues: true }); }

{{#if hasRelations}}
  /** * Transform entity to DTO including relations */ static toDTOWithRelations(entity: any):
  {{model.name}}DTO { const dto = this.toDTO(entity);
  {{#each model.relationships}}
    if (entity.{{name}}) { dto.{{name}}
    =
    {{#if isArray}}
      entity.{{name}}.map(item =>
      {{type}}Transformer.toDTO(item))
    {{else}}
      {{type}}Transformer.toDTO(entity.{{name}})
    {{/if}}; }
  {{/each}}
  return dto; }
{{/if}}
}