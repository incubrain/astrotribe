{{! templates/dto/view.dto.hbs }}
import { ApiProperty } from '@nestjs/swagger'; import { Transform } from 'class-transformer'; import
{ IsString, IsNumber, IsBoolean, IsDate, IsOptional, IsNotEmpty, IsUUID, IsInt, IsEnum, IsJSON }
from 'class-validator'; /** *
{{model.documentation.description}}
* Generated from database view:
{{model.viewMetadata.sourceQuery}}
*/ export class
{{model.name}}ViewDTO {
{{#each model.fields}}
  /** *
  {{documentation.description}}
  {{#if documentation.example}}
    * @example
    {{documentation.example}}
  {{/if}}
  */
  {{#if isRequired}}
    @IsNotEmpty()
  {{else}}
    @IsOptional()
  {{/if}}
  @ApiProperty({ description: '{{documentation.description}}', type: () =>
  {{swaggerType}}, required:
  {{isRequired}},
  {{#if isArray}}
    isArray: true,
  {{/if}}
  })
  {{#each validationRules}}
    @{{decorator}}({{#if params}}{{params}}{{/if}})
  {{/each}}
  {{#if isComputed}}
    @IsComputed()
  {{/if}}
  {{#each transformationRules}}
    @Transform({{{this}}})
  {{/each}}
  {{name}}{{#unless isRequired}}?{{/unless}}:
  {{type}};

{{/each}}

{{#if model.viewMetadata.computedColumns.length}}
  // Computed columns
  {{#each model.viewMetadata.computedColumns}}
    /** * Computed column:
    {{expression}}
    * Dependencies:
    {{dependsOn}}
    */ @ApiProperty({ description: 'Computed field', type: () =>
    {{returnType}}, }) @IsComputed()
    {{name}}:
    {{returnType}};

  {{/each}}
{{/if}}
}